Help on module basic:

NAME
    basic

DESCRIPTION
    # -*- coding: utf-8 -*-
    # vim:fileencoding=utf-8

CLASSES
    builtins.BaseException(builtins.object)
        NullException
    builtins.Exception(builtins.BaseException)
        SameFileError
    builtins.NameError(builtins.Exception)
        ObjectError(builtins.NameError, builtins.TypeError, builtins.ValueError)
    builtins.TypeError(builtins.Exception)
        ObjectError(builtins.NameError, builtins.TypeError, builtins.ValueError)
    builtins.ValueError(builtins.Exception)
        ObjectError(builtins.NameError, builtins.TypeError, builtins.ValueError)
    
    class NullException(builtins.BaseException)
     |  Method resolution order:
     |      NullException
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  __delattr__(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  __reduce__(...)
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __setattr__(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  __setstate__(...)
     |  
     |  __str__(self, /)
     |      Return str(self).
     |  
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  __cause__
     |      exception cause
     |  
     |  __context__
     |      exception context
     |  
     |  __dict__
     |  
     |  __suppress_context__
     |  
     |  __traceback__
     |  
     |  args
    
    class ObjectError(builtins.NameError, builtins.TypeError, builtins.ValueError)
     |  Method resolution order:
     |      ObjectError
     |      builtins.NameError
     |      builtins.TypeError
     |      builtins.ValueError
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, msg:str='The object is malformed.')
     |  
     |  __str__(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.NameError:
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  __delattr__(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __reduce__(...)
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __setattr__(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  __setstate__(...)
     |  
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  __cause__
     |      exception cause
     |  
     |  __context__
     |      exception context
     |  
     |  __dict__
     |  
     |  __suppress_context__
     |  
     |  __traceback__
     |  
     |  args
    
    class SameFileError(builtins.Exception)
     |  Method resolution order:
     |      SameFileError
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, msg:str='The source and target file are the same.')
     |  
     |  __str__(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  __delattr__(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __reduce__(...)
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __setattr__(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  __setstate__(...)
     |  
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  __cause__
     |      exception cause
     |  
     |  __context__
     |      exception context
     |  
     |  __dict__
     |  
     |  __suppress_context__
     |  
     |  __traceback__
     |  
     |  args

FUNCTIONS
    char2bitlen(_char:str) -> int
    
    clearscr() -> None
    
    csv2json(_filepath:str) -> str
    
    doeskeymvalue(_dict:dict) -> bool
    
    eny(_iter:<built-in function iter>) -> bool
    
    evaliter(_iter:<built-in function iter>) -> list
    
    execfile(_filename:str)
    
    ezcompile(_code:str)
    
    finddictkey(_dict:dict, search_val) -> str
    
    finddictkeys(_dict:dict, search_val) -> list
    
    getlinenum() -> int
    
    getwebpage(_address:str) -> str
    
    imported() -> list
    
    imports() -> list
    
    incde(i:int, j:int, delta:int=1) -> None
    
    int2bitlen(_int:int) -> int
    
    ipygrep(_find:str, _text:str) -> bool
    
    isbetween(_lo:int, _hi:int, _num:int) -> bool
    
    isbin(_bin:str) -> bool
    
    iscomplex(_obj) -> bool
    
    iscomplextype(_obj) -> bool
    
    isdefined(_var_name:str) -> bool
    
    isexe(fpath:str) -> bool
    
    isfrozen() -> bool
    
    ishex(_hex:str) -> bool
    
    isinpath(program:str) -> bool
    
    isiter(_iter:<built-in function iter>) -> bool
    
    ismodfrozen(module_name:str) -> bool
    
    ismodloaded(_module:str) -> bool
    
    isoct(_oct:str) -> bool
    
    isvalidcode(_code:str) -> bool
    
    listkeys(dict1:dict, dict2:dict) -> set
    
    lsmods() -> list
    
    mergestrdict(dict1:dict, dict2:dict) -> dict
    
    modexist(_module:str) -> bool
    
    modpath(module) -> str
    
    playmusic(_file:str) -> None
    
    pygrep(_find:str, _text:str) -> bool
    
    rmdupkey(_dict:dict) -> dict
    
    rmdupkey_casein(_dict:dict) -> dict
    
    rmduplist(_list:list) -> list
    
    rmduplist_frozenset(_list:list) -> frozenset
    
    rmduplist_set(_list:list) -> set
    
    rmduplist_tuple(_list:list) -> tuple
    
    rmdupval(_dict:dict) -> dict
    
    rmfalse(_iter:<built-in function iter>) -> list
    
    rmmod(_modname:str)
    
    sortlistlong2short(_list:list) -> None
    
    sortlistshort2long(_list:list) -> None
    
    wherecurmods() -> list
    
    wheremods() -> list
    
    wlong(_int32:int) -> bytes
    
    words_in_str(_text:str, _wordlist:list) -> bool
    
    words_not_in_str(_text:str, _wordlist:list) -> bool

DATA
    __all__ = ['SameFileError', 'ObjectError', 'NullException', 'rmfalse',...

FILE
    /media/collier/PROGRAMMING/PROJECTS/PyBooster/pybooster/basic.py


