Help on module metric:

NAME
    metric

DESCRIPTION
    # -*- coding: utf-8 -*-
    # vim:fileencoding=utf-8

FUNCTIONS
    siunits2base(_measurement:tuple) -> tuple
    
    str2tupleunit(_str:str) -> tuple

DATA
    ATTO_UNITS = ('am', 'aV', 'aA', 'aΩ')
    CENTI_UNITS = ('cm', 'cV', 'cA', 'cΩ')
    DECA_UNITS = ('dam', 'daV', 'daA', 'daΩ')
    DECI_UNITS = ('dm', 'dV', 'dA', 'dΩ')
    EXA_UNITS = ('Em', 'EV', 'EA', 'EΩ')
    FEMTO_UNITS = ('fm', 'fV', 'fA', 'fΩ')
    GIGA_UNITS = ('Gm', 'GV', 'GA', 'GΩ')
    HECTO_UNITS = ('hm', 'hV', 'hA', 'hΩ')
    KILO_UNITS = ('km', 'kV', 'kA', 'kΩ')
    MEGA_UNITS = ('Mm', 'MV', 'MA', 'MΩ')
    METRIC_PREFIX = {'atto': ('a', 1e-18), 'centi': ('c', 0.01), 'deca': (...
    MICRO_UNITS = ('μm', 'μV', 'μA', 'μΩ')
    MILLI_UNITS = ('mm', 'mV', 'mA', 'mΩ')
    NANO_UNITS = ('nm', 'nV', 'nA', 'nΩ')
    NON_STANDARD_PREFIX = {'hella': ('H', 1000000000000000000000000000), '...
    PETA_UNITS = ('Pm', 'PV', 'PA', 'PΩ')
    PICO_UNITS = ('pm', 'pV', 'pA', 'pΩ')
    SIUNITS = (('ym', 'yV', 'yA', 'yΩ'), ('zm', 'zV', 'zA', 'zΩ'), ('am', ...
    TERA_UNITS = ('Tm', 'TV', 'TA', 'TΩ')
    YOCTO_UNITS = ('ym', 'yV', 'yA', 'yΩ')
    YOTTA_UNITS = ('Ym', 'YV', 'YA', 'YΩ')
    ZEPTO_UNITS = ('zm', 'zV', 'zA', 'zΩ')
    ZETTA_UNITS = ('Zm', 'ZV', 'ZA', 'ZΩ')
    __all__ = ['YOCTO_UNITS', 'ZEPTO_UNITS', 'ATTO_UNITS', 'FEMTO_UNITS', ...

FILE
    /media/collier/PROGRAMMING/PROJECTS/PyBooster/pybooster/metric.py


