#!/bin/bash
# -*- coding: utf-8 -*-
# vim:fileencoding=utf-8
# @author Devyn Collier Johnson <DevynCJohnson@Gmail.com>
# @brief Wrapped Pip
# @copyright LGPLv3
# @section License
#GNU Lesser General Public License v3
#Copyright (c) Devyn Collier Johnson, All rights reserved.
#
#This library is free software; you can redistribute it and/or
#modify it under the terms of the GNU Lesser General Public
#License as published by the Free Software Foundation; either
#version 3.0 of the License, or (at your option) any later version.
#
#This library is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
#Lesser General Public License for more details.
#
#You should have received a copy of the GNU Lesser General Public
#License along with this library.


# GLOBALS #
export SHDIR=${BASH_SOURCE%/*}
export version=2016.01.01
[[ ! "$(which pip2)" ]] && { export __pip2__="$SHDIR/pip2"; };
[[ ! "$(which pip3)" ]] && { export __pip3__="$SHDIR/pip3"; };
[[ "$(which pip2)" ]] && { export __pip2__="pip2"; };
[[ "$(which pip3)" ]] && { export __pip3__="pip3"; };


# FUNCTIONS #
function Help {
    echo ""
    echo "=====  Wrapped Pip (wpip)  ====="
    echo "Wrapper for running pip(2/3) as Root user (when needed)"
    echo "By default, this installs the specified module for Python3."
    echo "Usage: wpip [parameters]"
    echo "Example: wpip -l MetaPython"
    echo "Options:"
    echo "-h,--help           Display help info"
    echo "-v,--version        Display version"
    echo "-2                  Specify Python2"
    echo "-3                  Specify Python3 (default)"
    echo "-a                  Specify Python 2 & 3"
    echo "-u                  Uninstall"
    echo "--list              List installed packages"
    echo ""
}


function _pip2 {  # Python2 pip
    if [ "$_u" == 1 ]; then
        sudo "$__pip2__" uninstall "$LIB"
    elif [ "$_list" == 1 ]; then
        "$__pip2__" freeze
    else
        sudo "$__pip2__" install "$LIB"
    fi
}


function _pip3 {  # Python3 pip
    if [ "$_u" == 1 ]; then
        sudo "$__pip3__" uninstall "$LIB"
    elif [ "$_list" == 1 ]; then
        "$__pip3__" freeze
    else
        sudo "$__pip3__" install "$LIB"
    fi
}


# PARAMETERS + GETOPTS #
_2=0
_3=0
_a=0
_l=0
_list=0
_u=0
GOPTS=$(getopt -o 23ahl:uv \
    --long \
    list,version,help \
    -- "$@")
eval set -- "$GOPTS"
while true; do
    case "$1" in
        -h|--help)
            shift
            Help
        ;;
        -v|--version)
            shift
            echo $version
        ;;
        -2)
            _2=1
            shift
        ;;
        -3)
            _3=1
            shift
        ;;
        -a)
            _a=1
            shift
        ;;
        -l)
            _l=1
            shift
            export LIB=$1
            shift
        ;;
        -u)
            _u=1
            shift
        ;;
        --list)
            _list=1
            shift
        ;;
        --)  # End
            shift
            break
        ;;
        *)  # getopts error
            echo "GETOPTS ERROR!"
            exit 1
        ;;
    esac
done


# MANAGE CONFLICTS #
[[ "$_a" == 0 && "$_2" == 1 && "$_3" == 1 ]] && { _2=0; _3=0; _a=1; };
[[ "$_a" == 1 && "$_3" == 1 ]] && { _3=0; };
[[ "$_a" == 1 && "$_2" == 1 ]] && { _2=0; };
[[ "$_a" == 0 && "$_2" == 0 && "$_3" == 0 ]] && { _3=1; };


# MAIN #
if [ "$_2" == 1 -a "$_l" == 1 ]; then
    _pip2
elif [ "$_3" == 1 -a "$_l" == 1 ]; then
    _pip3
elif [ "$_a" == 1 -a "$_l" == 1 ]; then
    _pip2
    _pip3
else
    echo "ERROR! Invalid parameters."
fi


exit 0
