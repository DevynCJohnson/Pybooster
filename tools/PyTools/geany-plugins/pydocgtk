#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# vim:fileencoding=utf-8
"""@brief View Python documentation in a window
@file pydocgtk
@author Devyn Collier Johnson <DevynCJohnson@Gmail.com>
@copyright LGPLv3
@version 2016.03.22

@section LICENSE
GNU Lesser General Public License v3
Copyright (c) Devyn Collier Johnson, All rights reserved.

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 3.0 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library.
"""


# pylint: disable=C0103


from pydoc import getdoc, resolve
from signal import SIGINT, SIG_DFL, signal
from sys import argv

from gi.repository import Gtk


signal(SIGINT, SIG_DFL)


def main():
    def show_help(text: str):
        window = Gtk.Window(
            type=Gtk.WindowType.TOPLEVEL,
            title=r'PyDocGTK',
            default_width=500,
            default_height=400
        )
        window.set_skip_taskbar_hint(False)
        window.set_skip_pager_hint(False)
        window.set_decorated(True)
        window.connect(r'key-press-event', lambda a, b: Gtk.main_quit())
        window.connect(r'destroy', Gtk.main_quit)
        textbuffer = Gtk.TextBuffer()
        textbuffer.set_text(text)
        textview = Gtk.TextView(buffer=textbuffer)
        textview.set_wrap_mode(Gtk.WrapMode.WORD)
        textview.set_editable(False)
        textview.set_cursor_visible(False)
        scroll = Gtk.ScrolledWindow()
        scroll.set_shadow_type(Gtk.ShadowType.OUT)
        scroll.set_policy(Gtk.PolicyType.NEVER, Gtk.PolicyType.AUTOMATIC)
        scroll.add(textview)
        window.add(scroll)
        window.show_all()
        Gtk.main()
    try:
        _word = argv[1]
    except IndexError:
        show_help('Wrong Usage\nUsage: #pydocgtk NAME')
        raise SystemExit(1)
    try:
        show_help(getdoc(resolve(_word)[0]))
    except Exception:
        show_help(r'No document found')
        raise SystemExit(1)


if __name__ == '__main__':
    main()
