#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# vim:fileencoding=utf-8
"""@brief Convert CamelCase to lower_case_underscore and vice versa (in Geany)
@file CamelCase_Geany
@author Devyn Collier Johnson <DevynCJohnson@Gmail.com>
@copyright LGPLv3
@version 2016.03.22

@section DESCRIPTION
Configure Geany: Edit→Format→Send Selection to→Set Custom Commands

@section LICENSE
GNU Lesser General Public License v3
Copyright (c) Devyn Collier Johnson, All rights reserved.

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 3.0 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library.
"""


# pylint: disable=C0103


from sys import stdin, stdout


def camel_case_to_lower_case_underscore(string: str) -> list:
    """Split string by uppercase letters"""
    words = []
    from_char_position = 0
    for current_char_position, char in enumerate(string):
        if char.isupper() and from_char_position < current_char_position:
            words.append(string[from_char_position:current_char_position].lower())
            from_char_position = current_char_position
    words.append(string[from_char_position:].lower())
    return '_'.join(words)


def lower_case_underscore_to_camel_case(string: str):
    """Convert string or unicode from lowercase-underscore to camel-case"""
    splitted_string = string.split(r'_')
    class_ = string.__class__
    return splitted_string[0] + class_.join('', map(class_.capitalize, splitted_string[1:]))


def detect_conversion_method(data: str):
    if r'_' in data:
        return lower_case_underscore_to_camel_case
    else:
        return camel_case_to_lower_case_underscore


def main():
    data = stdin.read()
    conversion_method = detect_conversion_method(data)
    result = conversion_method(data)
    stdout.write(result)


if __name__ == '__main__':
    main()
