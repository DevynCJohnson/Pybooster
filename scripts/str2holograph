#!/usr/bin/env python3
# -*- coding: utf-8; Mode: Python; indent-tabs-mode: nil; tab-width: 4 -*-
# vim: set fileencoding=utf-8 filetype=python syntax=python.doxygen fileformat=unix tabstop=4 expandtab :
# kate: encoding utf-8; bom off; syntax python; indent-mode python; eol unix; replace-tabs off; indent-width 4; tab-width 4; remove-trailing-space on;
"""@brief Convert the characters in the string to their holograph equivalents.

@file str2holograph
@version 2020.07.04
@author Devyn Collier Johnson <DevynCJohnson@Gmail.com>
@copyright LGPLv3

@section DESCRIPTION
This script can be integrated into Geany to convert characters to their numerical representation in the selection.
Configure Geany: Edit→Format→Send Selection to→Set Custom Commands

@section LICENSE
GNU Lesser General Public License v3
Copyright (c) Devyn Collier Johnson, All rights reserved.

This software is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This software is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with this software.
"""


from sys import argv, stdin, stdout

from pybooster.strtools import str2holograph


if __name__ == '__main__':
    if len(argv) == 1:  # Pipe
        DATA = stdin.read()
        stdout.write(str2holograph(DATA))
    elif argv[1].casefold() in {r'help', r'--help', r'-h', r'--usage', r'?'}:  # Help
        stdout.write('Usage 1: command | str2holograph\nUsage 2: str2holograph "string"\nConvert the characters in the string to their holograph equivalents\n')
    elif argv[1]:  # String as argument
        stdout.write(str2holograph(argv[1]) + '\n')
    else:  # Help
        stdout.write('Usage 1: command | str2holograph\nUsage 2: str2holograph "string"\nConvert the characters in the string to their holograph equivalents\n')
