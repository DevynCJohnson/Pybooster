#!/bin/sh
# -*- coding: utf-8-unix; Mode: Shell; indent-tabs-mode: nil; tab-width: 4 -*-
# vim: set fileencoding=utf-8 filetype=shell syn=sh.doxygen fileformat=unix tabstop=4 expandtab :
# kate: encoding utf-8; bom off; syntax shell; indent-mode normal; eol unix; replace-tabs on; indent-width 4; tab-width 4; remove-trailing-space on; line-numbers on;
# @brief Wrapper for scanning C source code with various syntax checkers
# @file canalysis
# @version 2018.04.27
# @author Devyn Collier Johnson <DevynCJohnson@Gmail.com>
# @copyright Public Domain (CC0) - https://creativecommons.org/publicdomain/zero/1.0/


if [ "$1" = '--help' ] || [ "$1" = 'help' ] || [ "$1" = '-h' ]; then
    printf 'Specify the pathname of each C source code file to scan.\n'
    exit 0
elif [ -z "$1" ]; then
    printf 'ERROR: A parameter is required!\n' >&2
    exit 1
fi


firstpass=0

for file in "$@"; do
    [ ! -r "$file" ] && printf '%s: The specified file is non-readable or non-existent!\n' "$file" >&2 && continue

    if [ -x "$(command -v clint)" ]; then
        printf '\n\n======  *CLINT*  ======\n\n'
        clint "$file"
    elif [ "$firstpass" -eq 0 ]; then
        printf 'clint: command not found!\n' >&2
    fi

    if [ -x "$(command -v cppcheck)" ]; then
        printf '\n\n======  *CPPCHECK*  ======\n\n'
        cppcheck -j 1 --language=c --std=c11 -I. -I../include --force --inconclusive --inline-suppr --template=gcc --enable=performance --enable=portability --std=posix --enable=style --enable=warning "$file"
    elif [ "$firstpass" -eq 0 ]; then
        printf 'cppcheck: command not found!\n' >&2
    fi

    if [ -x "$(command -v KWStyle)" ]; then
        printf '\n\n======  *KWSTYLE*  ======\n\n'
        KWStyle -qv -gcc "$file"
    elif [ "$firstpass" -eq 0 ]; then
        printf 'KWStyle: command not found!\n' >&2
    fi

    if [ -x "$(command -v splint)" ]; then
        printf '\n\n======  *SPLINT*  ======\n\n'
        splint -nof -tmpdir /tmp/ -I. -I../include -nolib -strict -checks -preproc +stats "$file"
    elif [ "$firstpass" -eq 0 ]; then
        printf 'splint: command not found!\n' >&2
    fi

    printf '\n'

    firstpass=1

done
