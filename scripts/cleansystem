#!/bin/bash
# -*- coding: utf-8-unix; Mode: Shell; indent-tabs-mode: nil; tab-width: 4 -*-
# vim: set fileencoding=utf-8 filetype=shell syn=sh.doxygen fileformat=unix tabstop=4 expandtab :
# kate: encoding utf-8; bom off; syntax shell; indent-mode normal; eol unix; replace-tabs on; indent-width 4; tab-width 4; remove-trailing-space on; line-numbers on;
#' @brief Remove cache, logs, and other unneeded files
#' @file cleansystem
#' @version 2018.10.02
#' @author Devyn Collier Johnson <DevynCJohnson@Gmail.com>
#' @copyright Public Domain (CC0) - https://creativecommons.org/publicdomain/zero/1.0/


# FUNCTIONS #


Help() {
    printf '%s\n' '=====  CleanSystem  ====='
    printf '%s\n' 'Remove cache, logs, and other unneeded files'
    printf '%s\n' 'Without Root privileges, this utility only cleans the home folder of the current user.'
    printf '%s\n' "With Root privileges, this utility cleans system directories and the Root user's home folder."
    printf '%s\n' 'Usage: cleansystem [options]'
    printf '%s\n' 'Example: cleansystem --deep-clean -l  # Perform deep cleaning and remove non-English locales'
    printf '%s\n' 'Options:'
    printf '%s\n' '-h,--help                 Display help info'
    printf '%s\n' '-d,--deep-clean           Perform deep cleaning (scan system for *.tmp files and more)'
    printf '%s\n' '-l,--locales              Delete all locales except American English (en-US)'
    printf '%s\n' '-m,--mem,--mem-clean      Clean up memory'
    printf '%s\n' '-s,--ssd,--ssd-clean      Discard unused blocks on all mounted SSD storage units (requires fstrim)'
}


#' Delete a list of directories; The list is a space-delimited string
rmDirFromList() {
    if [ -n "${*:-}" ]; then
        for _pathname in "$@"; do
            rm -f -r "$_pathname" 2> /dev/null || true
        done
    fi
}


#' Delete a list of files; The list is a space-delimited string
rmFilesFromList() {
    if [ -n "${*:-}" ]; then
        for _filename in "$@"; do
            rm -f "$_filename" 2> /dev/null || true
        done
    fi
}


#' Scan the whole system for files to delete; This will search the system for the specified filename pattern (using RegEx)
rmfiles() {
    if [ -z "$1" ]; then
        printf 'ERROR: A parameter is required!\n' >&2
    elif [ "$1" = '--test' ] || [ "$1" = '-t' ] || [ "$1" = '--preview' ]; then
        if [ -n "${3:-}" ] && [ -d "$3" ]; then
            find "$3" -regextype awk -regex '^/bin/.*$' -prune -o -regextype awk -regex '^/boot/.*$' -prune -o -regextype awk -regex '^/dev/.*$' -prune -o -regextype awk -regex '^/usr/.*$' -prune -o -type f -regextype awk -regex ".*/${2}" -exec printf '%s\n' '{}' + 2> /dev/null
        elif [ -n "${2:-}" ]; then
            find . -regextype awk -regex '^/bin/.*$' -prune -o -regextype awk -regex '^/boot/.*$' -prune -o -regextype awk -regex '^/dev/.*$' -prune -o -regextype awk -regex '^/usr/.*$' -prune -o -type f -regextype awk -regex ".*/${2}" -exec printf '%s\n' '{}' + 2> /dev/null
        else
            printf 'ERROR: Parameters are missing or invalid!\n' >&2
        fi
    elif [ -n "${2:-}" ] && [ -d "$2" ]; then
        find "$2" -regextype awk -regex '^/bin/.*$' -prune -o -regextype awk -regex '^/boot/.*$' -prune -o -regextype awk -regex '^/dev/.*$' -prune -o -regextype awk -regex '^/usr/.*$' -prune -o -type f -regextype awk -regex ".*/${1}" -exec rm -f '{}' + 2> /dev/null
    else
        find . -regextype awk -regex '^/bin/.*$' -prune -o -regextype awk -regex '^/boot/.*$' -prune -o -regextype awk -regex '^/dev/.*$' -prune -o -regextype awk -regex '^/usr/.*$' -prune -o -type f -regextype awk -regex ".*/${1}" -exec rm -f '{}' + 2> /dev/null
    fi
}


if [ -x "$(command -v sqlite3)" ]; then
    #' Vacuum the specified SQLite database file
    sqlvacuum() {
        for file in "$@"; do
            if [ ! -r "$file" ]; then
                continue
            else
                echo 'vacuum;' | sqlite3 "$file"
            fi
        done
    }
fi


# GETOPT #


GOPT="$(getopt -o dhlms --long deep-clean,help,locales,mem,mem-clean,ssd,ssd-clean -- "$@")"
eval set -- "$GOPT"

deep_clean=0
del_locales=0
mem_clean=0
ssd_clean=0

while true; do
    case "$1" in
        -h|--help)  # Display help info
            Help
            exit 0
        ;;
        -d|--deep-clean)  # Perform deep cleaning
            deep_clean=1
            shift
        ;;
        -l|--locales)  # Delete all locales except American English (en-US)
            del_locales=1
            shift
        ;;
        -m|--mem|mem-clean)  # Clean up memory
            mem_clean=1
            shift
        ;;
        -s|--ssd|--ssd-clean)  # Discard unused blocks on all mounted SSD storage units
            ssd_clean=1
            shift
        ;;
        --)  # End
            shift
            break
        ;;
        *)  # Unknown/non-registered parameter
            printf 'Unknown parameter!\n' >&2
            exit 1
        ;;
    esac
done


# USER FILES #


# Cache, Cookies, History, Logs, Temporary Files, & Thumbnails

RM_DIRS="${HOME}/.adobe/Acrobat/*/Cache/ ${HOME}/.adobe/Flash_Player/AssetCache/ ${HOME}/.adobe/Flash_Player/NativeCache/ ${HOME}/.amsn/*/logs/date/ ${HOME}/.aMule/Temp/ ${HOME}/.bash_sessions/ ${HOME}/.beagle/Indexes/ ${HOME}/.beagle/Log/ ${HOME}/.beagle/TextCache/ ${HOME}/.cache/ ${HOME}/.config/emesene1.0/*/cache/ ${HOME}/.config/emesene1.0/*/logs/ ${HOME}/.config/gpodder/cache/ ${HOME}/.config/libreoffice/*/user/uno_packages/cache/ ${HOME}/.evolution/cache/ ${HOME}/.exaile/cache/ ${HOME}/.exaile/covers/ ${HOME}/.gftp/cache/ ${HOME}/.gimp-2*/tmp/ ${HOME}/.gnome2/rhythmbox/jamendo/ ${HOME}/.gnome2/rhythmbox/magnatune/ ${HOME}/.googleearth/Cache/ ${HOME}/.googleearth/Temp/ ${HOME}/.hardinfo/ ${HOME}/.hippo_opensim_viewer/cache/ ${HOME}/.hippo_opensim_viewer/logs/ ${HOME}/.icedtea/cache/ ${HOME}/.icedteaplugin/cache/ ${HOME}/.java/deployment/cache/ ${HOME}/.kde/cache-*/ ${HOME}/.kde4/cache-*/ ${HOME}/.libreoffice/*/user/config/uno_packages/cache/ ${HOME}/.libreoffice/*/user/uno_packages/cache/ ${HOME}/.liferea_*/cache/ ${HOME}/.liferea_*/mozilla/liferea/Cache/ ${HOME}/.local/share/zeitgeist/ ${HOME}/.macromedia/ ${HOME}/.miro/mozilla/Cache/ ${HOME}/.nexuiz/data/dlcache/ ${HOME}/.nv/ComputeCache/ ${HOME}/.nv/GLCache/ ${HOME}/.octave_hist ${HOME}/.purple/logs/ ${HOME}/.recoll/xapiandb/ ${HOME}/.secondlife/cache/ ${HOME}/.secondlife/logs/ ${HOME}/.ssr/logs/ ${HOME}/.warzone2100*/logs/ ${HOME}/.wine/drive_c/windows/temp/ ${HOME}/.wine/drive_c/winetrickstmp/ ${HOME}/.winetrickscache/ ${HOME}/.xchat2/logs/ ${HOME}/.xchat2/scrollback/ ${HOME}/.xchat2/xchatlogs/"

RM_FILES="${HOME}/*.log ${HOME}/.adobe/Acrobat/*/Preferences/reader_prefs ${HOME}/.amsn/*/displaypic/cache/*.dat ${HOME}/.amsn/*/displaypic/cache/*.png ${HOME}/.amsn/*/logs/*.log ${HOME}/.aMule/log* ${HOME}/.bash_history ${HOME}/.coffee_history ${HOME}/.config/audacious/log* ${HOME}/.config/easytag/*.history ${HOME}/.config/easytag/*.mask ${HOME}/.config/emesene2/*/log ${HOME}/.config/emesene2/*/log-journal ${HOME}/.config/real/rpcookies.txt ${HOME}/.config/Screenlets/*.log ${HOME}/.config/VirtualBox/*.log ${HOME}/.config/VirtualBox/*.log.* ${HOME}/.easytag/*.history ${HOME}/.easytag/*.mask ${HOME}/.easytag/easytag.log ${HOME}/.elinks/cookies ${HOME}/.elinks/globhist ${HOME}/.elinks/gotohist ${HOME}/.elinks/searchhist ${HOME}/.exaile/exaile.log ${HOME}/.gconf/apps/gnome-settings/gnome-panel/%gconf.xml ${HOME}/.gconf/apps/gnome-settings/gnome-search-tool/%gconf.xml ${HOME}/.gconf/desktop/%gconf.xml ${HOME}/.gconf/desktop/gnome/%gconf.xml ${HOME}/.gftp/gftp.log ${HOME}/.gnome2/gedit-metadata.xml ${HOME}/.idlerc/recent-files.lst ${HOME}/.kde/share/apps/gwenview/recentfolders/*rc ${HOME}/.kde/share/apps/gwenview/recenturls/*rc ${HOME}/.kde/share/apps/RecentDocuments/*.desktop ${HOME}/.kde4/share/apps/gwenview/recentfolders/*rc ${HOME}/.kde4/share/apps/gwenview/recenturls/*rc ${HOME}/.kde4/share/apps/RecentDocuments/*.desktop ${HOME}/.lesshst ${HOME}/.liferea_*/mozilla/liferea/cookies.sqlite ${HOME}/.links/links.his ${HOME}/.links2/links.his ${HOME}/.local/share/gnome-shell/application_state ${HOME}/.local/share/gvfs-metadata/*.log ${HOME}/.local/share/gvfs-metadata/*.log ${HOME}/.local/share/recently-used.xbel ${HOME}/.mandelbulb*/files.recent ${HOME}/.mc/filepos ${HOME}/.mc/history ${HOME}/.miro/*log ${HOME}/.miro/miro-log* ${HOME}/.nautilus/metafiles/*:*.xml ${HOME}/.nautilus/saved-session-* ${HOME}/.npm/_cacache ${HOME}/.ntrc_2/cookies.txt ${HOME}/.ntrc_2/history* ${HOME}/.python_history ${HOME}/.recently-used.xbel ${HOME}/.recently-used.xbel.* ${HOME}/.sh_history ${HOME}/.Skype/*/chatmsg[0-9]*.dbb ${HOME}/.Skype/*/chatsync/*/*.dat ${HOME}/.sqlite_history ${HOME}/.viminfo ${HOME}/.wget-hsts ${HOME}/.xine/catalog.cache ${HOME}/.xsession-errors ${HOME}/.xsession-errors.old"

rmDirFromList "${RM_DIRS[*]}"  # TODO: Locate and replace non-ascii character in this file
rmFilesFromList "${RM_FILES[*]}"

# Web Browser Cache, Logs, History, & More

RM_CHROME_DIRS="${HOME}/.config/chromium/Default/Thumbnails*/ ${HOME}/.config/chromium/Default/Application\ Cache/ ${HOME}/.cxchromium/chromium/drive_c/windows/profiles/crossover/Local\ Settings/Application\ Data/Google/Chrome/User\ Data/Default/Cache/ ${HOME}/.config/chromium/Default/databases/http*/ ${HOME}/.cxchromium/chromium/drive_c/windows/profiles/crossover/Local\ Settings/Application\ Data/Google/Chrome/User\ Data/Default/Cookies/ ${HOME}/.config/chromium/Default/Session\ Storage/ ${HOME}/.config/google-chrome/Default/Pepper\ Data/Shockwave\ Flash/CacheWritableAdobeRoot/ ${HOME}/.config/google-chrome/Default/Application\ Cache/ ${HOME}/.config/google-chrome/*/Pepper\ Data/Shockwave\ Flash/WritableRoot/ ${HOME}/.config/google-chrome/Default/Thumbnails/ ${HOME}/.config/google-chrome/Default/Session\ Storage/ ${HOME}/.config/google-chrome/Default/Sync\ Data\ Backup/"

RM_CHROME_FILES="${HOME}/.cxchromium/chromium/drive_c/windows/profiles/crossover/Local\ Settings/Application\ Data/Google/Chrome/User\ Data/Default/*istor* ${HOME}/.config/chromium/Default/Favicons ${HOME}/.config/chromium/Default/*istory ${HOME}/.config/chromium/Default/Histor* ${HOME}/.config/chromium/Default/Network\ Action\ Predict* ${HOME}/.config/chromium/Default/Origin\ Bound\ Certs-journal ${HOME}/.config/chromium/Default/Shortcut* ${HOME}/.config/chromium/Default/Cookies ${HOME}/.config/chromium/Default/Extension\ Cookies ${HOME}/.config/chromium/Default/Local\ Storage/http*localstorage ${HOME}/.config/chromium/Default/Web\ Data ${HOME}/.config/chromium/Default/Top\ Site* ${HOME}/.config/chromium/Default/Visited\ Links ${HOME}/.config/google-chrome/*/Cookies ${HOME}/.config/google-chrome/*/*Cookies ${HOME}/.config/google-chrome/*/Cookies* ${HOME}/.config/google-chrome/Default/Local\ Storage/http*localstorag* ${HOME}/.config/google-chrome/Default/databases/http*/* ${HOME}/.config/google-chrome/Default/Favicons ${HOME}/.config/google-chrome/chrome_shutdown_ms.txt ${HOME}/.config/google-chrome/Default/History ${HOME}/.config/google-chrome/Default/*Histor* ${HOME}/.config/google-chrome/Default/*Action\ Predicto* ${HOME}/.config/google-chrome/Default/Origin\ Bound\ Certs-journal ${HOME}/.config/google-chrome/Default/Shortcut* ${HOME}/.config/google-chrome/Default/Thumbnails-journal ${HOME}/.config/google-chrome/Default/Top\ Site* ${HOME}/.config/google-chrome/Default/Visited\ Links ${HOME}/.config/google-chrome/Default/History\ Index* ${HOME}/.config/google-chrome/Default/Current\ Session ${HOME}/.config/google-chrome/Default/Current\ Tabs ${HOME}/.config/google-chrome/Default/Last\ Session ${HOME}/.config/google-chrome/Default/Last\ Tabs"

rmDirFromList "${RM_CHROME_DIRS[*]}"  # Chrome/Chromium
rmFilesFromList "${RM_CHROME_FILES[*]}"

# Epiphany
rm -f -r ~/.gnome2/epiphany/favicon_cache/ ~/.gnome2/epiphany/mozilla/epiphany/Cache/ ~/.local/share/webkitgtk/localstorage/ 2> /dev/null || true
rm -f ~/.config/epiphany/cookies.sqlite ~/.gnome2/epiphany/ephy-favicon-cache.xml ~/.gnome2/epiphany/mozilla/epiphany/cookies.sqlite ~/.gnome2/epiphany/mozilla/epiphany/cookies.sqlite-journal ~/.gnome2/epiphany/mozilla/epiphany/cookies.txt 2> /dev/null || true
# Firefox & Seamonkey
if [ -d ~/.mozilla/ ]; then
    rm -f -r ~/.mozilla/firefox/Crash\ Reports/ ~/.mozilla/firefox/Pending\ Pings/ ~/.mozilla/seamonkey/*/Cache/ ~/.mozilla/seamonkey/Profiles/*/Cache/ 2> /dev/null || true
    rm -f ~/.mozilla/*/*/chatzilla/logs/*log ~/.mozilla/*/*/cookies.txt ~/.mozilla/*/*/history.dat ~/.mozilla/seamonkey/*/downloads.sqlite ~/.mozilla/seamonkey/*/urlbarhistory.sqlite 2> /dev/null || true
fi
# Konqueror
if [ -d ~/.kde/ ]; then
    rm -f -r ~/.kde/share/apps/kcookiejar/cookies/ ~/.kde/share/apps/konqueror/autosave/ ~/.kde4/share/apps/kcookiejar/cookies/ ~/.kde4/share/apps/konqueror/autosave/ 2> /dev/null || true
    rm -f ~/.kde/share/apps/konqueror/closeditems_saved ~/.kde/share/apps/konqueror/konq_history ~/.kde/share/config/konq_history ~/.kde4/share/apps/konqueror/closeditems_saved ~/.kde4/share/apps/konqueror/konq_history ~/.kde4/share/config/konq_history 2> /dev/null || true
fi
# Opera
if [ -d ~/.opera/ ]; then
    rm -f -r ~/.opera/*cache/ ~/.opera/cache*/ ~/.opera/cache/ ~/.opera/icons/ ~/.opera/pstorage/ ~/.opera/thumbnails/ 2> /dev/null || true
    rm -f ~/.opera/cookies4.dat ~/.opera/download.dat ~/.opera/global.dat ~/.opera/global_history.dat ~/.opera/search_field_history.dat ~/.opera/sessions/autosave.win ~/.opera/sessions/autosave.win.* ~/.opera/typed_history.xml ~/.opera/vlink4.dat ~/.opera/vps/*/md.dat 2> /dev/null || true
fi
# Thunderbird
if [ -d ~/.thunderbird/ ]; then
    rm -f -r ~/.thunderbird/Crash\ Reports/ ~/.thunderbird/*/crashes/ ~/.thunderbird/Profiles/*/crashes/ ~/.thunderbird/*/Cache/ ~/.thunderbird/Profiles/*/Cache/ 2> /dev/null || true
    rm -f ~/.thunderbird/*/*/cookies.sqlite ~/.thunderbird/*/cookies.sqlite 2> /dev/null || true
fi
# Tor
rm -f -r ~/.tor/*/.cache/ 2> /dev/null || true

# SQLite3 Cleaners

if [ -x "$(command -v sqlite3)" ]; then
    [ -f ~/.config/gpodder/database.sqlite ] && sqlvacuum ~/.config/gpodder/database.sqlite &
    sqlvacuum ~/.liferea_*/mozilla/liferea/*.sqlite &
    sqlvacuum ~/.liferea_*/liferea.db &
    # Chrome
    [ -d ~/.config/google-chrome/Default/ ] && sqlvacuum ~/.config/google-chrome/Default/Cookies ~/.config/google-chrome/Default/Extension\ Cookies ~/.config/google-chrome/Default/History ~/.config/google-chrome/Default/databases/Databases.db &
    # Epiphany
    [ -d ~/.gnome2/epiphany/mozilla/epiphany/ ] && sqlvacuum ~/.gnome2/epiphany/mozilla/epiphany/*.sqlite &
    # Firefox
    [ -d ~/.mozilla/firefox/ ] && (echo "DROP TABLE \`moz_inputhistory\`;" | sqlite3 ~/.mozilla/firefox/*/places.sqlite && sqlvacuum ~/.mozilla/firefox/*/*.sqlite >&2 2> /dev/null) &
    [ -d ~/.mozilla/firefox/Profiles/ ] && sqlvacuum ~/.mozilla/firefox/Profiles/*/*.sqlite &
    # Thunderbird
    [ -d ~/.thunderbird/ ] && sqlvacuum ~/.thunderbird/*/*.sqlite &
    [ -d ~/.thunderbird/Profiles/ ] && sqlvacuum ~/.thunderbird/Profiles/*/*.sqlite &
fi

# Clear Compiler Cache (CCACHE)

[ -x "$(command -v ccache)" ] && ccache --clear >&2 2> /dev/null &

# Recreate XDG menu

[ -x "$(command -v xdg-desktop-menu)" ] && xdg-desktop-menu forceupdate --mode user

# Recreate Font-Cache

[ -x "$(command -v fc-cache)" ] && fc-cache -f


# SYSTEM FILES #


_system="$(uname | tr '[:upper:]' '[:lower:]')"

[ -x "$(command -v npm)" ] && npm cache clean >&2 2> /dev/null &

# Apple-Specific Cache & Logs

if [ "${_system:-}" = 'darwin' ] && [ -d "${HOME}/Library" ]; then
    rm -f -r ~/Library/Caches/* ~/Library/Cookies/* ~/Library/Logs/* 2> /dev/null || true
    if [ -x "$(command -v brew)" ]; then  # Package Manager Cleanup
        brew prune
        brew cleanup -s
        rm -f -r "$(brew --cache)" 2> /dev/null || true
        brew doctor
    fi
fi

# Clean-Up Requiring Root Privileges

if [ "$(id -u)" -eq 0 ]; then
    # Fontconfig
    rm -f -r /var/cache/fontconfig/ /var/cache/fonts/ || true
    [ -x "$(command -v fc-cache)" ] && fc-cache -f -s &
    # Recreate System Font Cache
    [ -x "$(command -v xdg-desktop-menu)" ] && xdg-desktop-menu forceupdate --mode system &
    # Various Cleaners
    [ "$_system" = 'darwin' ] && [ -d /root/Library ] && (rm -f -r /root/Library/Caches/* /root/Library/Cookies/* /root/Library/Logs/* 2> /dev/null || true)
    # SQLite3 Cleaners
    if [ -x "$(command -v sqlite3)" ]; then
        sqlvacuum /var/cache/yum/*/*.sqlite
    fi
    # Cache from /var/
    rm -f -r /var/cache/app-info/ /var/cache/flashplugin-installer/ /var/log/* /var/cache/pbuilder/ || true
    rm -f /var/backups/alternatives* /var/backups/apt* /var/backups/dpkg.status* /var/backups/dpkg*.gz || true
    # Package Management
    if [ -x "$(command -v apt-get)" ]; then
        apt-get clean
        apt-get check
        apt-get autoremove
        rm -f -r /var/cache/apt-build/ /var/cache/apt-xapian-index/ || true
        [ -x "$(command -v update-apt-xapian-index)" ] && update-apt-xapian-index --force
        [ -d /var/lib/update-notifier/package-data-downloads/partial/ ] && rm -f /var/lib/update-notifier/package-data-downloads/partial/*.FAILED
        [ -d /etc/apt/sources.list.d/ ] && rm -f /etc/apt/sources.list.d/*.distUpgrade /etc/apt/sources.list.d/*.save
    elif [ -x "$(command -v dnf)" ]; then
        dnf clean all
        dnf check
        dnf autoremove
    elif [ -x "$(command -v eclean)" ] && [ -x "$(command -v eclean)" ]; then
        eclean distfiles
        emerge -u -D -N world
        eclean --depclean
    elif [ -x "$(command -v pacman)" ]; then
        pacman -S -c -c
        pacman -D -k
        pacman -R -s -
    elif [ -x "$(command -v yum)" ]; then
        yum clean all
        yum check
        yum autoremove
    elif [ -x "$(command -v zypper)" ]; then
        zypper clean
        zypper verify
        zypper remove --clean-deps
    fi
    # Delete Locales
    if [ "$del_locales" -eq 1 ]; then
        [ -d /usr/lib/libreoffice/share/autocorr/ ] && find /usr/lib/libreoffice/share/autocorr/ -regextype awk -regex '.*en\-US.+' -prune -o -type f -regextype awk -regex '.+/.+\.dat' -exec rm -f '{}' + 2> /dev/null &
        [ -d /usr/share/i18n/locales/ ] && find /usr/share/i18n/locales/ -name '/usr/share/i18n/locales/' -prune -o -name 'en_US' -prune -o -regextype awk -regex '.*/translit.+' -prune -o -name 'C' -prune -o -name 'POSIX' -prune -o -regextype awk -regex '.*/en@.+' -prune -o -type f -regextype awk -regex '/usr/share/i18n/locales/.+' -exec rm -f '{}' + 2> /dev/null &
        [ -d /usr/share/locale/ ] && find /usr/share/locale/ -name '/usr/share/locale/' -prune -o -regextype awk -regex '.*/en_US.*' -prune -o -name 'locale.alias' -prune -o -name 'en' -prune -o -regextype awk -regex '.*/en@.+' -prune -o -type d -regextype awk -regex '/usr/share/locale/.+' -exec rm -f -r '{}' + 2> /dev/null &
        [ -d /usr/share/locale-langpack/ ] && find /usr/share/locale-langpack/ -name '/usr/share/locale-langpack/' -prune -o -regextype awk -regex '.*/en_US.*' -prune -o -name 'en' -prune -o -regextype awk -regex '.*/en@.+' -prune -o -type d -regextype awk -regex '/usr/share/locale-langpack/.+' -exec rm -f -r '{}' + 2> /dev/null &
        [ -d /usr/share/man/ ] && find /usr/share/man/ -name '/usr/share/man/' -prune -o -regextype awk -regex '.*/man[1-8]' -prune -o -type d -regextype awk -regex '/usr/share/man/.+' -exec rm -f -r '{}' + 2> /dev/null &
        [ -d /usr/share/cups/locale/ ] && rm -f -r /usr/share/cups/locale/ &
    fi
    # Deep Clean
    if [ "$deep_clean" -eq 1 ]; then
        rmfiles '.+~$' /
        rmfiles '\.~lock\..*#$' /
        rmfiles '.*\.[Bb][Aa][Kk]$' /
        rmfiles '.*\.[Tt][Mm][Pp]$' /
        rmfiles '.*\.[Ll][Oo][Gg]$' /var/
        rmfiles '.*(\.|_|\-|)history$' /
        rmfiles '.*\.DS_Store$' /
        rmfiles '[Tt]humbs\.db$' /
    fi
    # Final Cleanup
    [ -x "$(command -v dmesg)" ] && dmesg -C
    [ -x "$(command -v mandb)" ] && mandb
    [ "$mem_clean" -eq 1 ] && [ -x "$(command -v sync)" ] && (sleep 1 && sync && sleep 2 && echo 3 > /proc/sys/vm/drop_caches)
    [ "$ssd_clean" -eq 1 ] && [ -x "$(command -v fstrim)" ] && fstrim -a -v
fi


# CLOSE #


printf 'The cleaning has completed.\n'
exit 0
