#!/usr/bin/env python3
# -*- coding: utf-8-unix; Mode: Python; indent-tabs-mode: nil; tab-width: 4 -*-
# vim: set fileencoding=utf-8 filetype=python syntax=python.doxygen fileformat=unix tabstop=4 expandtab :
# kate: encoding utf-8; bom off; syntax python; indent-mode python; eol unix; replace-tabs off; indent-width 4; tab-width 4; remove-trailing-space on; line-numbers on;
"""@brief Accept data from a pipe, hold it in a buffer until the data stream ends (plus 0.25 seconds), and then send it to stdout

@file pipebuf
@version 2019.03.28
@author Devyn Collier Johnson <DevynCJohnson@Gmail.com>
@copyright LGPLv3

@section LICENSE
GNU Lesser General Public License v3
Copyright (c) Devyn Collier Johnson, All rights reserved.

This software is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 3.0 of the License, or (at your option) any later version.

This software is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this software.
"""


from sys import argv, stderr, stdin, stdout
from time import sleep
from traceback import format_exc

from pybooster.fs import ensurefileexists, writebin2file


if __name__ == '__main__':
    try:
        DATABUF: str = stdin.read()
        sleep(0.25)
        stdout.write(DATABUF)
        if len(argv) == 3 and argv[1].lower() in {r'-f', r'--file'}:  # Pipe + Tee
            ensurefileexists(argv[2])
            writebin2file(argv[2], DATABUF)
    except SystemExit:
        pass
    except BaseException:
        stderr.write(format_exc() + '\n')
