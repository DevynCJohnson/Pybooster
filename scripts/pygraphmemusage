#!/bin/sh
# -*- coding: utf-8-unix; Mode: Shell; indent-tabs-mode: nil; tab-width: 4 -*-
# vim: set fileencoding=utf-8 filetype=shell syn=sh.doxygen fileformat=unix tabstop=4 expandtab :
# kate: encoding utf-8; bom off; syntax shell; indent-mode normal; eol unix; replace-tabs on; indent-width 4; tab-width 4; remove-trailing-space on;
#' @brief Graph the memory usage of a Python3 program
#' @file pygraphmemusage
#' @version 2019.07.25
#' @author Devyn Collier Johnson <DevynCJohnson@Gmail.com>
#' @copyright Public Domain (CC0) - https://creativecommons.org/publicdomain/zero/1.0/


if [ ! -x "$(command -v psrecord)" ]; then
    printf 'psrecord: command not found!\n' >&2
    exit 1
elif [ "${1:-}" = '--help' ] || [ "${1:-}" = '-h' ]; then
    printf 'pygraphmemusage PROCESS_NAME CHART_NAME [DURATION_SEC] [COMMAND]\nWhen specifying a command, set duration to "0" if the memory usage should be recorded the entire time\n'
fi


if [ -z "${1:-}" ]; then
    printf 'The process name must be specified!\n' >&2
    exit 1
elif [ -z "${2:-}" ]; then
    printf 'A name must be given to the chart image (without the file extension)!\n' >&2
    exit 1
fi

if [ -n "${3:-}" ] && [ "${3}" != '0' ]; then
    DURATION="--duration ${3}"
else
    DURATION=''
fi

EXECMD=0
[ -n "${4:-}" ] && EXECMD=1


if [ "$EXECMD" -eq 1 ]; then
    psrecord --include-children --interval 1 "${DURATION}" --plot "${HOME}/${2}.png" "${4}"
else
    PROCESS_PID="$(pgrep "$1")"
    [ -n "${PROCESS_PID:-}" ] && psrecord --include-children --interval 1 "${DURATION}" --plot "${HOME}/${2}.png" "$PROCESS_PID"
fi


[ ! -f "${HOME}/${2}.png" ] && exit 1

exit 0
