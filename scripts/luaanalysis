#!/bin/sh
# -*- coding: utf-8-unix; Mode: Shell; indent-tabs-mode: nil; tab-width: 4 -*-
# vim: set fileencoding=utf-8 filetype=shell syn=sh.doxygen fileformat=unix tabstop=4 expandtab :
# kate: encoding utf-8; bom off; syntax shell; indent-mode normal; eol unix; replace-tabs on; indent-width 4; tab-width 4; remove-trailing-space on; line-numbers on;
#' @brief Wrapper for scanning Lua source files with various syntax checkers
#' @file luaanalysis
#' @version 2018.12.28
#' @author Devyn Collier Johnson <DevynCJohnson@Gmail.com>
#' @copyright Public Domain (CC0) - https://creativecommons.org/publicdomain/zero/1.0/


if [ -z "${1:-}" ]; then
    printf 'ERROR: A parameter is required!\n' >&2
    exit 1
elif [ "$1" = '--help' ] || [ "$1" = 'help' ] || [ "$1" = '-h' ]; then
    printf 'Specify the pathname of each Lua source file to scan.\n'
    exit 0
fi


# SETUP #


export LANG='en_US.UTF-8'
export LC_ALL='C'
export LC_CTYPE='C'
export FirstLoopPass=0

# Use a faster alternative if possible
if [ -x "$(command -v mawk)" ]; then
    awk_cmd() { mawk "${1}"; }
elif [ -x "$(command -v nawk)" ]; then
    awk_cmd() { nawk "${1}"; }
else
    awk_cmd() { awk "${1}"; }
fi


# MAIN #


for file in "$@"; do
    { [ ! -r "$file" ] || [ -d "$file" ]; } && printf '%s: The specified file is non-readable or non-existent!\n' "$file" >&2 && continue

    if [ -x "$(command -v luacheck)" ]; then
        printf '======  *LUACHECK*  ======\n'
        luacheck --no-max-line-length --no-max-code-line-length --no-max-string-line-length --no-max-comment-line-length --no-config --no-cache --std max "$file" | awk_cmd '{ OFS=""; gsub(/^0$/, ""); if (NF > 0) { print; } }'
    elif [ "$FirstLoopPass" -eq 0 ]; then
        printf 'luacheck: command not found!\n' >&2
    fi

    if [ -x "$(command -v code-analysis)" ]; then
        code-analysis "$file"
    elif [ "$FirstLoopPass" -eq 0 ]; then
        printf 'code-analysis: command not found!\n' >&2
    fi

    FirstLoopPass=1

done
