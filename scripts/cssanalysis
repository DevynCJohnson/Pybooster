#!/bin/sh
# -*- coding: utf-8-unix; Mode: Shell; indent-tabs-mode: nil; tab-width: 4 -*-
# vim: set fileencoding=utf-8 filetype=shell syn=sh.doxygen fileformat=unix tabstop=4 expandtab :
# kate: encoding utf-8; bom off; syntax shell; indent-mode normal; eol unix; replace-tabs on; indent-width 4; tab-width 4; remove-trailing-space on; line-numbers on;
# @brief Wrapper for scanning CSS files with various syntax checkers
# @file cssanalysis
# @version 2018.08.31
# @author Devyn Collier Johnson <DevynCJohnson@Gmail.com>
# @copyright Public Domain (CC0) - https://creativecommons.org/publicdomain/zero/1.0/


if [ "$1" = '--help' ] || [ "$1" = 'help' ] || [ "$1" = '-h' ]; then
    printf 'Specify the pathname of each CSS file to scan.\n'
    exit 0
elif [ -z "$1" ]; then
    printf 'ERROR: A parameter is required!\n' >&2
    exit 1
fi


export FirstLoopPass=0


# MAIN #


for file in "$@"; do
    ([ ! -r "$file" ] || [ -d "$file" ]) && printf '%s: The specified file is non-readable or non-existent!\n' "$file" >&2 && continue

    if [ -x "$(command -v csslint)" ]; then
        printf '======  *CSSLINT*  ======\n'
        csslint --format=text "$file"
    elif [ "$FirstLoopPass" -eq 0 ]; then
        printf 'csslint: command not found!\n' >&2
    fi

    if [ -x "$(command -v code-analysis)" ]; then
        code-analysis "$file"
    elif [ "$FirstLoopPass" -eq 0 ]; then
        printf 'code-analysis: command not found!\n' >&2
    fi

    FirstLoopPass=1

done
