#!/usr/bin/env python3
# -*- coding: utf-8; Mode: Python; indent-tabs-mode: nil; tab-width: 4 -*-
# vim: set fileencoding=utf-8 filetype=python syntax=python.doxygen fileformat=unix tabstop=4 expandtab :
# kate: encoding utf-8; bom off; syntax python; indent-mode python; eol unix; replace-tabs off; indent-width 4; tab-width 4; remove-trailing-space on;
"""@brief View various information about a library or executable.

@file program-analyzer
@version 2020.02.03
@author Devyn Collier Johnson <DevynCJohnson@Gmail.com>
@copyright LGPLv3

@section LICENSE
GNU Lesser General Public License v3
Copyright (c) Devyn Collier Johnson, All rights reserved.

This software is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This software is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with this software.
"""


# pylint: disable=C0103,R0912,R0915


from datetime import datetime, timezone
from multiprocessing import cpu_count, Pool
from os import R_OK, access as fileaccess, stat
from os.path import (
    isdir,
    isfile,
    islink,
    lexists as pathexists,
    split as pathsplit
)
from signal import SIGINT, SIG_DFL, signal
from subprocess import getoutput, getstatusoutput  # nosec
from sys import argv, stderr
from typing import Any, List, Tuple, Union

from pybooster.filemagic import MIME_ENCODING, NONE_MAGIC
from pybooster.fs import convumask
from pybooster.system import is_program_aval

from gi import require_version
require_version(r'Gtk', r'3.0')
from gi.repository import Gtk  # noqa: E402  # pylint: disable=C0413


_GUI: str = '''<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated with glade 3.22.1

Copyright (C) LGPLv3

This file is part of Program-Analyzer.

Program-Analyzer is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Program-Analyzer is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with Program-Analyzer.  If not, see <http://www.gnu.org/licenses/>.

Author: Devyn Collier Johnson

-->
<interface>
  <requires lib="gtk+" version="3.20"/>
  <!-- interface-license-type lgplv3 -->
  <!-- interface-name Program-Analyzer -->
  <!-- interface-description Display the symbols and tables of a compiled program or library -->
  <!-- interface-copyright LGPLv3 -->
  <!-- interface-authors Devyn Collier Johnson -->
  <object class="GtkTextBuffer" id="buf_const"/>
  <object class="GtkTextBuffer" id="buf_dis"/>
  <object class="GtkTextBuffer" id="buf_dyn_reloc"/>
  <object class="GtkTextBuffer" id="buf_dyn_sym"/>
  <object class="GtkTextBuffer" id="buf_func"/>
  <object class="GtkTextBuffer" id="buf_headers"/>
  <object class="GtkTextBuffer" id="buf_ldconfig"/>
  <object class="GtkTextBuffer" id="buf_ldd"/>
  <object class="GtkTextBuffer" id="buf_nm_sym"/>
  <object class="GtkTextBuffer" id="buf_prop"/>
  <object class="GtkTextBuffer" id="buf_readelf"/>
  <object class="GtkTextBuffer" id="buf_size"/>
  <object class="GtkTextBuffer" id="buf_str"/>
  <object class="GtkTextBuffer" id="buf_sym"/>
  <object class="GtkApplicationWindow" id="ezwin">
    <property name="width_request">1600</property>
    <property name="height_request">1000</property>
    <property name="visible">True</property>
    <property name="can_focus">False</property>
    <property name="title">Program-Analyzer</property>
    <property name="window_position">center</property>
    <property name="default_width">1600</property>
    <property name="default_height">1000</property>
    <property name="icon_name">program-analyzer</property>
    <property name="has_resize_grip">True</property>
    <property name="show_menubar">False</property>
    <signal name="destroy" handler="_winexit" swapped="no"/>
    <child>
      <placeholder/>
    </child>
    <child>
      <object class="GtkBox" id="box">
        <property name="width_request">1600</property>
        <property name="height_request">1000</property>
        <property name="visible">True</property>
        <property name="can_focus">False</property>
        <property name="orientation">vertical</property>
        <child>
          <object class="GtkMenuBar" id="menubar">
            <property name="height_request">25</property>
            <property name="visible">True</property>
            <property name="can_focus">False</property>
            <child>
              <object class="GtkMenuItem" id="menu_item1">
                <property name="height_request">25</property>
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="label">_File</property>
                <property name="use_underline">True</property>
                <child type="submenu">
                  <object class="GtkMenu" id="file_menu">
                    <property name="height_request">100</property>
                    <property name="visible">True</property>
                    <property name="can_focus">False</property>
                    <property name="anchor_hints">GDK_ANCHOR_FLIP_X</property>
                    <property name="menu_type_hint">menu</property>
                    <child>
                      <object class="GtkImageMenuItem" id="menuitem_open">
                        <property name="label">gtk-open</property>
                        <property name="height_request">25</property>
                        <property name="visible">True</property>
                        <property name="can_focus">False</property>
                        <property name="tooltip_text">Open a binary file</property>
                        <property name="use_underline">True</property>
                        <property name="use_stock">True</property>
                        <property name="always_show_image">True</property>
                        <signal name="activate" handler="gtk_open" swapped="no"/>
                        <child internal-child="accessible">
                          <object class="AtkObject" id="menuitem_open-atkobject">
                            <property name="AtkObject::accessible-role" translatable="yes">menu-item</property>
                          </object>
                        </child>
                        <accelerator key="o" signal="activate" modifiers="GDK_CONTROL_MASK"/>
                      </object>
                    </child>
                    <child>
                      <object class="GtkImageMenuItem" id="menuitem_save">
                        <property name="label">gtk-save</property>
                        <property name="height_request">25</property>
                        <property name="visible">True</property>
                        <property name="can_focus">False</property>
                        <property name="tooltip_text">Save</property>
                        <property name="use_underline">True</property>
                        <property name="use_stock">True</property>
                        <property name="always_show_image">True</property>
                        <signal name="activate" handler="gtk_save" swapped="no"/>
                        <child internal-child="accessible">
                          <object class="AtkObject" id="menuitem_save-atkobject">
                            <property name="AtkObject::accessible-role" translatable="yes">menu-item</property>
                          </object>
                        </child>
                        <accelerator key="s" signal="activate" modifiers="GDK_CONTROL_MASK"/>
                      </object>
                    </child>
                    <child>
                      <object class="GtkImageMenuItem" id="menuitem_saveas">
                        <property name="label">gtk-save-as</property>
                        <property name="height_request">25</property>
                        <property name="visible">True</property>
                        <property name="can_focus">False</property>
                        <property name="tooltip_text">Select where to save the data</property>
                        <property name="use_underline">True</property>
                        <property name="use_stock">True</property>
                        <property name="always_show_image">True</property>
                        <signal name="activate" handler="gtk_saveas" swapped="no"/>
                        <child internal-child="accessible">
                          <object class="AtkObject" id="menuitem_saveas-atkobject">
                            <property name="AtkObject::accessible-role" translatable="yes">menu-item</property>
                          </object>
                        </child>
                        <accelerator key="s" signal="activate" modifiers="GDK_SHIFT_MASK | GDK_CONTROL_MASK"/>
                      </object>
                    </child>
                    <child>
                      <object class="GtkSeparatorMenuItem" id="menu_separator">
                        <property name="visible">True</property>
                        <property name="can_focus">False</property>
                      </object>
                    </child>
                    <child>
                      <object class="GtkImageMenuItem" id="menuitem_quit">
                        <property name="label">gtk-quit</property>
                        <property name="height_request">25</property>
                        <property name="visible">True</property>
                        <property name="can_focus">False</property>
                        <property name="tooltip_text">Close the application</property>
                        <property name="use_underline">True</property>
                        <property name="use_stock">True</property>
                        <property name="always_show_image">True</property>
                        <signal name="activate" handler="_winexit" swapped="no"/>
                        <child internal-child="accessible">
                          <object class="AtkObject" id="menuitem_quit-atkobject">
                            <property name="AtkObject::accessible-role" translatable="yes">menu-item</property>
                          </object>
                        </child>
                        <accelerator key="w" signal="activate" modifiers="GDK_CONTROL_MASK"/>
                        <accelerator key="q" signal="activate" modifiers="GDK_CONTROL_MASK"/>
                      </object>
                    </child>
                    <child internal-child="accessible">
                      <object class="AtkObject" id="file_menu-atkobject">
                        <property name="AtkObject::accessible-role" translatable="yes">menu</property>
                      </object>
                    </child>
                  </object>
                </child>
                <child internal-child="accessible">
                  <object class="AtkObject" id="menu_item1-atkobject">
                    <property name="AtkObject::accessible-role" translatable="yes">menu</property>
                  </object>
                </child>
                <accelerator key="f" signal="activate" modifiers="GDK_CONTROL_MASK | GDK_MOD1_MASK"/>
              </object>
            </child>
            <child internal-child="accessible">
              <object class="AtkObject" id="menubar-atkobject">
                <property name="AtkObject::accessible-role" translatable="yes">menu-bar</property>
              </object>
            </child>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">True</property>
            <property name="position">0</property>
          </packing>
        </child>
        <child>
          <object class="GtkNotebook" id="tabs">
            <property name="name">tabs</property>
            <property name="visible">True</property>
            <property name="can_focus">True</property>
            <property name="margin_left">4</property>
            <property name="margin_right">4</property>
            <property name="margin_top">4</property>
            <property name="margin_bottom">4</property>
            <property name="scrollable">True</property>
            <property name="enable_popup">True</property>
            <signal name="switch-page" handler="show_hide_save" swapped="no"/>
            <child>
              <object class="GtkScrolledWindow" id="scrwin_prop">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_prop">
                    <property name="name">textview_prop</property>
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="editable">False</property>
                    <property name="buffer">buf_prop</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                    <child internal-child="accessible">
                      <object class="AtkObject" id="textview_prop-atkobject">
                        <property name="AtkObject::accessible-role" translatable="yes">text</property>
                      </object>
                    </child>
                  </object>
                </child>
                <child internal-child="accessible">
                  <object class="AtkObject" id="scrwin_prop-atkobject">
                    <property name="AtkObject::accessible-role" translatable="yes">scroll-pane</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">File Properties</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_prop">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text">File properties &amp; information</property>
                <property name="label">File Properties</property>
              </object>
              <packing>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrwin_sym_tbl">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_sym_tbl">
                    <property name="name">textview_sym_tbl</property>
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="editable">False</property>
                    <property name="buffer">buf_sym</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                    <child internal-child="accessible">
                      <object class="AtkObject" id="textview_sym_tbl-atkobject">
                        <property name="AtkObject::accessible-role" translatable="yes">text</property>
                      </object>
                    </child>
                  </object>
                </child>
                <child internal-child="accessible">
                  <object class="AtkObject" id="scrwin_sym_tbl-atkobject">
                    <property name="AtkObject::accessible-role" translatable="yes">scroll-pane</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">Symbol Table</property>
                <property name="position">1</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_sym_tbl">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text">Display the static symbol table
objdump --line-numbers --special-syms --syms</property>
                <property name="label">Symbol Table</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">Symbol Table</property>
                <property name="position">1</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrwin_dyn_sym">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_dyn_sym">
                    <property name="name">textview_dyn_sym</property>
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="editable">False</property>
                    <property name="buffer">buf_dyn_sym</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                    <child internal-child="accessible">
                      <object class="AtkObject" id="textview_dyn_sym-atkobject">
                        <property name="AtkObject::accessible-role" translatable="yes">text</property>
                      </object>
                    </child>
                  </object>
                </child>
                <child internal-child="accessible">
                  <object class="AtkObject" id="scrwin_dyn_sym-atkobject">
                    <property name="AtkObject::accessible-role" translatable="yes">scroll-pane</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">Dynamic Symbols</property>
                <property name="position">2</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_dyn_sym">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text">Display the dynamic symbol table entries
objdump --line-numbers --dynamic-syms --special-syms</property>
                <property name="label">Dynamic Symbols</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">Dynamic Symbols</property>
                <property name="position">2</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrwin_nm_sym">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_nm_sym">
                    <property name="name">textview_nm_sym</property>
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="editable">False</property>
                    <property name="buffer">buf_nm_sym</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                    <child internal-child="accessible">
                      <object class="AtkObject" id="textview_nm_sym-atkobject">
                        <property name="AtkObject::accessible-role" translatable="yes">text</property>
                      </object>
                    </child>
                  </object>
                </child>
                <child internal-child="accessible">
                  <object class="AtkObject" id="scrwin_nm_sym-atkobject">
                    <property name="AtkObject::accessible-role" translatable="yes">scroll-pane</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">nm (Symbol List)</property>
                <property name="position">3</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_nm_sym">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text">Display symbols found by nm
nm --debug-syms --dynamic --line-numbers --numeric-sort --print-armap --print-size --special-syms --synthetic</property>
                <property name="label">nm (Symbol List)</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">nm (Symbol List)</property>
                <property name="position">3</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrwin_dyn_reloc">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_dyn_reloc">
                    <property name="name">textview_dyn_reloc</property>
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="editable">False</property>
                    <property name="buffer">buf_dyn_reloc</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                    <child internal-child="accessible">
                      <object class="AtkObject" id="textview_dyn_reloc-atkobject">
                        <property name="AtkObject::accessible-role" translatable="yes">text</property>
                      </object>
                    </child>
                  </object>
                </child>
                <child internal-child="accessible">
                  <object class="AtkObject" id="scrwin_dyn_reloc-atkobject">
                    <property name="AtkObject::accessible-role" translatable="yes">scroll-pane</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">Dynamic Relocation</property>
                <property name="position">4</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_dyn_reloc">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text">Display the dynamic relocation entries
objdump --dynamic-reloc --line-numbers</property>
                <property name="label">Dynamic Relocation</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">Dynamic Relocation</property>
                <property name="position">4</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrwin_ldd">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_ldd">
                    <property name="name">textview_ldd</property>
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="editable">False</property>
                    <property name="buffer">buf_ldd</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                    <child internal-child="accessible">
                      <object class="AtkObject" id="textview_ldd-atkobject">
                        <property name="AtkObject::accessible-role" translatable="yes">text</property>
                      </object>
                    </child>
                  </object>
                </child>
                <child internal-child="accessible">
                  <object class="AtkObject" id="scrwin_ldd-atkobject">
                    <property name="AtkObject::accessible-role" translatable="yes">scroll-pane</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">Dependencies</property>
                <property name="position">5</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_ldd">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text">Display Object Dependencies
ldd --verbose
ldd --unused --verbose</property>
                <property name="label">Dependencies</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">Dependencies</property>
                <property name="position">5</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrwin_dis">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_dis">
                    <property name="name">textview_dis</property>
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="buffer">buf_dis</property>
                    <property name="monospace">True</property>
                    <child internal-child="accessible">
                      <object class="AtkObject" id="textview_dis-atkobject">
                        <property name="AtkObject::accessible-role" translatable="yes">text</property>
                      </object>
                    </child>
                  </object>
                </child>
                <child internal-child="accessible">
                  <object class="AtkObject" id="scrwin_dis-atkobject">
                    <property name="AtkObject::accessible-role" translatable="yes">scroll-pane</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">Disassembly</property>
                <property name="position">6</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_dis">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text">Display the disassembled code
objdump --disassemble --no-show-raw-insn --source</property>
                <property name="label">Disassembly</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">Disassembly</property>
                <property name="position">6</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrwin_readelf">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_readelf">
                    <property name="name">textview_readelf</property>
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="editable">False</property>
                    <property name="buffer">buf_readelf</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                    <child internal-child="accessible">
                      <object class="AtkObject" id="textview_readelf-atkobject">
                        <property name="AtkObject::accessible-role" translatable="yes">text</property>
                      </object>
                    </child>
                  </object>
                </child>
                <child internal-child="accessible">
                  <object class="AtkObject" id="scrwin_readelf-atkobject">
                    <property name="AtkObject::accessible-role" translatable="yes">scroll-pane</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">Readelf</property>
                <property name="position">7</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_readelf">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text">Display information returned by readelf
readelf --arch-specific --debug-dump --decompress --file-header --histogram --notes --segments --unwind --version-info --wide</property>
                <property name="label">ReadElf</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">Readelf</property>
                <property name="position">7</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrwin_headers">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_headers">
                    <property name="name">textview_headers</property>
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="editable">False</property>
                    <property name="buffer">buf_headers</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                    <child internal-child="accessible">
                      <object class="AtkObject" id="textview_headers-atkobject">
                        <property name="AtkObject::accessible-role" translatable="yes">text</property>
                      </object>
                    </child>
                  </object>
                </child>
                <child internal-child="accessible">
                  <object class="AtkObject" id="scrwin_headers-atkobject">
                    <property name="AtkObject::accessible-role" translatable="yes">scroll-pane</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">File Headers</property>
                <property name="position">8</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_headers">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text">Display all file headers
objdump --all-headers --archive-header --dwarf-check --file-offsets --full-contents --reloc --stabs --wide</property>
                <property name="label">File Headers</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">File Headers</property>
                <property name="position">8</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrwin_size">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_size">
                    <property name="name">textview_size</property>
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="editable">False</property>
                    <property name="buffer">buf_size</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                    <child internal-child="accessible">
                      <object class="AtkObject" id="textview_size-atkobject">
                        <property name="AtkObject::accessible-role" translatable="yes">text</property>
                      </object>
                    </child>
                  </object>
                </child>
                <child internal-child="accessible">
                  <object class="AtkObject" id="scrwin_size-atkobject">
                    <property name="AtkObject::accessible-role" translatable="yes">scroll-pane</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">Size</property>
                <property name="position">9</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_size">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text">Display the results of size
size --format=Berkeley
size --format=SysV</property>
                <property name="label">Size</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">Size</property>
                <property name="position">9</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrwin_str">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_str">
                    <property name="name">textview_str</property>
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="editable">False</property>
                    <property name="buffer">buf_str</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                    <child internal-child="accessible">
                      <object class="AtkObject" id="textview_str-atkobject">
                        <property name="AtkObject::accessible-role" translatable="yes">text</property>
                      </object>
                    </child>
                  </object>
                </child>
                <child internal-child="accessible">
                  <object class="AtkObject" id="scrwin_str-atkobject">
                    <property name="AtkObject::accessible-role" translatable="yes">scroll-pane</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">Strings</property>
                <property name="position">10</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_str">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text">Display the contained strings
strings --all</property>
                <property name="label">Strings</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">Strings</property>
                <property name="position">10</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrwin_func">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_func">
                    <property name="name">textview_func</property>
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="editable">False</property>
                    <property name="buffer">buf_func</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                    <child internal-child="accessible">
                      <object class="AtkObject" id="textview_func-atkobject">
                        <property name="AtkObject::accessible-role" translatable="yes">text</property>
                      </object>
                    </child>
                  </object>
                </child>
                <child internal-child="accessible">
                  <object class="AtkObject" id="scrwin_func-atkobject">
                    <property name="AtkObject::accessible-role" translatable="yes">scroll-pane</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">Functions</property>
                <property name="position">11</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_func">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text">List all of the found functions</property>
                <property name="label">Functions</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">Functions</property>
                <property name="position">11</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrwin_const">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_const">
                    <property name="name">textview_const</property>
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="editable">False</property>
                    <property name="buffer">buf_const</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                    <child internal-child="accessible">
                      <object class="AtkObject" id="textview_const-atkobject">
                        <property name="AtkObject::accessible-role" translatable="yes">text</property>
                      </object>
                    </child>
                  </object>
                </child>
                <child internal-child="accessible">
                  <object class="AtkObject" id="scrwin_const-atkobject">
                    <property name="AtkObject::accessible-role" translatable="yes">scroll-pane</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">Constants</property>
                <property name="position">12</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_const">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text">List all of the found constants</property>
                <property name="label">Constants</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">Constants</property>
                <property name="position">12</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrwin_ldconfig">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_ldconfig">
                    <property name="name">textview_ldconfig</property>
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="editable">False</property>
                    <property name="buffer">buf_ldconfig</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                    <child internal-child="accessible">
                      <object class="AtkObject" id="textview_ldconfig-atkobject">
                        <property name="AtkObject::accessible-role" translatable="yes">text</property>
                      </object>
                    </child>
                  </object>
                </child>
                <child internal-child="accessible">
                  <object class="AtkObject" id="scrwin_ldconfig-atkobject">
                    <property name="AtkObject::accessible-role" translatable="yes">scroll-pane</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">Libraries</property>
                <property name="position">13</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_ldconfig">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text">List all of the system's libraries</property>
                <property name="label">Libraries</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">Libraries</property>
                <property name="position">13</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkBox" id="about_box">
                <property name="name">about_box</property>
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="margin_left">4</property>
                <property name="margin_right">4</property>
                <property name="margin_top">4</property>
                <property name="margin_bottom">4</property>
                <property name="orientation">vertical</property>
                <child>
                  <object class="GtkGrid" id="grid_about">
                    <property name="visible">True</property>
                    <property name="can_focus">False</property>
                    <property name="halign">center</property>
                    <property name="column_spacing">5</property>
                    <property name="column_homogeneous">True</property>
                    <child>
                      <object class="GtkLabel" id="lbl_about">
                        <property name="visible">True</property>
                        <property name="can_focus">False</property>
                        <property name="halign">start</property>
                        <property name="label">Program-Analyzer
Version: 2020.02.03
Author: Devyn Collier Johnson
&amp;lt;&lt;a href="mailto:DevynCJohnson@Gmail.com"&gt;DevynCJohnson@Gmail.com&lt;/a&gt;&amp;gt;</property>
                        <property name="use_markup">True</property>
                        <property name="justify">center</property>
                        <property name="track_visited_links">False</property>
                        <child internal-child="accessible">
                          <object class="AtkObject" id="lbl_about-atkobject">
                            <property name="AtkObject::accessible-role" translatable="yes">paragraph</property>
                          </object>
                        </child>
                      </object>
                      <packing>
                        <property name="left_attach">0</property>
                        <property name="top_attach">0</property>
                      </packing>
                    </child>
                    <child>
                      <object class="GtkLabel" id="lbl_donate">
                        <property name="visible">True</property>
                        <property name="can_focus">False</property>
                        <property name="halign">end</property>
                        <property name="label">For more programs,
- Visit &lt;a href="http://DCJTech.info/"&gt;DCJTech.info&lt;/a&gt;
- Please donate to DCJTech</property>
                        <property name="use_markup">True</property>
                        <property name="track_visited_links">False</property>
                        <child internal-child="accessible">
                          <object class="AtkObject" id="lbl_donate-atkobject">
                            <property name="AtkObject::accessible-role" translatable="yes">paragraph</property>
                          </object>
                        </child>
                      </object>
                      <packing>
                        <property name="left_attach">1</property>
                        <property name="top_attach">0</property>
                      </packing>
                    </child>
                  </object>
                  <packing>
                    <property name="expand">False</property>
                    <property name="fill">True</property>
                    <property name="position">0</property>
                  </packing>
                </child>
                <child>
                  <object class="GtkSeparator" id="separator_about">
                    <property name="visible">True</property>
                    <property name="can_focus">False</property>
                    <property name="margin_top">4</property>
                    <property name="margin_bottom">4</property>
                  </object>
                  <packing>
                    <property name="expand">False</property>
                    <property name="fill">True</property>
                    <property name="padding">4</property>
                    <property name="position">1</property>
                  </packing>
                </child>
                <child>
                  <object class="GtkLabel" id="binutils_info">
                    <property name="visible">True</property>
                    <property name="can_focus">False</property>
                    <property name="track_visited_links">False</property>
                  </object>
                  <packing>
                    <property name="expand">False</property>
                    <property name="fill">True</property>
                    <property name="position">2</property>
                  </packing>
                </child>
              </object>
              <packing>
                <property name="menu_label">About</property>
                <property name="position">14</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_about">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text">Information about Program-Analyzer and GNU-binutils</property>
                <property name="label">About</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">About</property>
                <property name="position">14</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <placeholder/>
            </child>
            <child type="tab">
              <placeholder/>
            </child>
            <child>
              <placeholder/>
            </child>
            <child type="tab">
              <placeholder/>
            </child>
            <child internal-child="accessible">
              <object class="AtkObject" id="tabs-atkobject">
                <property name="AtkObject::accessible-role" translatable="yes">page-tab-list</property>
              </object>
            </child>
          </object>
          <packing>
            <property name="expand">True</property>
            <property name="fill">True</property>
            <property name="position">1</property>
          </packing>
        </child>
        <child>
          <object class="GtkGrid" id="grid_controls">
            <property name="height_request">35</property>
            <property name="visible">True</property>
            <property name="can_focus">False</property>
            <property name="margin_left">4</property>
            <property name="margin_right">4</property>
            <property name="margin_bottom">4</property>
            <property name="row_homogeneous">True</property>
            <property name="column_homogeneous">True</property>
            <child>
              <object class="GtkLabel" id="l_file">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text">File location (pathname)</property>
                <property name="halign">start</property>
                <property name="margin_left">4</property>
                <property name="margin_right">4</property>
                <property name="margin_top">4</property>
                <property name="margin_bottom">4</property>
                <property name="label">PathName</property>
                <property name="selectable">True</property>
                <property name="single_line_mode">True</property>
                <property name="track_visited_links">False</property>
                <child internal-child="accessible">
                  <object class="AtkObject" id="l_file-atkobject">
                    <property name="AtkObject::accessible-role" translatable="yes">comment</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="left_attach">0</property>
                <property name="top_attach">0</property>
              </packing>
            </child>
            <child>
              <object class="GtkButton" id="btn_save">
                <property name="label">gtk-save</property>
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="receives_default">False</property>
                <property name="tooltip_text">Save the currently displayed data</property>
                <property name="halign">center</property>
                <property name="margin_top">4</property>
                <property name="margin_bottom">4</property>
                <property name="use_stock">True</property>
                <property name="always_show_image">True</property>
                <signal name="clicked" handler="gtk_saveas" swapped="no"/>
              </object>
              <packing>
                <property name="left_attach">1</property>
                <property name="top_attach">0</property>
              </packing>
            </child>
            <child>
              <object class="GtkButton" id="btn_close">
                <property name="label">gtk-close</property>
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="receives_default">False</property>
                <property name="tooltip_text">Exit Application</property>
                <property name="halign">end</property>
                <property name="margin_top">4</property>
                <property name="margin_bottom">4</property>
                <property name="use_stock">True</property>
                <property name="always_show_image">True</property>
                <signal name="clicked" handler="_winexit" object="ezwin" swapped="no"/>
                <accelerator key="q" signal="clicked" modifiers="GDK_CONTROL_MASK"/>
              </object>
              <packing>
                <property name="left_attach">3</property>
                <property name="top_attach">0</property>
              </packing>
            </child>
            <child>
              <object class="GtkSearchEntry" id="entry_search">
                <property name="name">entry_search</property>
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="primary_icon_stock">gtk-find</property>
                <property name="primary_icon_name">edit-find-symbolic</property>
                <property name="primary_icon_activatable">False</property>
                <property name="primary_icon_sensitive">False</property>
                <signal name="next-match" handler="find_text_next" swapped="no"/>
                <signal name="previous-match" handler="find_text_prev" swapped="no"/>
                <signal name="search-changed" handler="find_text" swapped="no"/>
                <signal name="stop-search" handler="clear_search_data" swapped="no"/>
                <accelerator key="equal" signal="next-match" modifiers="GDK_CONTROL_MASK"/>
                <accelerator key="Return" signal="next-match" modifiers="GDK_SHIFT_MASK"/>
                <accelerator key="minus" signal="previous-match" modifiers="GDK_CONTROL_MASK"/>
                <accelerator key="Return" signal="previous-match" modifiers="GDK_MOD1_MASK"/>
              </object>
              <packing>
                <property name="left_attach">2</property>
                <property name="top_attach">0</property>
              </packing>
            </child>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">False</property>
            <property name="position">2</property>
          </packing>
        </child>
        <child>
          <object class="GtkSeparator" id="separator_main">
            <property name="visible">True</property>
            <property name="can_focus">False</property>
            <child internal-child="accessible">
              <object class="AtkObject" id="separator_main-atkobject">
                <property name="AtkObject::accessible-role" translatable="yes">separator</property>
              </object>
            </child>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">True</property>
            <property name="position">3</property>
          </packing>
        </child>
        <child>
          <object class="GtkStatusbar" id="statusbar">
            <property name="height_request">25</property>
            <property name="visible">True</property>
            <property name="can_focus">False</property>
            <property name="margin_left">4</property>
            <property name="margin_right">4</property>
            <property name="margin_start">8</property>
            <property name="margin_end">8</property>
            <property name="margin_top">4</property>
            <property name="margin_bottom">4</property>
            <child internal-child="accessible">
              <object class="AtkObject" id="statusbar-atkobject">
                <property name="AtkObject::accessible-role" translatable="yes">statusbar</property>
              </object>
            </child>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">True</property>
            <property name="pack_type">end</property>
            <property name="position">4</property>
          </packing>
        </child>
      </object>
    </child>
    <child internal-child="accessible">
      <object class="AtkObject" id="ezwin-atkobject">
        <property name="AtkObject::accessible-role" translatable="yes">application</property>
      </object>
    </child>
  </object>
</interface>'''

_FILEGUI: str = '''<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated with glade 3.22.1

Copyright (C) LGPLv3

This file is part of EzWin.

EzWin is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

EzWin is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with EzWin.  If not, see <http://www.gnu.org/licenses/>.

Author: Devyn Collier Johnson

-->
<interface>
  <requires lib="gtk+" version="3.20"/>
  <!-- interface-license-type lgplv3 -->
  <!-- interface-name EzWin -->
  <!-- interface-description File Selection -->
  <!-- interface-copyright LGPLv3 -->
  <!-- interface-authors Devyn Collier Johnson -->
  <object class="GtkApplicationWindow" id="ezwin">
    <property name="width_request">1400</property>
    <property name="height_request">800</property>
    <property name="visible">True</property>
    <property name="can_focus">False</property>
    <property name="title" translatable="yes">Choose a File</property>
    <property name="window_position">center</property>
    <property name="icon_name">system-file-manager</property>
    <property name="type_hint">dialog</property>
    <property name="show_menubar">False</property>
    <signal name="delete-event" handler="_winexit" object="ezwin" swapped="no"/>
    <signal name="destroy-event" handler="_winexit" object="ezwin" swapped="no"/>
    <child>
      <placeholder/>
    </child>
    <child>
      <object class="GtkBox" id="box">
        <property name="visible">True</property>
        <property name="can_focus">False</property>
        <property name="margin_right">4</property>
        <property name="orientation">vertical</property>
        <child>
          <object class="GtkFileChooserWidget" id="filechooser">
            <property name="visible">True</property>
            <property name="can_focus">True</property>
            <property name="margin_bottom">4</property>
            <property name="create_folders">False</property>
            <child internal-child="accessible">
              <object class="AtkObject" id="filechooser-atkobject">
                <property name="AtkObject::accessible-role" translatable="yes">file-chooser</property>
              </object>
            </child>
          </object>
          <packing>
            <property name="expand">True</property>
            <property name="fill">True</property>
            <property name="position">0</property>
          </packing>
        </child>
        <child>
          <object class="GtkCheckButton" id="chkbtn2">
            <property name="label" translatable="yes">Select current location</property>
            <property name="visible">True</property>
            <property name="can_focus">True</property>
            <property name="receives_default">False</property>
            <property name="tooltip_text" translatable="yes">Marked - The current location/folder is returned

Empty - The selected folder is returned</property>
            <property name="halign">center</property>
            <property name="valign">center</property>
            <property name="draw_indicator">True</property>
            <child internal-child="accessible">
              <object class="AtkObject" id="chkbtn2-atkobject">
                <property name="AtkObject::accessible-role" translatable="yes">check-box</property>
              </object>
            </child>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">True</property>
            <property name="position">2</property>
          </packing>
        </child>
        <child>
          <object class="GtkGrid" id="grid">
            <property name="visible">True</property>
            <property name="can_focus">False</property>
            <property name="margin_left">4</property>
            <property name="margin_right">4</property>
            <property name="column_homogeneous">True</property>
            <child>
              <object class="GtkButton" id="btn1">
                <property name="label">gtk-ok</property>
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="receives_default">False</property>
                <property name="tooltip_text" translatable="yes">Submit selection to the program that opened this dialog.</property>
                <property name="halign">start</property>
                <property name="valign">center</property>
                <property name="margin_top">4</property>
                <property name="margin_bottom">4</property>
                <property name="use_stock">True</property>
                <signal name="clicked" handler="_select" object="filechooser" swapped="no"/>
              </object>
              <packing>
                <property name="left_attach">0</property>
                <property name="top_attach">0</property>
              </packing>
            </child>
            <child>
              <object class="GtkCheckButton" id="chkbtn1">
                <property name="label" translatable="yes">View hidden files</property>
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="receives_default">False</property>
                <property name="tooltip_text" translatable="yes">Marked - Show hidden files
Empty - Hidden files not seen</property>
                <property name="halign">center</property>
                <property name="valign">center</property>
                <property name="draw_indicator">True</property>
                <signal name="toggled" handler="_hidden" object="filechooser" swapped="no"/>
                <child internal-child="accessible">
                  <object class="AtkObject" id="chkbtn1-atkobject">
                    <property name="AtkObject::accessible-role" translatable="yes">check-box</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="left_attach">1</property>
                <property name="top_attach">0</property>
              </packing>
            </child>
            <child>
              <object class="GtkButton" id="btn2">
                <property name="label">gtk-cancel</property>
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="receives_default">False</property>
                <property name="tooltip_text" translatable="yes">Cancel</property>
                <property name="halign">end</property>
                <property name="valign">center</property>
                <property name="margin_top">4</property>
                <property name="margin_bottom">4</property>
                <property name="use_stock">True</property>
                <signal name="clicked" handler="_cancel" object="ezwin" swapped="no"/>
              </object>
              <packing>
                <property name="left_attach">2</property>
                <property name="top_attach">0</property>
              </packing>
            </child>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">True</property>
            <property name="pack_type">end</property>
            <property name="position">4</property>
          </packing>
        </child>
      </object>
    </child>
    <child internal-child="accessible">
      <object class="AtkObject" id="ezwin-atkobject">
        <property name="AtkObject::accessible-role" translatable="yes">dialog</property>
      </object>
    </child>
  </object>
</interface>'''


signal(SIGINT, SIG_DFL)


# STATUSBAR MESSAGES #


STATUS_UNSUPPORTED_FILETYPE: Tuple[int, str] = (-1, r'Unsupported filetype')
STATUS_SELECT_FILE: Tuple[int, str] = (0, r'Select a file to open')
STATUS_OPENING_FILE: Tuple[int, str] = (1, r'Opening file ')
STATUS_OPENED_FILE: Tuple[int, str] = (2, r'Opened ')
STATUS_ANALYZING: Tuple[int, str] = (3, r'Analyzing')
STATUS_FINISHED: Tuple[int, str] = (4, r'Finished opening and analyzing')
STATUS_WRITING: Tuple[int, str] = (5, r'Writing saved data')


# TIMEZONE #


TIMEZONE = datetime.now(timezone.utc).tzinfo


# CLASSES #


class DataTable:  # pylint: disable=R0903
    """Global table for all threads to get and set data concerning the available tools."""

    # Available Tools
    is_dumpne_available: bool = is_program_aval(r'dumpne')
    is_insn_count_available: bool = is_program_aval(r'insn_count')
    is_linux_alpha_available: bool = is_program_aval(r'alpha-linux-gnu-objdump')
    is_linux_arm_available: bool = is_program_aval(r'arm-linux-gnueabi-objdump')
    is_linux_hppa64_available: bool = is_program_aval(r'hppa64-linux-gnu-objdump')
    is_linux_hppa_available: bool = is_program_aval(r'hppa-linux-gnu-objdump')
    is_linux_powerpc32_available: bool = is_program_aval(r'powerpc-linux-gnu-objdump')
    is_linux_powerpc64_available: bool = is_program_aval(r'powerpc64-linux-gnu-objdump')
    is_linux_s390x_available: bool = is_program_aval(r's390x-linux-gnu-objdump')
    is_linux_sparc64_available: bool = is_program_aval(r'sparc64-linux-gnu-objdump')
    is_linux_x86_64_available: bool = is_program_aval(r'x86_64-linux-gnu-objdump')
    is_linux_x86_available: bool = is_program_aval(r'i686-linux-gnu-objdump')
    is_ndisasm_available: bool = is_program_aval(r'ndisasm')
    is_objdump_available: bool = is_program_aval(r'objdump')
    is_semblance_available: bool = is_program_aval(r'semblance')
    is_win_x86_64_available: bool = is_program_aval(r'x86_64-w64-mingw32-objdump')
    is_win_x86_available: bool = is_program_aval(r'i686-w64-mingw32-objdump')
    is_sha256sum_available: bool = is_program_aval(r'sha256sum')
    is_sha512sum_available: bool = is_program_aval(r'sha512sum')
    # Commands
    disassemble_cmd: str = r''
    ldconfig_cmd: str = r'ldconfig -p'
    ldd_cmd: str = r'ldd --verbose '
    ldd_unused_cmd: str = r'ldd --unused '
    nm_cmd: str = r''
    objdump_cmd: str = r''
    readelf_cmd: str = r''
    size_cmd: str = r''
    strings_cmd: str = r''
    sha256sum_cmd: str = r'sha256sum --tag '
    sha512sum_cmd: str = r'sha512sum --tag '
    # Gathered Data
    bin_file: str = r''
    binsize: str = r''
    constants: str = r''
    file_info: str = r''
    functions: str = r''
    lastused: str = r''
    ldconfig_libraries: str = r''
    nm_defined: str = r''
    nm_symbols: str = r''
    disassemble_type: str = r''
    objdump_disassemble: str = r''
    objdump_dynamic_relocation: str = r''
    objdump_dynamic_symbols: str = r''
    objdump_headers: str = r''
    objdump_symbols: str = r''
    object_dependencies: str = r''
    unused_dependencies: str = r''
    readelf_all: str = r''
    sha512: str = r''
    strings: str = r''
    # Searching
    start_iter: Union[Gtk.TextIter, None] = None


class MainWindow:  # pylint: disable=R0902
    """Main GTK-window."""

    def __init__(self, getfiledata: bool, filedata: Tuple[int, str]) -> None:
        """Create the GTK-window and all needed objects."""
        # Build GUI
        self.ui = Gtk.Builder()
        self.ui.add_from_string(buffer=_GUI)
        # Get GTK Objects
        self.ui_get_object = self.ui.get_object
        self._window = self.ui_get_object(name=r'ezwin')
        self.statusbar = self.ui_get_object(name=r'statusbar')
        self.context_id = self.statusbar.get_context_id(r'NULL')
        self.statusbar.push(self.context_id, r'')
        self.tabs = self.ui_get_object(name=r'tabs')
        self.tabs.set_current_page(0)
        self.about_box = self.ui_get_object(name=r'about_box')
        self.binutils_info = self.ui_get_object(name=r'binutils_info')
        self.btn_save = self.ui_get_object(name=r'btn_save')
        self.entry_search = self.ui_get_object(name=r'entry_search')
        self.menuitem_save = self.ui_get_object(name=r'menuitem_save')
        self.menuitem_saveas = self.ui_get_object(name=r'menuitem_saveas')
        self.l_file = self.ui_get_object(name=r'l_file')
        self.scrwin_const = self.ui_get_object(name=r'scrwin_const')
        self.scrwin_dis = self.ui_get_object(name=r'scrwin_dis')
        self.scrwin_dyn_reloc = self.ui_get_object(name=r'scrwin_dyn_reloc')
        self.scrwin_dyn_sym = self.ui_get_object(name=r'scrwin_dyn_sym')
        self.scrwin_func = self.ui_get_object(name=r'scrwin_func')
        self.scrwin_headers = self.ui_get_object(name=r'scrwin_headers')
        self.scrwin_ldconfig = self.ui_get_object(name=r'scrwin_ldconfig')
        self.scrwin_ldd = self.ui_get_object(name=r'scrwin_ldd')
        self.scrwin_nm_sym = self.ui_get_object(name=r'scrwin_nm_sym')
        self.scrwin_prop = self.ui_get_object(name=r'scrwin_prop')
        self.scrwin_readelf = self.ui_get_object(name=r'scrwin_readelf')
        self.scrwin_size = self.ui_get_object(name=r'scrwin_size')
        self.scrwin_str = self.ui_get_object(name=r'scrwin_str')
        self.scrwin_sym_tbl = self.ui_get_object(name=r'scrwin_sym_tbl')
        self.textview_const = self.ui_get_object(name=r'textview_const')
        self.textview_dis = self.ui_get_object(name=r'textview_dis')
        self.textview_dyn_reloc = self.ui_get_object(name=r'textview_dyn_reloc')
        self.textview_dyn_sym = self.ui_get_object(name=r'textview_dyn_sym')
        self.textview_func = self.ui_get_object(name=r'textview_func')
        self.textview_headers = self.ui_get_object(name=r'textview_headers')
        self.textview_ldconfig = self.ui_get_object(name=r'textview_ldconfig')
        self.textview_ldd = self.ui_get_object(name=r'textview_ldd')
        self.textview_nm_sym = self.ui_get_object(name=r'textview_nm_sym')
        self.textview_prop = self.ui_get_object(name=r'textview_prop')
        self.textview_readelf = self.ui_get_object(name=r'textview_readelf')
        self.textview_size = self.ui_get_object(name=r'textview_size')
        self.textview_str = self.ui_get_object(name=r'textview_str')
        self.textview_sym_tbl = self.ui_get_object(name=r'textview_sym_tbl')
        self.entry_search.set_visible(False)
        # Window Title
        self.l_file.set_text(r'Program-Analyzer')
        # Set GNU-Binutls Info in About-tab
        self.binutils_info.set_text(getoutput(r'objdump --version'))
        # Signal Handlers
        self.ui.connect_signals({
            r'clear_search_data': self.clear_search_data,
            r'find_text': self.find_text,
            r'find_text_next': self.find_text_next,
            r'find_text_prev': self.find_text_prev,
            r'gtk_open': self.gtk_open,
            r'gtk_save': self.gtk_save,
            r'gtk_saveas': self.gtk_saveas,
            r'show_hide_save': self.show_hide_save,
            r'_winexit': Gtk.main_quit
        })
        # Process the Input
        if getfiledata:
            filedata = self.getdis(DataTable.bin_file)  # Get data from the chosen file
        del getfiledata
        self.status(self.context_id, filedata[1])
        if filedata[0] >= 2:
            self.refreshdata(DataTable.bin_file, filedata)
        else:
            self.gtk_open()

    def show_hide_save(self, _notebook: Gtk.Notebook, page: Union[Gtk.Box, Gtk.ScrolledWindow], page_num: int) -> None:  # pylint: disable=W0613
        """Show or hide the save buttons."""
        self.clear_search_data()
        if page_num == _notebook.page_num(self.about_box):
            self.entry_search.set_visible(False)
            self.btn_save.set_visible(False)
            self.menuitem_save.set_visible(False)
            self.menuitem_saveas.set_visible(False)
        elif page.is_visible():
            self.entry_search.set_visible(True)
            self.btn_save.set_visible(True)
            self.menuitem_save.set_visible(True)
            self.menuitem_saveas.set_visible(True)

    def status(self, context_id: int, _msg: str) -> None:
        """Place a message in the statusbar."""
        self.statusbar.push(context_id, _msg)

    def retreive_data_buffer(self) -> Gtk.TextBuffer:  # noqa: C901,R701  # pylint: disable=R0911
        """Get the data in the currently active data buffer."""
        active_tab: int = self.tabs.get_current_page()
        if active_tab == self.tabs.page_num(self.scrwin_prop):  # tab_prop
            return self.textview_prop.get_buffer()
        if active_tab == self.tabs.page_num(self.scrwin_sym_tbl):  # tab_sym_tbl
            return self.textview_sym_tbl.get_buffer()
        if active_tab == self.tabs.page_num(self.scrwin_dyn_sym):  # tab_dyn_sym
            return self.textview_dyn_sym.get_buffer()
        if active_tab == self.tabs.page_num(self.scrwin_nm_sym):  # tab_nm_sym
            return self.textview_nm_sym.get_buffer()
        if active_tab == self.tabs.page_num(self.scrwin_dyn_reloc):  # tab_dyn_reloc
            return self.textview_dyn_reloc.get_buffer()
        if active_tab == self.tabs.page_num(self.scrwin_dis):  # tab_dis
            return self.textview_dis.get_buffer()
        if active_tab == self.tabs.page_num(self.scrwin_readelf):  # tab_readelf
            return self.textview_readelf.get_buffer()
        if active_tab == self.tabs.page_num(self.scrwin_headers):  # tab_headers
            return self.textview_headers.get_buffer()
        if active_tab == self.tabs.page_num(self.scrwin_ldconfig):  # tab_ldconfig
            return self.textview_ldconfig.get_buffer()
        if active_tab == self.tabs.page_num(self.scrwin_ldd):  # tab_ldd
            return self.textview_ldd.get_buffer()
        if active_tab == self.tabs.page_num(self.scrwin_size):  # tab_size_size
            return self.textview_size.get_buffer()
        if active_tab == self.tabs.page_num(self.scrwin_str):  # tab_str
            return self.textview_str.get_buffer()
        if active_tab == self.tabs.page_num(self.scrwin_func):  # tab_func
            return self.textview_str.get_buffer()
        if active_tab == self.tabs.page_num(self.scrwin_const):  # tab_const
            return self.textview_const.get_buffer()
        return r''

    # OPEN & SAVE #

    def gtk_open(self, _menuitem: Gtk.ImageMenuItem = None) -> None:
        """Select a file to open."""
        self.status(self.context_id, STATUS_OPENING_FILE[1])
        try:
            _filewin = FileChooserWin()
            _binfile = _filewin.ezfilech(_init_path=r'/', _return_uri=False, _return_dtype=r'str')
            del _filewin
        except TypeError:
            self.status(self.context_id, r'Error occurred while opening file')
            stderr.write('Error occurred while opening file\n')
            return
        if not isinstance(_binfile, str) or _binfile in {r'[]', r'cancel'} or _binfile == r'' or _binfile is None:
            self.status(self.context_id, r'File opening cancelled by user')
            return
        if not pathexists(_binfile) or not isfile(_binfile):
            self.status(self.context_id, r'FileNotFoundError')
            return
        if isdir(_binfile):
            self.status(self.context_id, r'IsADirectoryError')
            return
        if not fileaccess(_binfile, R_OK):
            self.status(self.context_id, r'PermissionError')
            return
        self.refreshdata(_binfile, self.getdis(_binfile))

    def gtk_save(self, _button: Gtk.Button) -> None:
        """Save the data."""
        if not isinstance(DataTable.lastused, str) or DataTable.lastused in {r'', r'cancel'}:
            self.gtk_saveas(_button)
            return
        self.save_data(DataTable.lastused)

    def gtk_saveas(self, _button: Gtk.Button) -> None:
        """Choose where to save the data."""
        # Select File
        try:
            _filewin = FileChooserWin()
            savefilepath = _filewin.ezfilech(_select_dir=False, _savefile=True, _init_path=r'/', _return_uri=False, _return_dtype=r'str')
            del _filewin
        except (IndexError, SyntaxError, TypeError):
            self.status(self.context_id, r'Error occurred while saving file')
            stderr.write('Error occurred while saving file\n')
            return
        if not isinstance(savefilepath, str) or savefilepath == r'[]':
            self.status(self.context_id, r'File saving cancelled by user')
            return
        if savefilepath == r'cancel' or savefilepath == r'' or savefilepath is None:
            self.status(self.context_id, r'File saving cancelled by user')
            return
        # Sava Data
        self.save_data(savefilepath)

    def save_data(self, savefilepath: str) -> None:  # noqa: C901
        """Perform the actual data-save."""
        DataTable.lastused = savefilepath
        save_buffer_data: Gtk.TextBuffer = self.retreive_data_buffer()
        try:
            self.write2file(savefilepath, save_buffer_data.get_text(save_buffer_data.get_start_iter(), save_buffer_data.get_end_iter(), True))
            del save_buffer_data
        except OSError as _err:
            DataTable.lastused = r''
            self.status(self.context_id, r'OSError when writing file')
            stderr.write('OSError when writing file\n' + str(_err))
        except BaseException as _err:  # pylint: disable=W0703
            DataTable.lastused = r''
            self.status(self.context_id, r'Exception thrown when writing file')
            stderr.write(str(_err) + '\n')
        self.status(self.context_id, r'File saved')

    def write2file(self, _filename: str, _write: str) -> None:
        """Send data to new file or overwrite file."""
        self.status(self.context_id, STATUS_WRITING[1])
        with open(_filename, mode=r'wt', encoding=r'utf-8') as _file:
            _file.write(_write)  # type: ignore

    # SEARCHING

    def find_text(self, search_entry: Gtk.SearchEntry) -> None:
        """Find text in a textview."""
        search_buffer_data: Gtk.TextBuffer = self.retreive_data_buffer()
        if search_buffer_data.get_iter_at_mark(search_buffer_data.get_insert()).get_offset() == search_buffer_data.get_char_count():
            search_buffer_data.get_start_iter().set_offset(0)
            search_buffer_data.get_end_iter().set_offset(0)
            search_buffer_data.place_cursor(search_buffer_data.get_start_iter())
            search_buffer_data.get_iter_at_mark(search_buffer_data.get_insert()).set_offset(0)
            found: tuple = search_buffer_data.get_start_iter().forward_search(search_entry.get_text(), 0, search_buffer_data.get_end_iter())
        else:
            found = search_buffer_data.get_start_iter().forward_search(search_entry.get_text(), 0, search_buffer_data.get_end_iter())
        if found:
            search_buffer_data.select_range(found[0], found[1])
            self.tabs.get_nth_page(self.tabs.get_current_page()).get_child().scroll_to_iter(found[0], 0.0, True, 0.5, 0.5)
            DataTable.start_iter = found[1]

    def find_text_next(self, search_entry: Gtk.SearchEntry) -> None:
        """Find the next match in a textview."""
        search_buffer_data: Gtk.TextBuffer = self.retreive_data_buffer()
        if search_buffer_data.get_iter_at_mark(search_buffer_data.get_insert()).get_offset() == search_buffer_data.get_char_count():
            search_buffer_data.get_start_iter().set_offset(0)
            search_buffer_data.get_end_iter().set_offset(0)
            search_buffer_data.place_cursor(search_buffer_data.place_cursor(search_buffer_data.get_start_iter()))
            search_buffer_data.get_iter_at_mark(search_buffer_data.get_insert()).set_offset(0)
            found: tuple = DataTable.start_iter.forward_search(search_entry.get_text(), 0, search_buffer_data.get_end_iter())  # type: ignore
        else:
            found = DataTable.start_iter.forward_search(search_entry.get_text(), 0, search_buffer_data.get_end_iter())  # type: ignore
        if found:
            search_buffer_data.select_range(found[0], found[1])
            self.tabs.get_nth_page(self.tabs.get_current_page()).get_child().scroll_to_iter(found[0], 0.0, True, 0.5, 0.5)
            DataTable.start_iter = found[1]

    def find_text_prev(self, search_entry: Gtk.SearchEntry) -> None:
        """Find the previous match in a textview."""
        search_buffer_data: Gtk.TextBuffer = self.retreive_data_buffer()
        if search_buffer_data.get_iter_at_mark(search_buffer_data.get_insert()).get_offset():
            found: tuple = DataTable.start_iter.backward_search(search_entry.get_text(), 0, search_buffer_data.get_start_iter())  # type: ignore
        else:
            search_buffer_data.get_start_iter().set_offset(search_buffer_data.get_char_count())
            search_buffer_data.get_end_iter().set_offset(search_buffer_data.get_char_count())
            search_buffer_data.place_cursor(search_buffer_data.get_start_iter())
            search_buffer_data.get_iter_at_mark(search_buffer_data.get_insert()).set_offset(search_buffer_data.get_char_count())
            found = DataTable.start_iter.backward_search(search_entry.get_text(), 0, search_buffer_data.get_start_iter())  # type: ignore
        if found:
            search_buffer_data.select_range(found[0], found[1])
            self.tabs.get_nth_page(self.tabs.get_current_page()).get_child().scroll_to_iter(found[0], 0.0, True, 0.5, 0.5)
            DataTable.start_iter = found[0]

    def clear_search_data(self) -> None:
        """Cleanup all data used for searching."""
        DataTable.start_iter = None
        self.entry_search.set_text(r'')

    # ANALYSIS

    def getdis(self, _file: str) -> Tuple[int, str]:  # noqa: C901  # pylint: disable=R0914
        """Get data from the file and disassemble."""
        self.status(self.context_id, STATUS_ANALYZING[1])
        # Gather filetype information
        _charset = MIME_ENCODING.file(_file)
        _magic = NONE_MAGIC.file(_file).casefold()
        # Is 32 or 64 bits?
        if any(_pattern in _magic for _pattern in {r'32-bit', r'80386', r'i686', r'pe32 ', r'x86-32'}):
            _bits = r'32'
        elif any(_pattern in _magic for _pattern in {r'64-bit', r'pe32+', r'x86-64'}):
            _bits = r'64'
        elif any(_pattern in _magic for _pattern in {r'16-bit', r'16bit', r'windows 3.x'}):
            _bits = r'16'
        else:
            _bits = r'NA'
        # Setup tools
        setup_tools(_bits, _charset, _magic)
        # Get the data using parallel processing
        run_threaded_analysis(_file, _bits)
        # Make the scrollable boxes within each tab visible
        self.scrwin_const.set_visible(True)
        self.scrwin_dis.set_visible(True)
        self.scrwin_dyn_reloc.set_visible(True)
        self.scrwin_dyn_sym.set_visible(True)
        self.scrwin_func.set_visible(True)
        self.scrwin_headers.set_visible(True)
        self.scrwin_ldconfig.set_visible(True)
        self.scrwin_ldd.set_visible(True)
        self.scrwin_nm_sym.set_visible(True)
        self.scrwin_readelf.set_visible(True)
        self.scrwin_size.set_visible(True)
        self.scrwin_str.set_visible(True)
        self.scrwin_sym_tbl.set_visible(True)
        # Return
        return STATUS_FINISHED

    def refreshdata(self, _file: str, _datatuple: tuple) -> None:  # noqa: C901,R701
        """Place the data in the text-buffers of the window."""
        self.tabs.set_current_page(0)
        self.status(self.context_id, STATUS_ANALYZING[1])
        if _datatuple[0] == -1:
            self.status(self.context_id, STATUS_UNSUPPORTED_FILETYPE[1])
            return
        # Set and display data
        _tmp_file_name = pathsplit(_file)[1]
        self._window.set_title(r'Program-Analyzer: ' + _tmp_file_name)
        self.l_file.set_text(_tmp_file_name)
        del _tmp_file_name
        if self.scrwin_dis.is_visible:
            self.textview_dis.get_buffer().set_text(DataTable.objdump_disassemble, len(DataTable.objdump_disassemble))
        DataTable.objdump_disassemble = r''
        if self.scrwin_sym_tbl.is_visible:
            self.textview_sym_tbl.get_buffer().set_text(DataTable.objdump_symbols, len(DataTable.objdump_symbols))
        DataTable.objdump_symbols = r''
        if self.scrwin_dyn_sym.is_visible:
            self.textview_dyn_sym.get_buffer().set_text(DataTable.objdump_dynamic_symbols, len(DataTable.objdump_dynamic_symbols))
        DataTable.objdump_dynamic_symbols = r''
        if self.scrwin_nm_sym.is_visible:
            self.textview_nm_sym.get_buffer().set_text(DataTable.nm_symbols, len(DataTable.nm_symbols))
        DataTable.nm_symbols = r''
        if self.scrwin_dyn_reloc.is_visible:
            self.textview_dyn_reloc.get_buffer().set_text(DataTable.objdump_dynamic_relocation, len(DataTable.objdump_dynamic_relocation))
        DataTable.objdump_dynamic_relocation = r''
        if self.scrwin_ldconfig.is_visible:
            self.textview_ldconfig.get_buffer().set_text(DataTable.ldconfig_libraries, len(DataTable.ldconfig_libraries))
        DataTable.ldconfig_libraries = r''
        if self.scrwin_ldd.is_visible:
            self.textview_ldd.get_buffer().set_text(DataTable.object_dependencies, len(DataTable.object_dependencies))
        DataTable.object_dependencies = r''
        if self.scrwin_readelf.is_visible:
            self.textview_readelf.get_buffer().set_text(DataTable.readelf_all, len(DataTable.readelf_all))
        DataTable.readelf_all = r''
        if self.scrwin_headers.is_visible:
            self.textview_headers.get_buffer().set_text(DataTable.objdump_headers, len(DataTable.objdump_headers))
        DataTable.objdump_headers = r''
        if self.scrwin_size.is_visible:
            self.textview_size.get_buffer().set_text(DataTable.binsize, len(DataTable.binsize))
        DataTable.binsize = r''
        if self.scrwin_str.is_visible:
            self.textview_str.get_buffer().set_text(DataTable.strings, len(DataTable.strings))
        DataTable.strings = r''
        if self.scrwin_func.is_visible:
            self.textview_func.get_buffer().set_text(DataTable.functions, len(DataTable.functions))
        DataTable.functions = r''
        if self.scrwin_const.is_visible:
            self.textview_const.get_buffer().set_text(DataTable.constants, len(DataTable.constants))
        DataTable.constants = r''
        # Place file properties in the text-buffer
        properties_str_buf = DataTable.file_info + file_properties(_file)
        self.textview_prop.get_buffer().set_text(properties_str_buf, len(properties_str_buf))
        self.status(self.context_id, STATUS_FINISHED[1])
        self._window.queue_draw()


class FileChooserWin:  # pylint: disable=E1101,R0902,R0903,W0201
    """File Selection Window."""

    def __init__(self) -> None:
        """Initialize file selection window."""
        self.file_ui = Gtk.Builder()
        self.file_ui.add_from_string(buffer=_FILEGUI)
        self.file_ui.connect_signals({
            r'_cancel': self._cancel,
            r'_hidden': self._hidden,
            r'_select': self._select,
            r'_winexit': self._winexit
        })
        self._out: Union[list, str] = []

    def ezfilech(  # noqa: C901,R701
            self,
            _select_file: bool = True,
            _select_dir: bool = False,
            _multiple: bool = False,
            _savefile: bool = False,
            _viewhidden: bool = False,
            _file_exten: bool = True,
            _init_path: str = r'',
            _return_uri: bool = True,
            _return_dtype: str = r'list',
    ) -> Union[list, str]:
        """File Chooser Dialog: Select a file or folder."""
        # Parameters
        self._select_file: bool = _select_file
        self._select_dir: bool = _select_dir
        self._multiple: bool = _multiple
        self._savefile: bool = _savefile
        self._viewhidden: bool = _viewhidden
        self._file_exten: bool = _file_exten
        self._init_path: str = _init_path
        self._return_uri: bool = _return_uri
        self._return_dtype: str = _return_dtype
        # Window Objects
        self.filechooserwin = self.file_ui.get_object(r'ezwin')
        self._filew = self.file_ui.get_object(r'filechooser')
        self._chkbtn_hidden = self.file_ui.get_object(r'chkbtn1')
        self._chkbtn_dir = self.file_ui.get_object(r'chkbtn2')
        self._btn_ok = self.file_ui.get_object(r'btn1')
        # Set Widget Properties
        self._chkbtn_dir.set_visible(False)
        self._filew.set_create_folders(self._savefile)
        self._filew.set_select_multiple(self._multiple)
        self._filew.set_local_only(True)
        self._filew.set_show_hidden(self._viewhidden)
        self._chkbtn_hidden.set_active(self._viewhidden)
        if self._init_path:
            try:
                self._filew.set_current_folder(self._init_path)
            except (NameError, OSError, TypeError, ValueError):
                pass
        if self._select_dir and not self._savefile:
            self._filew.set_action(Gtk.FileChooserAction.SELECT_FOLDER)
            self._chkbtn_dir.set_visible(not self._multiple)
        elif self._select_dir and self._savefile:
            self._multiple = False
            self.filechooserwin.set_title(r'Save Data')
            self._btn_ok.set_label(r'Save')
            self._filew.set_action(Gtk.FileChooserAction.CREATE_FOLDER)
            self._filew.set_do_overwrite_confirmation(True)
        elif self._select_file and not self._savefile:
            self._filew.set_action(Gtk.FileChooserAction.OPEN)
        elif self._select_file and self._savefile:
            self._multiple = False
            self.filechooserwin.set_title(r'Save Data As')
            self._btn_ok.set_label(r'Save')
            self._filew.set_action(Gtk.FileChooserAction.SAVE)
            self._filew.set_do_overwrite_confirmation(True)
        else:
            self._savefile = False
            self._filew.set_action(Gtk.FileChooserAction.OPEN)
        # File Filters
        if self._select_file and self._file_exten:
            self._filter = Gtk.FileFilter()
            self._filter.set_name(r'All Files')
            self._filter.add_pattern(r'*')
            self._filew.add_filter(self._filter)
            self._filter = Gtk.FileFilter()
            self._filter.set_name(r'Application (Mime-type)')
            self._filter.add_mime_type(r'application/*')
            self._filter.add_mime_type(r'application/bin*')
            self._filter.add_mime_type(r'application/mac-binhex40')
            self._filter.add_mime_type(r'application/octet-stream')
            self._filew.add_filter(self._filter)
            self._filter = Gtk.FileFilter()
            self._filter.set_name(r'Text (Mime-type)')
            self._filter.add_mime_type(r'text/*')
            self._filew.add_filter(self._filter)
        # Begin Window
        Gtk.main()
        while Gtk.events_pending():
            Gtk.main_iteration_do(True)
        self.filechooserwin.queue_draw()
        return self._out

    def _winexit(self, *_x: Union[None, Tuple[Gtk.ApplicationWindow, None]]) -> None:  # pylint: disable=R0201
        """Close Window."""
        self.filechooserwin.destroy()
        Gtk.main_quit()

    def _cancel(self, *_x: Union[None, Tuple[Gtk.Button, None]]) -> None:  # pylint: disable=R0201
        """Cancel-Button functionality."""
        self._out = r'cancel'
        self.filechooserwin.destroy()
        Gtk.main_quit()

    def _select(self, *_x: Union[None, Tuple[Gtk.Button, None]]) -> None:  # noqa: C901,R701  # pylint: disable=R0201
        """Submit selection for processing using the select-button."""
        if self._select_dir and not self._multiple and self._chkbtn_dir.get_active():
            if self._return_uri and self._return_dtype == r'str':
                self._out = r' '.join(self._filew.get_current_folder_uri())
            elif self._return_uri and self._return_dtype != r'str':
                self._out = self._filew.get_current_folder_uri()
            elif not self._return_uri and self._return_dtype == r'str':
                self._out = r' '.join(self._filew.get_current_folder())
            else:
                self._out = self._filew.get_current_folder()
            self.filechooserwin.destroy()
            Gtk.main_quit()
            return
        if self._return_uri and self._return_dtype == r'str':
            self._out = r' '.join(self._filew.get_uris())
        elif self._return_uri and self._return_dtype != r'str':
            self._out = self._filew.get_uris()
        elif not self._return_uri and self._return_dtype == r'str':
            self._out = r' '.join(self._filew.get_filenames())
        else:
            self._out = self._filew.get_filenames()
        self.filechooserwin.destroy()
        Gtk.main_quit()

    def _hidden(self, _chkbtn: Tuple[Gtk.CheckButton, None]) -> None:
        """Toggle the visibility of hidden files using the hidden-checkbox."""
        self._viewhidden = not self._viewhidden
        self._filew.set_show_hidden(self._viewhidden)


# PROCESS & SHOW DATA #


def analyze_binary(cmd: str, _var: str, _flag: bool = True) -> Union[str, Tuple[str, str], Tuple[str, str, str]]:  # noqa: C901,R701  # pylint: disable=R0911
    """Thread helper for `run_threaded_analysis()`."""
    cmd = cmd.strip()
    if cmd.startswith(r'-'):
        return r''
    if _var == r'OBJDUMP_DISASSEMBLE' and r'semblance' in cmd:
        cmd = cmd.replace(r'--show-raw-insn', r'').replace(r'--source', r'')
        if not DataTable.is_semblance_available and DataTable.is_dumpne_available:
            cmd = cmd.replace(r'semblance', r'dumpne')
    if _var.startswith(r'OBJDUMP_'):
        if not DataTable.disassemble_type:
            cmd = cmd.replace(r'--disassembler-options=', r'')
        return getoutput(cmd)
    if _var == r'NM_DEFINED':
        _nm_defined = getoutput(cmd)
        try:
            _functions: str = getoutput(f'echo "{_nm_defined}" | grep " R " | awk \'{{ for (i = 3; i <= NF; ++i) {{ print $i; }} }}\' | grep -v -E -e "^_"')
            _constants: str = getoutput(f'echo "{_nm_defined}" | grep " T " | awk \'{{ for (i = 3; i <= NF; ++i) {{ print $i; }} }}\' | grep -v -E -e "^_"')
            if not _constants:
                _constants = r'No global constants found!'
        except OSError:
            _functions = _nm_defined
            _constants = r'See function list'
        if not _functions:
            _functions = r'No global functions found!'
        return (_nm_defined, _constants, _functions)
    if _var == r'FILE_DATA1':
        _tmp: tuple = getstatusoutput(cmd)
        if _tmp[0] == 0 and _tmp[1]:
            return '\n\n'.join(_tmp[1].split(r': ')).strip().replace(r', ', '\n')
        return _tmp[1]
    if _var in r'FILE_DATA2':
        _tmp = getstatusoutput(cmd)
        if _tmp[0] == 0 and _tmp[1]:
            return _tmp[1].split(r': ')[1].strip()
        return _tmp[1]
    if _var == r'LDCONFIG':
        _tmp_out: list = getoutput(cmd).split('\n')
        _output: list = []
        for line in _tmp_out:
            _output.append(line.strip())
        _output.sort()
        return '\n'.join(_output) + '\n'
    return getoutput(cmd)


def set_architecture_type(file_magic: str, _bits: str) -> Union[str, Tuple[int, str]]:  # noqa: C901,R701
    """Return variables indicating the architecture to use and the dissembler."""
    if _bits == r'16':
        DataTable.disassemble_type = r'i8086'
        DataTable.disassemble_cmd = fr'objdump -b binary --disassembler-options=i8086,att,addr16,data16 --architecture=i386'
        DataTable.objdump_cmd = fr'objdump -b binary --disassembler-options=i8086,att,addr16,data16 --architecture=i386'
        DataTable.nm_cmd = r'nm --target=binary'
        DataTable.readelf_cmd = r''
        DataTable.size_cmd = r'size --target=binary'
        DataTable.strings_cmd = r'strings'
        if r'ms-dos' in file_magic and (r'ne ' in file_magic or r'mz ' in file_magic):
            if DataTable.is_semblance_available:
                DataTable.disassemble_cmd = r'semblance --compilable --disassemble --disassembler-options=att'
            return r'i8086' if DataTable.is_objdump_available else STATUS_UNSUPPORTED_FILETYPE
        DataTable.disassemble_cmd = r'ndisasm -b 16'
        return r'i8086' if DataTable.is_ndisasm_available else STATUS_UNSUPPORTED_FILETYPE
    if r'elf' not in file_magic:
        return STATUS_UNSUPPORTED_FILETYPE
    if r'arm' in file_magic and _bits == r'32':
        return r'arm' if DataTable.is_linux_arm_available else STATUS_UNSUPPORTED_FILETYPE
    if r'alpha' in file_magic:
        return r'alpha' if DataTable.is_linux_alpha_available else STATUS_UNSUPPORTED_FILETYPE
    if r'pa-risc' in file_magic and _bits == r'32':
        return r'hppa' if DataTable.is_linux_hppa_available else STATUS_UNSUPPORTED_FILETYPE
    if r'pa-risc' in file_magic and _bits == r'64':
        return r'hppa64' if DataTable.is_linux_hppa64_available else STATUS_UNSUPPORTED_FILETYPE
    if r'powerpc' in file_magic and _bits == r'64':
        DataTable.disassemble_type = r'ppc64'
        return r'powerpc64' if DataTable.is_linux_powerpc64_available else STATUS_UNSUPPORTED_FILETYPE
    if r'powerpc' in file_magic and _bits == r'32':
        DataTable.disassemble_type = r'ppc32'
        return r'powerpc' if DataTable.is_linux_powerpc32_available else STATUS_UNSUPPORTED_FILETYPE
    if r's390x' in file_magic or r's/390' in file_magic:
        DataTable.disassemble_type = r'elf64-s390' if _bits == r'64' else r'elf32-s390'
        return r's390x' if DataTable.is_linux_s390x_available else STATUS_UNSUPPORTED_FILETYPE
    if r'sparc' in file_magic:
        DataTable.disassemble_type = r'elf64-sparc' if _bits == r'64' else r'elf32-sparc'
        return r'sparc64' if DataTable.is_linux_sparc64_available else STATUS_UNSUPPORTED_FILETYPE
    if r'x86-64' in file_magic:
        DataTable.disassemble_type = r'att'
        return r'x86_64' if DataTable.is_linux_x86_64_available else STATUS_UNSUPPORTED_FILETYPE
    if r'x86-32' in file_magic or r'i686' in file_magic:
        DataTable.disassemble_type = r'att'
        return r'i686' if DataTable.is_linux_x86_available else STATUS_UNSUPPORTED_FILETYPE
    return STATUS_UNSUPPORTED_FILETYPE


def setup_tools(_bits: str, _charset: str, _magic: str) -> Tuple[int, str]:  # noqa: C901,R701
    """Set the appropriate tools to use for the given data."""
    if _charset != r'binary':
        return STATUS_UNSUPPORTED_FILETYPE
    _prefix = set_architecture_type(_magic, _bits)
    if _prefix == STATUS_UNSUPPORTED_FILETYPE:
        return STATUS_UNSUPPORTED_FILETYPE
    if _prefix == r'arm':
        DataTable.nm_cmd = fr'{_prefix}-linux-gnueabi-nm'
        DataTable.disassemble_cmd = fr'{_prefix}-linux-gnueabi-objdump --disassembler-options={DataTable.disassemble_type}'
        DataTable.objdump_cmd = fr'{_prefix}-linux-gnueabi-objdump --disassembler-options={DataTable.disassemble_type}'
        DataTable.readelf_cmd = fr'{_prefix}-linux-gnueabi-readelf'
        DataTable.size_cmd = fr'{_prefix}-linux-gnueabi-size'
        DataTable.strings_cmd = fr'{_prefix}-linux-gnueabi-strings'
        return (37, r'')
    if r'pe32' in _magic or r'windows' in _magic or r'application/x-dosexec' in _magic:
        if _bits == r'64':
            if DataTable.is_win_x86_64_available is False:
                return STATUS_UNSUPPORTED_FILETYPE
            DataTable.nm_cmd = r'x86_64-w64-mingw32-nm'
            DataTable.disassemble_cmd = fr'x86_64-w64-mingw32-objdump --disassembler-options={DataTable.disassemble_type}'
            DataTable.objdump_cmd = fr'x86_64-w64-mingw32-objdump --disassembler-options={DataTable.disassemble_type}'
            DataTable.readelf_cmd = r'x86_64-w64-mingw32-readelf'
            DataTable.size_cmd = r'x86_64-w64-mingw32-size'
            DataTable.strings_cmd = r'x86_64-w64-mingw32-strings'
            return (37, r'')
        if _bits == r'32':
            if DataTable.is_win_x86_available is False:
                return STATUS_UNSUPPORTED_FILETYPE
            DataTable.nm_cmd = r'i686-w64-mingw32-nm'
            DataTable.disassemble_cmd = fr'i686-w64-mingw32-objdump --disassembler-options={DataTable.disassemble_type}'
            DataTable.objdump_cmd = fr'i686-w64-mingw32-objdump --disassembler-options={DataTable.disassemble_type}'
            DataTable.readelf_cmd = r'i686-w64-mingw32-readelf'
            DataTable.size_cmd = r'i686-w64-mingw32-size'
            DataTable.strings_cmd = r'i686-w64-mingw32-strings'
            return (37, r'')
        if _bits == r'16':
            return (37, r'')
        return STATUS_UNSUPPORTED_FILETYPE
    DataTable.nm_cmd = fr'{_prefix}-linux-gnu-nm'
    DataTable.disassemble_cmd = fr'{_prefix}-linux-gnu-objdump --disassembler-options={DataTable.disassemble_type}'
    DataTable.objdump_cmd = fr'{_prefix}-linux-gnu-objdump --disassembler-options={DataTable.disassemble_type}'
    DataTable.readelf_cmd = fr'{_prefix}-linux-gnu-readelf'
    DataTable.size_cmd = fr'{_prefix}-linux-gnu-size'
    DataTable.strings_cmd = fr'{_prefix}-linux-gnu-strings'
    return (37, r'')


def run_threaded_analysis(_file: str, _bits: str) -> None:
    """Run the different tools on the executable/binary."""
    poolsize: int = cpu_count()
    outbuf: List[Any] = [(r'', r'')]
    with Pool(16 if poolsize > 16 else poolsize) as threadpool:
        try:
            outbuf = threadpool.starmap(analyze_binary, [
                (fr'{DataTable.objdump_cmd} --line-numbers --special-syms --syms {_file}', r'OBJDUMP_SYMBOLS'),
                (fr'{DataTable.objdump_cmd} --line-numbers --dynamic-syms --special-syms {_file}', r'OBJDUMP_DYNAMIC_SYMBOLS'),
                (fr'{DataTable.nm_cmd} --debug-syms --dynamic --line-numbers --numeric-sort --print-armap --print-size --special-syms --synthetic {_file}', r'NM_SYMBOLS'),
                (fr'{DataTable.objdump_cmd} --dynamic-reloc --line-numbers {_file}', r'OBJDUMP_DYNAMIC_RELOCATION'),
                (fr'{DataTable.disassemble_cmd} --disassemble --show-raw-insn --source {_file}', r'OBJDUMP_DISASSEMBLE'),
                (fr'{DataTable.readelf_cmd} --arch-specific --debug-dump --decompress --file-header --histogram --notes --segments --unwind --version-info --wide {_file}', r'READELF'),
                (fr'{DataTable.objdump_cmd} --all-headers --archive-header --dwarf-check --file-offsets --full-contents --reloc --stabs --wide {_file}', r'OBJDUMP_HEADERS'),
                (DataTable.ldd_cmd + _file, r'OBJECT_DEPENDENCIES'),
                (DataTable.ldd_unused_cmd + _file, r'UNUSED_DEPENDENCIES'),
                (fr'{DataTable.strings_cmd} --all {_file}', r'STRINGS'),
                (fr'{DataTable.nm_cmd} --debug-syms --defined-only --dynamic --special-syms "{_file}"', r'NM_DEFINED', DataTable),
                (fr'{DataTable.size_cmd} --format=Berkeley {_file}', r'BINSIZE1'),
                (fr'{DataTable.size_cmd} --format=SysV {_file}', r'BINSIZE2'),
                (fr'file --preserve-date {_file}', r'FILE_DATA1'),
                (fr'file --mime --preserve-date {_file}', r'FILE_DATA2'),
                (DataTable.ldconfig_cmd, r'LDCONFIG')
            ])
            DataTable.objdump_symbols = outbuf[0]
            DataTable.objdump_dynamic_symbols = outbuf[1]
            DataTable.nm_symbols = outbuf[2] + '\n'
            DataTable.objdump_dynamic_relocation = outbuf[3]
            DataTable.objdump_disassemble = outbuf[4] + '\n'
            DataTable.readelf_all = outbuf[5] + '\n'
            DataTable.objdump_headers = outbuf[6]
            DataTable.object_dependencies = f'{outbuf[7]}\n\n** Unused Dependencies **\n{outbuf[8]}'
            if outbuf[9]:
                _tmp: list = outbuf[9].split('\n')
                _tmp.sort()
                DataTable.strings = '\n'.join(_tmp) + '\n'
            else:
                DataTable.strings = r''
            DataTable.nm_defined = outbuf[10][0] + '\n' if outbuf[10] else r''
            if outbuf[10] and outbuf[10][1]:
                _tmp = outbuf[10][1].split('\n')
                _tmp.sort()
                DataTable.constants = '\n'.join(_tmp) + '\n'
            else:
                DataTable.constants = r''
            if outbuf[10] and outbuf[10][2]:
                _tmp = outbuf[10][2].split('\n')
                _tmp.sort()
                DataTable.functions = '\n'.join(_tmp) + '\n'
            else:
                DataTable.functions = r''
            DataTable.binsize = outbuf[11] + '\n\n' + outbuf[12]
            DataTable.file_info = outbuf[13] + '\n\n' + outbuf[14] + '\n\n'
            DataTable.ldconfig_libraries = outbuf[15]
        except (KeyboardInterrupt, MemoryError):
            threadpool.close()
            threadpool.terminate()
            raise SystemExit(1)
        del outbuf


def file_properties(_file: str) -> str:
    """Gather and display file properties in `File Properties` tab."""
    _stat = stat(_file, follow_symlinks=False)
    _atime = datetime.fromtimestamp(int(fr'{_stat.st_atime:.0f}'), tz=TIMEZONE)
    _mtime = datetime.fromtimestamp(int(fr'{_stat.st_mtime:.0f}'), tz=TIMEZONE)
    _perm: str = oct(_stat.st_mode)[-3:]
    properties_str_buf: str = f'Mimetype: {NONE_MAGIC.file(_file)}\nCharacter Set: {MIME_ENCODING.file(_file)}\nIs link?: {islink(_file)}\nFile size (bytes): {_stat.st_size}\nInode Number: {_stat.st_ino}\nLast accessed: {_atime}\nLast modified: {_mtime}\nOwner UID: {_stat.st_uid}\nOwner GID: {_stat.st_gid}\nPermissions: {_perm}\numask (symbolic): {convumask(list(_perm))}'
    # Count Assembly Instructions
    if DataTable.is_insn_count_available:
        properties_str_buf += '\n\n\n* INSTRUCTION COUNT *\n\n'
        properties_str_buf += getoutput(fr'insn_count -c {_file}') + '\n\n\n'
        properties_str_buf += getoutput(fr'insn_count -m {_file}') + '\n'
    # Get Checksums
    properties_str_buf += '\n\n\n* CHECKSUMS *\n\n'
    if DataTable.is_sha256sum_available:
        _tmp: str = getoutput(DataTable.sha256sum_cmd + _file).split(r' = ')[1]
        properties_str_buf += f'SHA256: {_tmp.strip()}\n'
    else:
        properties_str_buf += r'Install the command `sha256sum` to support this feature'
    if DataTable.is_sha512sum_available:
        _tmp = getoutput(DataTable.sha512sum_cmd + _file).split(r' = ')[1]
        properties_str_buf += f'SHA512: {_tmp.strip()}\n\n'
    else:
        properties_str_buf += 'Install the command `sha512sum` to support this feature\n'
    return properties_str_buf


# MAIN #


if __name__ == '__main__':
    # Entry Point
    GETFILEDATA: bool = False
    if len(argv) == 1:
        FILEDATA: Tuple[int, str] = STATUS_SELECT_FILE
    elif len(argv) == 2:
        DataTable.bin_file = argv[1]
        if DataTable.bin_file == r'' or DataTable.bin_file is None:
            stderr.write('Null pathname given!\n')
            raise SystemExit(1)
        if not (pathexists(DataTable.bin_file) and isfile(DataTable.bin_file)):
            stderr.write('No file found\n')
            raise SystemExit(1)
        if isdir(DataTable.bin_file):
            stderr.write('This is a directory, not a file\n')
            raise SystemExit(1)
        if not fileaccess(DataTable.bin_file, R_OK):
            raise PermissionError
        GETFILEDATA = True
        FILEDATA = STATUS_SELECT_FILE
    else:
        raise Exception(r'Invalid number of arguments!')
    # Build GUI
    GTKWINDOW = MainWindow(GETFILEDATA, FILEDATA)
    del _GUI
    # Show Window
    Gtk.main()
    raise SystemExit(0)
