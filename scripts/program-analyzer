#!/usr/bin/env python3
# -*- coding: utf-8-unix; Mode: Python; indent-tabs-mode: nil; tab-width: 4 -*-
# vim: set fileencoding=utf-8 filetype=python syntax=python.doxygen fileformat=unix tabstop=4 expandtab :
# kate: encoding utf-8; bom off; syntax python; indent-mode python; eol unix; replace-tabs off; indent-width 4; tab-width 4; remove-trailing-space on; line-numbers on;
"""@brief View various information about a library or executable

@file program-analyzer
@version 2019.03.28
@author Devyn Collier Johnson <DevynCJohnson@Gmail.com>
@copyright LGPLv3

@section LICENSE
GNU Lesser General Public License v3
Copyright (c) Devyn Collier Johnson, All rights reserved.

This software is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This software is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with this software.
"""


# pylint: disable=C0103,R0912,R0915


from binascii import hexlify
from datetime import datetime
from multiprocessing import cpu_count, Pool
from os import R_OK, access as fileaccess, stat
from os.path import (
    isdir,
    isfile,
    islink,
    lexists as pathexists,
    split as pathsplit
)
from signal import SIGINT, SIG_DFL, signal
from subprocess import getoutput  # nosec
from sys import argv, stderr
from typing import Any, List, Tuple, Union

from pybooster.filemagic import MIME_ENCODING, NONE_MAGIC
from pybooster.fs import convumask
from pybooster.system import is_program_aval

from gi import require_version
require_version(r'Gtk', r'3.0')
from gi.repository import Gtk  # noqa: E402  # pylint: disable=C0413


_GUI: str = """<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated with glade 3.22.1

Copyright (C) LGPLv3

This file is part of Program-Analyzer.

Program-Analyzer is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Program-Analyzer is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with Program-Analyzer.  If not, see <http://www.gnu.org/licenses/>.

Author: Devyn Collier Johnson

-->
<interface>
  <requires lib="gtk+" version="3.20"/>
  <!-- interface-license-type lgplv3 -->
  <!-- interface-name Program-Analyzer -->
  <!-- interface-description Display the symbols and tables of a compiled program or library -->
  <!-- interface-copyright LGPLv3 -->
  <!-- interface-authors Devyn Collier Johnson -->
  <object class="GtkTextBuffer" id="buf_all_headers"/>
  <object class="GtkTextBuffer" id="buf_const"/>
  <object class="GtkTextBuffer" id="buf_dis"/>
  <object class="GtkTextBuffer" id="buf_dis_att"/>
  <object class="GtkTextBuffer" id="buf_dis_bin"/>
  <object class="GtkTextBuffer" id="buf_dis_hex"/>
  <object class="GtkTextBuffer" id="buf_dis_intel"/>
  <object class="GtkTextBuffer" id="buf_dyn_reloc"/>
  <object class="GtkTextBuffer" id="buf_dyn_sym"/>
  <object class="GtkTextBuffer" id="buf_func"/>
  <object class="GtkTextBuffer" id="buf_header"/>
  <object class="GtkTextBuffer" id="buf_nm_sym"/>
  <object class="GtkTextBuffer" id="buf_priv_headers"/>
  <object class="GtkTextBuffer" id="buf_prop"/>
  <object class="GtkTextBuffer" id="buf_readelf"/>
  <object class="GtkTextBuffer" id="buf_sec_headers"/>
  <object class="GtkTextBuffer" id="buf_size"/>
  <object class="GtkTextBuffer" id="buf_str"/>
  <object class="GtkTextBuffer" id="buf_sym"/>
  <object class="GtkApplicationWindow" id="ezwin">
    <property name="width_request">1600</property>
    <property name="height_request">1000</property>
    <property name="visible">True</property>
    <property name="can_focus">False</property>
    <property name="title">Program-Analyzer</property>
    <property name="window_position">center</property>
    <property name="default_width">1600</property>
    <property name="default_height">1000</property>
    <property name="icon_name">program-analyzer</property>
    <property name="has_resize_grip">True</property>
    <property name="show_menubar">False</property>
    <signal name="destroy" handler="_winexit" swapped="no"/>
    <child>
      <placeholder/>
    </child>
    <child>
      <object class="GtkBox" id="box">
        <property name="width_request">1600</property>
        <property name="height_request">1000</property>
        <property name="visible">True</property>
        <property name="can_focus">False</property>
        <property name="orientation">vertical</property>
        <child>
          <object class="GtkMenuBar" id="menubar">
            <property name="height_request">25</property>
            <property name="visible">True</property>
            <property name="can_focus">False</property>
            <child>
              <object class="GtkMenuItem" id="menu_item1">
                <property name="height_request">25</property>
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="label" translatable="yes">_File</property>
                <property name="use_underline">True</property>
                <child type="submenu">
                  <object class="GtkMenu" id="file_menu">
                    <property name="height_request">100</property>
                    <property name="visible">True</property>
                    <property name="can_focus">False</property>
                    <property name="anchor_hints">GDK_ANCHOR_FLIP_X</property>
                    <property name="menu_type_hint">menu</property>
                    <child>
                      <object class="GtkImageMenuItem" id="menuitem_open">
                        <property name="label">gtk-open</property>
                        <property name="height_request">25</property>
                        <property name="visible">True</property>
                        <property name="can_focus">False</property>
                        <property name="tooltip_text" translatable="yes">Open a binary file</property>
                        <property name="use_underline">True</property>
                        <property name="use_stock">True</property>
                        <property name="always_show_image">True</property>
                        <signal name="activate" handler="gtk_open" swapped="no"/>
                        <accelerator key="o" signal="activate" modifiers="GDK_CONTROL_MASK"/>
                      </object>
                    </child>
                    <child>
                      <object class="GtkImageMenuItem" id="menuitem_save">
                        <property name="label">gtk-save</property>
                        <property name="height_request">25</property>
                        <property name="visible">True</property>
                        <property name="can_focus">False</property>
                        <property name="tooltip_text" translatable="yes">Save</property>
                        <property name="use_underline">True</property>
                        <property name="use_stock">True</property>
                        <property name="always_show_image">True</property>
                        <signal name="activate" handler="gtk_save" swapped="no"/>
                        <accelerator key="s" signal="activate" modifiers="GDK_CONTROL_MASK"/>
                      </object>
                    </child>
                    <child>
                      <object class="GtkImageMenuItem" id="menuitem_saveas">
                        <property name="label">gtk-save-as</property>
                        <property name="height_request">25</property>
                        <property name="visible">True</property>
                        <property name="can_focus">False</property>
                        <property name="tooltip_text" translatable="yes">Select where to save the data</property>
                        <property name="use_underline">True</property>
                        <property name="use_stock">True</property>
                        <property name="always_show_image">True</property>
                        <signal name="activate" handler="gtk_saveas" swapped="no"/>
                        <accelerator key="s" signal="activate" modifiers="GDK_SHIFT_MASK | GDK_CONTROL_MASK"/>
                      </object>
                    </child>
                    <child>
                      <object class="GtkSeparatorMenuItem" id="menu_separator">
                        <property name="visible">True</property>
                        <property name="can_focus">False</property>
                      </object>
                    </child>
                    <child>
                      <object class="GtkImageMenuItem" id="menuitem_quit">
                        <property name="label">gtk-quit</property>
                        <property name="height_request">25</property>
                        <property name="visible">True</property>
                        <property name="can_focus">False</property>
                        <property name="tooltip_text" translatable="yes">Close the application</property>
                        <property name="use_underline">True</property>
                        <property name="use_stock">True</property>
                        <property name="always_show_image">True</property>
                        <signal name="activate" handler="_winexit" swapped="no"/>
                        <accelerator key="q" signal="activate" modifiers="GDK_CONTROL_MASK"/>
                        <accelerator key="w" signal="activate" modifiers="GDK_CONTROL_MASK"/>
                      </object>
                    </child>
                  </object>
                </child>
                <accelerator key="f" signal="activate" modifiers="GDK_CONTROL_MASK | GDK_MOD1_MASK"/>
              </object>
            </child>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">True</property>
            <property name="position">0</property>
          </packing>
        </child>
        <child>
          <object class="GtkNotebook" id="tabs">
            <property name="visible">True</property>
            <property name="can_focus">True</property>
            <property name="margin_left">5</property>
            <property name="margin_right">5</property>
            <property name="margin_top">5</property>
            <property name="margin_bottom">5</property>
            <property name="scrollable">True</property>
            <property name="enable_popup">True</property>
            <signal name="switch-page" handler="show_hide_save" swapped="no"/>
            <child>
              <object class="GtkScrolledWindow" id="scrolledwindow_prop">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_prop">
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="editable">False</property>
                    <property name="buffer">buf_prop</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">File Properties</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_prop">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text" translatable="yes">File properties &amp; information</property>
                <property name="label" translatable="yes">File Properties</property>
              </object>
              <packing>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrolledwindow_sym_tbl">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_sym_tbl">
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="editable">False</property>
                    <property name="buffer">buf_sym</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">Symbol Table</property>
                <property name="position">1</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_sym_tbl">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text" translatable="yes">Display the static symbol table
objdump --special-syms --syms</property>
                <property name="label" translatable="yes">Symbol Table</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">Symbol Table</property>
                <property name="position">1</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrolledwindow_dyn_sym">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_dyn_sym">
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="editable">False</property>
                    <property name="buffer">buf_dyn_sym</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">Dynamic Symbols</property>
                <property name="position">2</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_dyn_sym">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text" translatable="yes">Display the dynamic symbol table entries
objdump --special-syms --dynamic-syms</property>
                <property name="label" translatable="yes">Dynamic Symbols</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">Dynamic Symbols</property>
                <property name="position">2</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrolledwindow_nm_sym">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_nm_sym">
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="editable">False</property>
                    <property name="buffer">buf_nm_sym</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">nm (Symbol List)</property>
                <property name="position">3</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_nm_sym">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text" translatable="yes">Display symbols found by nm
nm --dynamic --no-sort --special-syms --debug-syms</property>
                <property name="label" translatable="yes">nm (Symbol List)</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">nm (Symbol List)</property>
                <property name="position">3</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrolledwindow_dyn_reloc">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_dyn_reloc">
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="editable">False</property>
                    <property name="buffer">buf_dyn_reloc</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">Dynamic Relocation</property>
                <property name="position">4</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_dyn_reloc">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text" translatable="yes">Display the dynamic relocation entries
objdump --dynamic-reloc</property>
                <property name="label" translatable="yes">Dynamic Relocation</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">Dynamic Relocation</property>
                <property name="position">4</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrolledwindow_dis">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_dis">
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="buffer">buf_dis</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">Disassembly</property>
                <property name="position">5</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_dis">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text" translatable="yes">Display the disassembled code
ndisasm</property>
                <property name="label" translatable="yes">Disassembly</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">Disassembly</property>
                <property name="position">5</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrolledwindow_dis_intel">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_dis_intel">
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="buffer">buf_dis_intel</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">Disassembly (Intel)</property>
                <property name="position">6</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_dis_intel">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text" translatable="yes">Display the disassembled code using Intel syntax
objdump --disassemble --no-show-raw-insn --disassembler-options=intel</property>
                <property name="label" translatable="yes">Disassembly (Intel)</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">Disassembly (Intel)</property>
                <property name="position">6</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrolledwindow_dis_att">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_dis_att">
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="buffer">buf_dis_att</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">Disassembly (AT&amp;T)</property>
                <property name="position">7</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_dis_att">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text" translatable="yes">Display the disassembled code using AT&amp;T syntax
objdump --disassemble --no-show-raw-insn --disassembler-options=att</property>
                <property name="label" translatable="yes">Disassembly (AT&amp;T)</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">Disassembly (AT&amp;T)</property>
                <property name="position">7</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrolledwindow_dis_bin">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="double_buffered">False</property>
                <property name="hscrollbar_policy">never</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_dis_bin">
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="double_buffered">False</property>
                    <property name="wrap_mode">char</property>
                    <property name="justification">fill</property>
                    <property name="left_margin">5</property>
                    <property name="right_margin">5</property>
                    <property name="buffer">buf_dis_bin</property>
                    <property name="accepts_tab">False</property>
                    <property name="input_purpose">digits</property>
                    <property name="monospace">True</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">Disassembly (Binary)</property>
                <property name="position">8</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_dis_bin">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text" translatable="yes">Display the disassembled code as binary</property>
                <property name="label" translatable="yes">Disassembly (Binary)</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">Disassembly (Binary)</property>
                <property name="position">8</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrolledwindow_dis_hex">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="double_buffered">False</property>
                <property name="hscrollbar_policy">never</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_dis_hex">
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="double_buffered">False</property>
                    <property name="wrap_mode">word</property>
                    <property name="justification">fill</property>
                    <property name="left_margin">5</property>
                    <property name="right_margin">5</property>
                    <property name="buffer">buf_dis_hex</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">Disassembly (Hexadecimal)</property>
                <property name="position">9</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_dis_hex">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text" translatable="yes">Display the disassembled code as hexadecimal</property>
                <property name="label" translatable="yes">Disassembly (Hex)</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">Disassembly (Hexadecimal)</property>
                <property name="position">9</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrolledwindow_readelf">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_readelf">
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="editable">False</property>
                    <property name="buffer">buf_readelf</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">Readelf</property>
                <property name="position">10</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_readelf">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text" translatable="yes">Display information returned by readelf
file --preserve-date
file --mime --preserve-date
readelf --all --section-groups --unwind --arch-specific --histogram --wide</property>
                <property name="label" translatable="yes">ReadElf</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">Readelf</property>
                <property name="position">10</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrolledwindow_all_headers">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_all_headers">
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="editable">False</property>
                    <property name="buffer">buf_all_headers</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">All Headers</property>
                <property name="position">11</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_all_headers">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text" translatable="yes">Display all file headers
objdump --all-headers --full-contents --archive-header --stabs --dwarf-check --wide</property>
                <property name="label" translatable="yes">All Headers</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">All Headers</property>
                <property name="position">11</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrolledwindow_header">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_header">
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="editable">False</property>
                    <property name="buffer">buf_header</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">File Header</property>
                <property name="position">12</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_header">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text" translatable="yes">Display the file header
objdump --file-headers</property>
                <property name="label" translatable="yes">File Header</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">File Header</property>
                <property name="position">12</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrolledwindow_priv_headers">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_priv_headers">
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="editable">False</property>
                    <property name="buffer">buf_priv_headers</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">Private Headers</property>
                <property name="position">13</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_priv_headers">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text" translatable="yes">Display the private headers
objdump --private-headers</property>
                <property name="label" translatable="yes">Private Headers</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">Private Headers</property>
                <property name="position">13</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrolledwindow_sec_headers">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_sec_headers">
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="editable">False</property>
                    <property name="buffer">buf_sec_headers</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">Section Headers</property>
                <property name="position">14</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_sec_headers">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text" translatable="yes">Display the section headers
objdump --section-headers</property>
                <property name="label" translatable="yes">Section Headers</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">Section Headers</property>
                <property name="position">14</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrolledwindow_size">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_size">
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="editable">False</property>
                    <property name="buffer">buf_size</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">Size</property>
                <property name="position">15</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_size">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text" translatable="yes">Display the results of size
size --format=Berkeley
size --format=SysV</property>
                <property name="label" translatable="yes">Size</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">Size</property>
                <property name="position">15</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrolledwindow_str">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_str">
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="editable">False</property>
                    <property name="buffer">buf_str</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">Strings</property>
                <property name="position">16</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_str">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text" translatable="yes">Display the contained strings
strings --all</property>
                <property name="label" translatable="yes">Strings</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">Strings</property>
                <property name="position">16</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrolledwindow_func">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_func">
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="editable">False</property>
                    <property name="buffer">buf_func</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">Functions</property>
                <property name="position">17</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_func">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text" translatable="yes">List all of the found functions</property>
                <property name="label" translatable="yes">Functions</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">Functions</property>
                <property name="position">17</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkScrolledWindow" id="scrolledwindow_const">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">etched-in</property>
                <property name="min_content_width">1400</property>
                <property name="min_content_height">800</property>
                <child>
                  <object class="GtkTextView" id="textview_const">
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="editable">False</property>
                    <property name="buffer">buf_const</property>
                    <property name="accepts_tab">False</property>
                    <property name="monospace">True</property>
                  </object>
                </child>
              </object>
              <packing>
                <property name="menu_label">Constants</property>
                <property name="position">18</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_const">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text" translatable="yes">List all of the found constants</property>
                <property name="label" translatable="yes">Constants</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">Constants</property>
                <property name="position">18</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkBox" id="about_box">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="margin_left">5</property>
                <property name="margin_right">5</property>
                <property name="margin_top">5</property>
                <property name="margin_bottom">5</property>
                <property name="orientation">vertical</property>
                <child>
                  <object class="GtkGrid" id="grid_about">
                    <property name="visible">True</property>
                    <property name="can_focus">False</property>
                    <property name="halign">center</property>
                    <property name="column_spacing">5</property>
                    <property name="column_homogeneous">True</property>
                    <child>
                      <object class="GtkLabel" id="lbl_about">
                        <property name="visible">True</property>
                        <property name="can_focus">False</property>
                        <property name="halign">start</property>
                        <property name="label" translatable="yes">Program-Analyzer
Version: 2018.12.28
Author: Devyn Collier Johnson
&amp;lt;&lt;a href="mailto:DevynCJohnson@Gmail.com"&gt;DevynCJohnson@Gmail.com&lt;/a&gt;&amp;gt;</property>
                        <property name="use_markup">True</property>
                        <property name="justify">center</property>
                        <property name="track_visited_links">False</property>
                      </object>
                      <packing>
                        <property name="left_attach">0</property>
                        <property name="top_attach">0</property>
                      </packing>
                    </child>
                    <child>
                      <object class="GtkLabel" id="lbl_donate">
                        <property name="visible">True</property>
                        <property name="can_focus">False</property>
                        <property name="halign">end</property>
                        <property name="label" translatable="yes">For more programs,
- Visit &lt;a href="http://DCJTech.info/"&gt;DCJTech.info&lt;/a&gt;
- Please donate to DCJTech</property>
                        <property name="use_markup">True</property>
                        <property name="track_visited_links">False</property>
                      </object>
                      <packing>
                        <property name="left_attach">1</property>
                        <property name="top_attach">0</property>
                      </packing>
                    </child>
                  </object>
                  <packing>
                    <property name="expand">False</property>
                    <property name="fill">True</property>
                    <property name="position">0</property>
                  </packing>
                </child>
                <child>
                  <object class="GtkSeparator" id="separator_about">
                    <property name="visible">True</property>
                    <property name="can_focus">False</property>
                    <property name="margin_top">5</property>
                    <property name="margin_bottom">5</property>
                  </object>
                  <packing>
                    <property name="expand">False</property>
                    <property name="fill">True</property>
                    <property name="padding">5</property>
                    <property name="position">1</property>
                  </packing>
                </child>
                <child>
                  <object class="GtkLabel" id="binutils_info">
                    <property name="visible">True</property>
                    <property name="can_focus">False</property>
                    <property name="track_visited_links">False</property>
                  </object>
                  <packing>
                    <property name="expand">False</property>
                    <property name="fill">True</property>
                    <property name="position">2</property>
                  </packing>
                </child>
              </object>
              <packing>
                <property name="menu_label">About</property>
                <property name="position">19</property>
                <property name="reorderable">True</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="tab_about">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text" translatable="yes">Information about Program-Analyzer and GNU-binutils</property>
                <property name="label" translatable="yes">About</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="menu_label">About</property>
                <property name="position">19</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
          </object>
          <packing>
            <property name="expand">True</property>
            <property name="fill">True</property>
            <property name="position">1</property>
          </packing>
        </child>
        <child>
          <object class="GtkGrid" id="grid_controls">
            <property name="height_request">35</property>
            <property name="visible">True</property>
            <property name="can_focus">False</property>
            <property name="margin_left">5</property>
            <property name="margin_right">5</property>
            <property name="margin_bottom">5</property>
            <property name="row_homogeneous">True</property>
            <property name="column_homogeneous">True</property>
            <child>
              <object class="GtkLabel" id="l_file">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="tooltip_text" translatable="yes">File location (pathname)</property>
                <property name="halign">start</property>
                <property name="margin_left">5</property>
                <property name="margin_right">5</property>
                <property name="margin_top">5</property>
                <property name="margin_bottom">5</property>
                <property name="label" translatable="yes">PathName</property>
                <property name="selectable">True</property>
                <property name="single_line_mode">True</property>
                <property name="track_visited_links">False</property>
              </object>
              <packing>
                <property name="left_attach">0</property>
                <property name="top_attach">0</property>
              </packing>
            </child>
            <child>
              <object class="GtkButton" id="btn_save">
                <property name="label">gtk-save</property>
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="receives_default">False</property>
                <property name="tooltip_text" translatable="yes">Save the currently displayed data</property>
                <property name="halign">center</property>
                <property name="margin_top">5</property>
                <property name="margin_bottom">5</property>
                <property name="use_stock">True</property>
                <property name="always_show_image">True</property>
                <signal name="clicked" handler="gtk_saveas" swapped="no"/>
              </object>
              <packing>
                <property name="left_attach">1</property>
                <property name="top_attach">0</property>
              </packing>
            </child>
            <child>
              <object class="GtkButton" id="btn_close">
                <property name="label">gtk-close</property>
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="receives_default">False</property>
                <property name="tooltip_text" translatable="yes">Exit Application</property>
                <property name="halign">end</property>
                <property name="margin_top">5</property>
                <property name="margin_bottom">5</property>
                <property name="use_stock">True</property>
                <property name="always_show_image">True</property>
                <signal name="clicked" handler="_winexit" object="ezwin" swapped="no"/>
                <accelerator key="q" signal="clicked" modifiers="GDK_CONTROL_MASK"/>
              </object>
              <packing>
                <property name="left_attach">2</property>
                <property name="top_attach">0</property>
              </packing>
            </child>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">False</property>
            <property name="position">2</property>
          </packing>
        </child>
        <child>
          <object class="GtkSeparator" id="separator_main">
            <property name="visible">True</property>
            <property name="can_focus">False</property>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">True</property>
            <property name="position">3</property>
          </packing>
        </child>
        <child>
          <object class="GtkStatusbar" id="statusbar">
            <property name="height_request">25</property>
            <property name="visible">True</property>
            <property name="can_focus">False</property>
            <property name="margin_left">5</property>
            <property name="margin_right">5</property>
            <property name="margin_start">10</property>
            <property name="margin_end">10</property>
            <property name="margin_top">5</property>
            <property name="margin_bottom">5</property>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">True</property>
            <property name="pack_type">end</property>
            <property name="position">4</property>
          </packing>
        </child>
      </object>
    </child>
  </object>
</interface>"""


_FILEGUI: str = """<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated with glade 3.22.1

Copyright (C) LGPLv3

This file is part of EzWin.

EzWin is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

EzWin is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with EzWin.  If not, see <http://www.gnu.org/licenses/>.

Author: Devyn Collier Johnson

-->
<interface>
  <requires lib="gtk+" version="3.20"/>
  <!-- interface-license-type lgplv3 -->
  <!-- interface-name EzWin -->
  <!-- interface-description File Selection -->
  <!-- interface-copyright LGPLv3 -->
  <!-- interface-authors Devyn Collier Johnson -->
  <object class="GtkApplicationWindow" id="ezwin">
    <property name="width_request">1200</property>
    <property name="height_request">800</property>
    <property name="visible">True</property>
    <property name="can_focus">False</property>
    <property name="title">Choose a File</property>
    <property name="window_position">center</property>
    <property name="icon_name">system-file-manager</property>
    <property name="type_hint">dialog</property>
    <property name="show_menubar">False</property>
    <signal name="delete-event" handler="_winexit" object="ezwin" swapped="no"/>
    <signal name="destroy-event" handler="_winexit" object="ezwin" swapped="no"/>
    <child>
      <placeholder/>
    </child>
    <child>
      <object class="GtkBox" id="box">
        <property name="visible">True</property>
        <property name="can_focus">False</property>
        <property name="margin_right">5</property>
        <property name="orientation">vertical</property>
        <child>
          <object class="GtkFileChooserWidget" id="filechooser">
            <property name="visible">True</property>
            <property name="can_focus">True</property>
            <property name="margin_bottom">5</property>
            <property name="create_folders">False</property>
            <property name="do_overwrite_confirmation">True</property>
          </object>
          <packing>
            <property name="expand">True</property>
            <property name="fill">True</property>
            <property name="position">0</property>
          </packing>
        </child>
        <child>
          <object class="GtkCheckButton" id="chkbtn2">
            <property name="label">Select current location</property>
            <property name="visible">True</property>
            <property name="can_focus">True</property>
            <property name="receives_default">False</property>
            <property name="tooltip_text">Marked - The current location/folder is returned

Empty - The selected folder is returned</property>
            <property name="halign">center</property>
            <property name="valign">center</property>
            <property name="draw_indicator">True</property>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">True</property>
            <property name="position">2</property>
          </packing>
        </child>
        <child>
          <object class="GtkGrid" id="grid">
            <property name="visible">True</property>
            <property name="can_focus">False</property>
            <property name="margin_left">5</property>
            <property name="margin_right">5</property>
            <property name="column_homogeneous">True</property>
            <child>
              <object class="GtkButton" id="btn1">
                <property name="label">gtk-ok</property>
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="receives_default">False</property>
                <property name="tooltip_text">Submit selection to the program that opened this dialog.</property>
                <property name="halign">start</property>
                <property name="valign">center</property>
                <property name="margin_top">5</property>
                <property name="margin_bottom">5</property>
                <property name="use_stock">True</property>
                <property name="always_show_image">True</property>
                <signal name="clicked" handler="_select" object="filechooser" swapped="no"/>
              </object>
              <packing>
                <property name="left_attach">0</property>
                <property name="top_attach">0</property>
              </packing>
            </child>
            <child>
              <object class="GtkCheckButton" id="chkbtn1">
                <property name="label">View hidden files</property>
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="receives_default">False</property>
                <property name="tooltip_text">Marked - Show hidden files
Empty - Hidden files not seen</property>
                <property name="halign">center</property>
                <property name="valign">center</property>
                <property name="draw_indicator">True</property>
                <signal name="toggled" handler="_hidden" object="filechooser" swapped="no"/>
              </object>
              <packing>
                <property name="left_attach">1</property>
                <property name="top_attach">0</property>
              </packing>
            </child>
            <child>
              <object class="GtkButton" id="btn2">
                <property name="label">gtk-cancel</property>
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="receives_default">False</property>
                <property name="tooltip_text">Cancel</property>
                <property name="halign">end</property>
                <property name="valign">center</property>
                <property name="margin_top">5</property>
                <property name="margin_bottom">5</property>
                <property name="use_stock">True</property>
                <property name="always_show_image">True</property>
                <signal name="clicked" handler="_cancel" object="ezwin" swapped="no"/>
              </object>
              <packing>
                <property name="left_attach">2</property>
                <property name="top_attach">0</property>
              </packing>
            </child>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">True</property>
            <property name="pack_type">end</property>
            <property name="position">4</property>
          </packing>
        </child>
      </object>
    </child>
  </object>
</interface>"""

signal(SIGINT, SIG_DFL)


# STATUSBAR MESSAGES #


STATUS_UNSUPPORTED_FILETYPE: Tuple[int, str] = (-1, r'Unsupported filetype')
STATUS_SELECT_FILE: Tuple[int, str] = (0, r'Select a file to open')
STATUS_OPENING_FILE: Tuple[int, str] = (1, r'Opening file ')
STATUS_OPENED_FILE: Tuple[int, str] = (2, r'Opened ')
STATUS_ANALYZING: Tuple[int, str] = (3, r'Analyzing')
STATUS_FINISHED: Tuple[int, str] = (4, r'Finished opening and analyzing')
STATUS_WRITING: Tuple[int, str] = (5, r'Writing saved data')


# CLASSES #


class DataTable:  # pylint: disable=R0903
    """Global readonly table for all threads to get data concerning the available tools"""
    is_insn_count_available: bool = is_program_aval(r'insn_count')
    is_ndisasm_available: bool = is_program_aval(r'ndisasm')
    is_linux_alpha_available: bool = is_program_aval(r'alpha-linux-gnu-objdump')
    is_linux_arm_available: bool = is_program_aval(r'arm-linux-gnueabi-objdump')
    is_linux_hppa_available: bool = is_program_aval(r'hppa-linux-gnu-objdump')
    is_linux_hppa64_available: bool = is_program_aval(r'hppa64-linux-gnu-objdump')
    is_linux_s390x_available: bool = is_program_aval(r's390x-linux-gnu-objdump')
    is_linux_sparc64_available: bool = is_program_aval(r'sparc64-linux-gnu-objdump')
    is_linux_x86_available: bool = is_program_aval(r'i686-linux-gnu-objdump')
    is_linux_x86_64_available: bool = is_program_aval(r'x86_64-linux-gnu-objdump')
    is_win_x86_available: bool = is_program_aval(r'i686-w64-mingw32-objdump')
    is_win_x86_64_available: bool = is_program_aval(r'x86_64-w64-mingw32-objdump')


class TempTable:  # pylint: disable=R0903
    """Global table for all threads to set and get data"""
    bin_data: str = r''
    binsize: str = r''
    constants: str = r''
    functions: str = r''
    hex_data: str = r''
    lastused: str = r''
    nm_defined: str = r''
    nm_symbols: str = r''
    objdump_all_headers: str = r''
    objdump_disassemble: str = r''
    objdump_disassemble_att: str = r''
    objdump_disassemble_intel: str = r''
    objdump_dynamic_relocation: str = r''
    objdump_dynamic_symbols: str = r''
    objdump_file_header: str = r''
    objdump_private_headers: str = r''
    objdump_section_headers: str = r''
    objdump_symbols: str = r''
    readelf_all: str = r''
    strings: str = r''


class FileChooserWin:  # pylint: disable=E1101,R0902,R0903,W0201
    """File Selection Window"""

    def __init__(self) -> None:
        """Initialize file selection window"""
        self.file_ui = Gtk.Builder()
        self.file_ui.add_from_string(buffer=_FILEGUI)
        self.file_ui.connect_signals({
            r'_cancel': self._cancel,
            r'_hidden': self._hidden,
            r'_select': self._select,
            r'_winexit': self._winexit
        })
        self._out: Union[list, str] = []

    def ezfilech(
            self,
            _select_file: bool = True,
            _select_dir: bool = False,
            _multiple: bool = False,
            _savefile: bool = False,
            _viewhidden: bool = False,
            _file_exten: bool = True,
            _init_path: str = r'',
            _return_uri: bool = True,
            _return_dtype: str = r'list',
    ) -> Union[list, str]:
        """File Chooser Dialog: Select a file or folder"""
        # Parameters
        self._select_file: bool = _select_file
        self._select_dir: bool = _select_dir
        self._multiple: bool = _multiple
        self._savefile: bool = _savefile
        self._viewhidden: bool = _viewhidden
        self._file_exten: bool = _file_exten
        self._init_path: str = _init_path
        self._return_uri: bool = _return_uri
        self._return_dtype: str = _return_dtype
        # Window Objects
        self.filechooserwin = self.file_ui.get_object(r'ezwin')
        self._filew = self.file_ui.get_object(r'filechooser')
        self._chkbtn_hidden = self.file_ui.get_object(r'chkbtn1')
        self._chkbtn_dir = self.file_ui.get_object(r'chkbtn2')
        self._btn_ok = self.file_ui.get_object(r'btn1')
        # Set Widget Properties
        self._chkbtn_dir.set_visible(False)
        self._filew.set_create_folders(self._savefile)
        self._filew.set_select_multiple(self._multiple)
        self._filew.set_local_only(True)
        self._filew.set_show_hidden(self._viewhidden)
        self._chkbtn_hidden.set_active(self._viewhidden)
        if self._init_path:
            try:
                self._filew.set_current_folder(self._init_path)
            except (NameError, OSError, TypeError, ValueError):
                pass
        if self._select_dir and not self._savefile:
            self._filew.set_action(Gtk.FileChooserAction.SELECT_FOLDER)
            self._chkbtn_dir.set_visible(not self._multiple)
        elif self._select_dir and self._savefile:
            self._multiple = False
            self.filechooserwin.set_title(r'Save Data')
            self._btn_ok.set_label(r'Save')
            self._filew.set_action(Gtk.FileChooserAction.CREATE_FOLDER)
            self._filew.set_do_overwrite_confirmation(True)
        elif self._select_file and not self._savefile:
            self._filew.set_action(Gtk.FileChooserAction.OPEN)
        elif self._select_file and self._savefile:
            self._multiple = False
            self.filechooserwin.set_title(r'Save Data As')
            self._btn_ok.set_label(r'Save')
            self._filew.set_action(Gtk.FileChooserAction.SAVE)
            self._filew.set_do_overwrite_confirmation(True)
        else:
            self._savefile = False
            self._filew.set_action(Gtk.FileChooserAction.OPEN)
        # File Filters
        if self._select_file and self._file_exten:
            self._filter = Gtk.FileFilter()
            self._filter.set_name(r'All Files')
            self._filter.add_pattern(r'*')
            self._filew.add_filter(self._filter)
            self._filter = Gtk.FileFilter()
            self._filter.set_name(r'Application (Mime-type)')
            self._filter.add_mime_type(r'application/*')
            self._filter.add_mime_type(r'application/bin*')
            self._filter.add_mime_type(r'application/mac-binhex40')
            self._filter.add_mime_type(r'application/octet-stream')
            self._filew.add_filter(self._filter)
            self._filter = Gtk.FileFilter()
            self._filter.set_name(r'Text (Mime-type)')
            self._filter.add_mime_type(r'text/*')
            self._filew.add_filter(self._filter)
        # Begin Window
        Gtk.main()
        while Gtk.events_pending():
            Gtk.main_iteration_do(True)
        _window.queue_draw()
        return self._out

    def _winexit(self, *_x: Union[None, Tuple[Gtk.ApplicationWindow, None]]) -> None:  # pylint: disable=R0201
        """Close Window"""
        self.filechooserwin.destroy()
        Gtk.main_quit()

    def _cancel(self, *_x: Union[None, Tuple[Gtk.Button, None]]) -> None:  # pylint: disable=R0201
        """Cancel-Button functionality"""
        self._out = r'cancel'
        self.filechooserwin.destroy()
        Gtk.main_quit()

    def _select(self, *_x: Union[None, Tuple[Gtk.Button, None]]) -> None:  # pylint: disable=R0201
        """Submit selection for processing using the select-button"""
        if self._select_dir and not self._multiple and self._chkbtn_dir.get_active():
            if self._return_uri and self._return_dtype == r'str':
                self._out = r' '.join(self._filew.get_current_folder_uri())
            elif self._return_uri and self._return_dtype != r'str':
                self._out = self._filew.get_current_folder_uri()
            elif not self._return_uri and self._return_dtype == r'str':
                self._out = r' '.join(self._filew.get_current_folder())
            else:
                self._out = self._filew.get_current_folder()
            self.filechooserwin.destroy()
            Gtk.main_quit()
            return
        if self._return_uri and self._return_dtype == r'str':
            self._out = r' '.join(self._filew.get_uris())
        elif self._return_uri and self._return_dtype != r'str':
            self._out = self._filew.get_uris()
        elif not self._return_uri and self._return_dtype == r'str':
            self._out = r' '.join(self._filew.get_filenames())
        else:
            self._out = self._filew.get_filenames()
        self.filechooserwin.destroy()
        Gtk.main_quit()

    def _hidden(self, _chkbtn: Tuple[Gtk.CheckButton, None]) -> None:
        """Toggle the visibility of hidden files using the hidden-checkbox"""
        self._viewhidden = not self._viewhidden
        self._filew.set_show_hidden(self._viewhidden)


# OPEN & SAVE #


def gtk_open(_menuitem: Gtk.ImageMenuItem = None) -> None:
    """Select a file to open"""
    statusbar.push(context_id, STATUS_OPENING_FILE[1])
    try:
        _filewin = FileChooserWin()
        _binfile = _filewin.ezfilech(_init_path=r'/', _return_uri=False, _return_dtype=r'str')
        del _filewin
    except TypeError:
        statusbar.push(context_id, r'Error occurred while opening file')
        stderr.write('Error occurred while opening file\n')
        return
    if not isinstance(_binfile, str) or _binfile == r'[]':
        statusbar.push(context_id, r'File opening cancelled by user')
        return
    if _binfile == r'cancel' or _binfile == r'' or _binfile is None:
        statusbar.push(context_id, r'File opening cancelled by user')
        return
    if not pathexists(_binfile) or not isfile(_binfile):
        statusbar.push(context_id, r'FileNotFoundError')
        return
    if isdir(_binfile):
        statusbar.push(context_id, r'IsADirectoryError')
        return
    if not fileaccess(_binfile, R_OK):
        statusbar.push(context_id, r'PermissionError')
        return
    refreshdata(_binfile, getdis(_binfile))


def gtk_save(_button: Gtk.Button) -> None:
    """Save the data"""
    if not isinstance(TempTable.lastused, str) or TempTable.lastused in {r'', r'cancel'}:
        gtk_saveas(_button)
        return
    save_data(tabs.get_current_page(), TempTable.lastused)


def gtk_saveas(_button: Gtk.Button) -> None:
    """Choose where to save the data"""
    # Select File
    try:
        _filewin = FileChooserWin()
        savefilepath = _filewin.ezfilech(_select_dir=False, _savefile=True, _init_path=r'/', _return_uri=False, _return_dtype=r'str')
        del _filewin
    except (IndexError, SyntaxError, TypeError):
        statusbar.push(context_id, r'Error occurred while saving file')
        stderr.write('Error occurred while saving file\n')
        return
    if not isinstance(savefilepath, str) or savefilepath == r'[]':
        statusbar.push(context_id, r'File saving cancelled by user')
        return
    if savefilepath == r'cancel' or savefilepath == r'' or savefilepath is None:
        statusbar.push(context_id, r'File saving cancelled by user')
        return
    # Sava Data
    save_data(tabs.get_current_page(), savefilepath)


def save_data(active_tab: int, savefilepath: str) -> None:  # noqa: C901
    """Perform the actual data-save"""
    TempTable.lastused = savefilepath
    tabs_page_num = tabs.page_num
    if active_tab == tabs_page_num(scrolledwindow_prop):  # tab_prop
        save_buffer_data = textview_prop.get_buffer()
    elif active_tab == tabs_page_num(scrolledwindow_sym_tbl):  # tab_sym_tbl
        save_buffer_data = textview_sym_tbl.get_buffer()
    elif active_tab == tabs_page_num(scrolledwindow_dyn_sym):  # tab_dyn_sym
        save_buffer_data = textview_dyn_sym.get_buffer()
    elif active_tab == tabs_page_num(scrolledwindow_nm_sym):  # tab_nm_sym
        save_buffer_data = textview_nm_sym.get_buffer()
    elif active_tab == tabs_page_num(scrolledwindow_dyn_reloc):  # tab_dyn_reloc
        save_buffer_data = textview_dyn_reloc.get_buffer()
    elif active_tab == tabs_page_num(scrolledwindow_dis):  # tab_dis
        save_buffer_data = textview_dis.get_buffer()
    elif active_tab == tabs_page_num(scrolledwindow_dis_intel):  # tab_dis_intel
        save_buffer_data = textview_dis_intel.get_buffer()
    elif active_tab == tabs_page_num(scrolledwindow_dis_att):  # tab_dis_att
        save_buffer_data = textview_dis_att.get_buffer()
    elif active_tab == tabs_page_num(scrolledwindow_dis_bin):  # tab_dis_bin
        save_buffer_data = textview_dis_bin.get_buffer()
    elif active_tab == tabs_page_num(scrolledwindow_dis_hex):  # tab_dis_hex
        save_buffer_data = textview_dis_hex.get_buffer()
    elif active_tab == tabs_page_num(scrolledwindow_readelf):  # tab_readelf
        save_buffer_data = textview_readelf.get_buffer()
    elif active_tab == tabs_page_num(scrolledwindow_all_headers):  # tab_all_headers
        save_buffer_data = textview_all_headers.get_buffer()
    elif active_tab == tabs_page_num(scrolledwindow_header):  # tab_header
        save_buffer_data = textview_header.get_buffer()
    elif active_tab == tabs_page_num(scrolledwindow_priv_headers):  # tab_priv_headers
        save_buffer_data = textview_priv_headers.get_buffer()
    elif active_tab == tabs_page_num(scrolledwindow_sec_headers):  # tab_sec_headers
        save_buffer_data = textview_sec_headers.get_buffer()
    elif active_tab == tabs_page_num(scrolledwindow_size):  # tab_size_size
        save_buffer_data = textview_size.get_buffer()
    elif active_tab == tabs_page_num(scrolledwindow_str):  # tab_str
        save_buffer_data = textview_str.get_buffer()
    elif active_tab == tabs_page_num(scrolledwindow_func):  # tab_func
        save_buffer_data = textview_str.get_buffer()
    elif active_tab == tabs_page_num(scrolledwindow_const):  # tab_const
        save_buffer_data = textview_const.get_buffer()
    try:
        write2file(savefilepath, save_buffer_data.get_text(save_buffer_data.get_start_iter(), save_buffer_data.get_end_iter(), True))
        del save_buffer_data
    except OSError:
        TempTable.lastused = r''
        statusbar.push(context_id, r'OSError when writing file')
        stderr.write('OSError when writing file\n')
    except BaseException as _err:
        TempTable.lastused = r''
        statusbar.push(context_id, r'Exception thrown when writing file')
        stderr.write(str(_err) + '\n')
    statusbar.push(context_id, r'File saved')


def write2file(_filename: str, _write: str) -> None:
    """Send data to new file or overwrite file"""
    statusbar.push(context_id, STATUS_WRITING[1])
    with open(_filename, mode=r'wt', encoding=r'utf-8') as _file:
        _file.write(str(_write, encoding=r'utf-8'))  # type: ignore


# SHOW/HIDE SAVE-BUTTONS #


def show_hide_save(_notebook: Gtk.Notebook, page: Union[Gtk.Box, Gtk.ScrolledWindow], page_num: int) -> None:  # pylint: disable=W0613
    """Show or hide the save buttons"""
    if page_num == _notebook.page_num(about_box):
        btn_save.set_visible(False)
        menuitem_save.set_visible(False)
        menuitem_saveas.set_visible(False)
    elif page.is_visible():
        btn_save.set_visible(True)
        menuitem_save.set_visible(True)
        menuitem_saveas.set_visible(True)


# PROCESS & SHOW DATA #


def analyze_binary(cmd: str, _var: str, _flag: bool = True) -> Union[str, Tuple[str, str], Tuple[str, str, str]]:  # noqa: C901  # pylint: disable=R0911
    """Thread helper for `getdis()`"""
    if _var.startswith(r'OBJDUMP_'):
        if _var == r'OBJDUMP_ALL_HEADERS':
            return getoutput(cmd)
        if _var == r'OBJDUMP_FILE_HEADER':
            return getoutput(cmd)
        if _var == r'OBJDUMP_PRIVATE_HEADERS':
            return getoutput(cmd)
        if _var == r'OBJDUMP_SECTION_HEADERS':
            return getoutput(cmd)
        if _var == r'OBJDUMP_SYMBOLS':
            return getoutput(cmd)
        if _var == r'OBJDUMP_DYNAMIC_SYMBOLS':
            return getoutput(cmd)
        if _var == r'OBJDUMP_DYNAMIC_RELOCATION':
            return getoutput(cmd)
        if _var == r'OBJDUMP_DISASSEMBLE':
            return getoutput(cmd) if DataTable.is_ndisasm_available and _flag else r'ndisasm is unavailable'
        if _var == r'OBJDUMP_DISASSEMBLE_INTEL':
            return getoutput(cmd)
        if _var == r'OBJDUMP_DISASSEMBLE_ATT':
            return getoutput(cmd)
        return r''
    if _var == r'BINSIZE':
        return getoutput(cmd)
    if _var == r'NM_DEFINED':
        _nm_defined = getoutput(cmd)
        try:
            _functions = getoutput(r'echo "' + _nm_defined + '" | grep " R " | awk \'{ for (i = 3; i <= NF; ++i) { print $i; } }\' | grep -v -E -e "^_"')
            _constants = getoutput(r'echo "' + _nm_defined + '" | grep " T " | awk \'{ for (i = 3; i <= NF; ++i) { print $i; } }\' | grep -v -E -e "^_"')
        except OSError:
            _functions = _nm_defined
            _constants = r'See function list'
        if not _functions:
            _functions = r'No global functions found!'
        if not _constants:
            _constants = r'No global constants found!'
        return (_nm_defined, _functions, _constants)
    if _var == r'NM_SYMBOLS':
        return getoutput(cmd)
    if _var == r'READELF_ALL':
        return getoutput(cmd)
    if _var == r'STRINGS':
        return getoutput(cmd)
    if _var == r'RAW':
        if stat(cmd).st_size < 1000000:
            hexified_data: bytes = b''
            with open(cmd, mode=r'rb') as _fileobj:
                hexified_data = hexlify(_fileobj.read())
                del _fileobj
                _bin_data = bin(int(hexified_data, 16))[2:].zfill(8)
                _hex_data = str(hexified_data, encoding=r'utf-8')
            del hexified_data
            _hex_data = r' '.join(_x + _y for _x, _y in zip(_hex_data[::2], _hex_data[1::2]))
            scrolledwindow_dis_bin.set_visible(True)
            scrolledwindow_dis_hex.set_visible(True)
            return (_bin_data, _hex_data)
        return (r'', r'')
    return r''


def getdis(_file: str) -> Tuple[int, str]:  # noqa: C901  # pylint: disable=R0914
    """Get data from the file and disassemble"""
    statusbar.push(context_id, STATUS_ANALYZING[1])
    # Gather filetype information
    _charset = MIME_ENCODING.file(_file)
    _magic = NONE_MAGIC.file(_file)
    # Is 32 or 64 bits?
    if any(_pattern in _magic for _pattern in {r'32-bit', r'80386', r'i686', r'PE32 ', r'x86-32'}):
        _bits = r'32'
    elif any(_pattern in _magic for _pattern in {r'64-bit', r'PE32+', r'x86-64'}):
        _bits = r'64'
    else:
        _bits = r'NA'
    # Setup tools
    _filecmd: str = r'file'
    if _charset != r'binary':
        return STATUS_UNSUPPORTED_FILETYPE
    if r'ELF' in _magic:
        if r'ARM' in _magic and _bits == r'32':
            if DataTable.is_linux_arm_available is False:
                return STATUS_UNSUPPORTED_FILETYPE
            _use_ndisasm = False
            _prefix = r'arm'
        elif r'Alpha' in _magic:
            if DataTable.is_linux_alpha_available is False:
                return STATUS_UNSUPPORTED_FILETYPE
            _use_ndisasm = False
            _prefix = r'alpha'
        elif r'PA-RISC' in _magic and _bits == r'32':
            if DataTable.is_linux_hppa_available is False:
                return STATUS_UNSUPPORTED_FILETYPE
            _use_ndisasm = False
            _prefix = r'hppa'
        elif r'PA-RISC' in _magic and _bits == r'64':
            if DataTable.is_linux_hppa64_available is False:
                return STATUS_UNSUPPORTED_FILETYPE
            _use_ndisasm = False
            _prefix = r'hppa64'
        elif r's390x' in _magic:
            if DataTable.is_linux_s390x_available is False:
                return STATUS_UNSUPPORTED_FILETYPE
            _use_ndisasm = False
            _prefix = r's390x'
        elif r'SPARC' in _magic:
            if DataTable.is_linux_sparc64_available is False:
                return STATUS_UNSUPPORTED_FILETYPE
            _use_ndisasm = False
            _prefix = r'sparc64'
        elif r'x86-64' in _magic:
            if DataTable.is_linux_x86_64_available is False:
                return STATUS_UNSUPPORTED_FILETYPE
            _use_ndisasm = True
            _prefix = r'x86_64'
        elif r'x86-32' in _magic or r'i686' in _magic:
            if DataTable.is_linux_x86_available is False:
                return STATUS_UNSUPPORTED_FILETYPE
            _use_ndisasm = True
            _prefix = r'i686'
        else:
            return STATUS_UNSUPPORTED_FILETYPE
        if _prefix == r'arm':
            _nm = _prefix + r'-linux-gnueabi-nm'
            _objdump = _prefix + r'-linux-gnueabi-objdump'
            _readelf = _prefix + r'-linux-gnueabi-readelf'
            _size = _prefix + r'-linux-gnueabi-size'
            _strings = _prefix + r'-linux-gnueabi-strings'
        else:
            _nm = _prefix + r'-linux-gnu-nm'
            _objdump = _prefix + r'-linux-gnu-objdump'
            _readelf = _prefix + r'-linux-gnu-readelf'
            _size = _prefix + r'-linux-gnu-size'
            _strings = _prefix + r'-linux-gnu-strings'
    elif r'PE32' in _magic or r'Windows' in _magic or r'application/x-dosexec' in _magic:
        if _bits == r'64':
            if DataTable.is_win_x86_64_available is False:
                return STATUS_UNSUPPORTED_FILETYPE
            _use_ndisasm = True
            _nm = r'x86_64-w64-mingw32-nm'
            _objdump = r'x86_64-w64-mingw32-objdump'
            _readelf = r'x86_64-w64-mingw32-readelf'
            _size = r'x86_64-w64-mingw32-size'
            _strings = r'x86_64-w64-mingw32-strings'
        elif _bits == r'32':
            if DataTable.is_win_x86_available is False:
                return STATUS_UNSUPPORTED_FILETYPE
            _use_ndisasm = True
            _nm = r'i686-w64-mingw32-nm'
            _objdump = r'i686-w64-mingw32-objdump'
            _readelf = r'i686-w64-mingw32-readelf'
            _size = r'i686-w64-mingw32-size'
            _strings = r'i686-w64-mingw32-strings'
        else:
            return STATUS_UNSUPPORTED_FILETYPE
    else:
        return STATUS_UNSUPPORTED_FILETYPE
    # Get the data using parallel processing
    poolsize: int = cpu_count()
    poolsize = 16 if poolsize > 16 else poolsize
    outbuf: List[Any] = [(r'', r'')]
    with Pool(poolsize) as threadpool:
        try:
            outbuf = threadpool.starmap(analyze_binary, [
                (_file, r'RAW'),
                (_objdump + r' --special-syms --dynamic-syms ' + _file, r'OBJDUMP_DYNAMIC_SYMBOLS'),
                (_nm + r' --dynamic --no-sort --special-syms --debug-syms ' + _file, r'NM_SYMBOLS'),
                (_objdump + r' --dynamic-reloc ' + _file, r'OBJDUMP_DYNAMIC_RELOCATION'),
                (r'ndisasm -b ' + _bits + r' ' + _file, r'OBJDUMP_DISASSEMBLE', _use_ndisasm),
                (_objdump + r' --disassemble --disassembler-options=intel --no-show-raw-insn ' + _file, r'OBJDUMP_DISASSEMBLE_INTEL'),  # --disassemble-all --source --disassemble-zeroes
                (_objdump + r' --disassemble --disassembler-options=att --no-show-raw-insn ' + _file, r'OBJDUMP_DISASSEMBLE_ATT'),
                (_filecmd + r' --preserve-date ' + _file + r'; ' + _filecmd + r' --mime --preserve-date ' + _file + r'; ' + _readelf + r' --all --section-groups --unwind --arch-specific --histogram --wide ' + _file, r'READELF_ALL'),
                (_objdump + r' --all-headers --full-contents --archive-header --stabs --dwarf-check --wide ' + _file, r'OBJDUMP_ALL_HEADERS'),
                (_objdump + r' --file-headers ' + _file, r'OBJDUMP_FILE_HEADER'),
                (_objdump + r' --private-headers ' + _file, r'OBJDUMP_PRIVATE_HEADERS'),
                (_objdump + r' --section-headers ' + _file, r'OBJDUMP_SECTION_HEADERS'),
                (_size + r' --format=Berkeley ' + _file + r'; ' + _size + r' --format=SysV ' + _file, r'BINSIZE'),
                (_strings + r' --all ' + _file, r'STRINGS'),
                (_nm + r' --dynamic --defined-only --special-syms --debug-syms "' + _file + r'"', r'NM_DEFINED', TempTable),
                (_objdump + r' --special-syms --syms ' + _file, r'OBJDUMP_SYMBOLS')
            ])
            TempTable.bin_data = outbuf[0][0]
            TempTable.hex_data = outbuf[0][1]
            TempTable.objdump_dynamic_symbols = outbuf[1]
            TempTable.nm_symbols = outbuf[2]
            TempTable.objdump_dynamic_relocation = outbuf[3]
            TempTable.objdump_disassemble = outbuf[4]
            TempTable.objdump_disassemble_intel = outbuf[5]
            TempTable.objdump_disassemble_att = outbuf[6]
            TempTable.readelf_all = outbuf[7]
            TempTable.objdump_all_headers = outbuf[8]
            TempTable.objdump_file_header = outbuf[9]
            TempTable.objdump_private_headers = outbuf[10]
            TempTable.objdump_section_headers = outbuf[11]
            TempTable.binsize = outbuf[12]
            TempTable.strings = outbuf[13]
            TempTable.nm_defined = outbuf[14][0]
            TempTable.functions = outbuf[14][1]
            TempTable.constants = outbuf[14][2]
            TempTable.objdump_symbols = outbuf[15]
        except (KeyboardInterrupt, MemoryError):
            threadpool.close()
            threadpool.terminate()
            raise SystemExit(1)
        del outbuf
    # Make the scrollable boxes within each tab visible
    scrolledwindow_sym_tbl.set_visible(True)
    scrolledwindow_dyn_sym.set_visible(True)
    scrolledwindow_nm_sym.set_visible(True)
    scrolledwindow_dyn_reloc.set_visible(True)
    scrolledwindow_dis.set_visible(True)
    scrolledwindow_dis_intel.set_visible(True)
    scrolledwindow_dis_att.set_visible(True)
    scrolledwindow_readelf.set_visible(True)
    scrolledwindow_all_headers.set_visible(True)
    scrolledwindow_header.set_visible(True)
    scrolledwindow_priv_headers.set_visible(True)
    scrolledwindow_sec_headers.set_visible(True)
    scrolledwindow_size.set_visible(True)
    scrolledwindow_str.set_visible(True)
    scrolledwindow_func.set_visible(True)
    scrolledwindow_const.set_visible(True)
    if not TempTable.bin_data:
        scrolledwindow_dis_bin.set_visible(False)
        scrolledwindow_dis_hex.set_visible(False)
    # Return
    return STATUS_FINISHED


def file_properties(_file: str) -> None:
    """Gather and display file properties in `File Properties` tab"""
    _stat = stat(_file, follow_symlinks=False)
    _atime = datetime.fromtimestamp(int(r'{:.0f}'.format(_stat.st_atime)))
    _mtime = datetime.fromtimestamp(int(r'{:.0f}'.format(_stat.st_mtime)))
    _perm: str = oct(_stat.st_mode)[-3:]
    properties_str_buf: str = r'Mimetype: ' + NONE_MAGIC.file(_file) + '\nCharacter Set: ' + MIME_ENCODING.file(_file) + '\nIs link?: ' + str(islink(_file)) + '\nFile size (bytes): ' + str(_stat.st_size) + '\nInode Number: ' + str(_stat.st_ino) + '\nLast accessed: ' + str(_atime) + '\nLast modified: ' + str(_mtime) + '\nOwner UID: ' + str(_stat.st_uid) + '\nOwner GID: ' + str(_stat.st_gid) + '\nPermissions: ' + _perm + '\numask (symbolic): ' + convumask(list(_perm))
    # Count Assembly Instructions
    if DataTable.is_insn_count_available:
        properties_str_buf += '\n\n\n* INSTRUCTION COUNT *\n\n' + getoutput(r'insn_count -c ' + _file) + '\n\n\n' + getoutput(r'insn_count -m ' + _file)
    # Place properties in the text-buffer
    textview_prop.get_buffer().set_text(properties_str_buf, len(properties_str_buf))


def refreshdata(_file: str, _datatuple: tuple) -> None:  # noqa: C901
    """Place the data in the text-buffers of the window"""
    tabs.set_current_page(0)
    statusbar.push(context_id, STATUS_ANALYZING[1])
    if _datatuple[0] == -1:
        statusbar.push(context_id, STATUS_UNSUPPORTED_FILETYPE[1])
        return
    # Set and display data
    _tmp_file_name = pathsplit(_file)[1]
    _window.set_title(r'Program-Analyzer: ' + _tmp_file_name)
    l_file.set_text(_tmp_file_name)
    del _tmp_file_name
    if scrolledwindow_dis_bin.is_visible:
        textview_dis_bin.get_buffer().set_text(TempTable.bin_data, len(TempTable.bin_data))
    TempTable.bin_data = r''
    if scrolledwindow_dis_hex.is_visible:
        textview_dis_hex.get_buffer().set_text(TempTable.hex_data, len(TempTable.hex_data))
    TempTable.hex_data = r''
    if scrolledwindow_dis.is_visible:
        textview_dis.get_buffer().set_text(TempTable.objdump_disassemble, len(TempTable.objdump_disassemble))
    TempTable.objdump_disassemble = r''
    if scrolledwindow_dis_intel.is_visible:
        textview_dis_intel.get_buffer().set_text(TempTable.objdump_disassemble_intel, len(TempTable.objdump_disassemble_intel))
    TempTable.objdump_disassemble_intel = r''
    if scrolledwindow_dis_att.is_visible:
        textview_dis_att.get_buffer().set_text(TempTable.objdump_disassemble_att, len(TempTable.objdump_disassemble_att))
    TempTable.objdump_disassemble_att = r''
    if scrolledwindow_sym_tbl.is_visible:
        textview_sym_tbl.get_buffer().set_text(TempTable.objdump_symbols, len(TempTable.objdump_symbols))
    TempTable.objdump_symbols = r''
    if scrolledwindow_dyn_sym.is_visible:
        textview_dyn_sym.get_buffer().set_text(TempTable.objdump_dynamic_symbols, len(TempTable.objdump_dynamic_symbols))
    TempTable.objdump_dynamic_symbols = r''
    if scrolledwindow_nm_sym.is_visible:
        textview_nm_sym.get_buffer().set_text(TempTable.nm_symbols, len(TempTable.nm_symbols))
    TempTable.nm_symbols = r''
    if scrolledwindow_dyn_reloc.is_visible:
        textview_dyn_reloc.get_buffer().set_text(TempTable.objdump_dynamic_relocation, len(TempTable.objdump_dynamic_relocation))
    TempTable.objdump_dynamic_relocation = r''
    if scrolledwindow_header.is_visible:
        textview_header.get_buffer().set_text(TempTable.objdump_file_header, len(TempTable.objdump_file_header))
    TempTable.objdump_file_header = r''
    if scrolledwindow_readelf.is_visible:
        textview_readelf.get_buffer().set_text(TempTable.readelf_all, len(TempTable.readelf_all))
    TempTable.readelf_all = r''
    if scrolledwindow_all_headers.is_visible:
        textview_all_headers.get_buffer().set_text(TempTable.objdump_all_headers, len(TempTable.objdump_all_headers))
    TempTable.objdump_all_headers = r''
    if scrolledwindow_priv_headers.is_visible:
        textview_priv_headers.get_buffer().set_text(TempTable.objdump_private_headers, len(TempTable.objdump_private_headers))
    TempTable.objdump_private_headers = r''
    if scrolledwindow_sec_headers.is_visible:
        textview_sec_headers.get_buffer().set_text(TempTable.objdump_section_headers, len(TempTable.objdump_section_headers))
    TempTable.objdump_section_headers = r''
    if scrolledwindow_size.is_visible:
        textview_size.get_buffer().set_text(TempTable.binsize, len(TempTable.binsize))
    TempTable.binsize = r''
    if scrolledwindow_str.is_visible:
        textview_str.get_buffer().set_text(TempTable.strings, len(TempTable.strings))
    TempTable.strings = r''
    if scrolledwindow_func.is_visible:
        textview_func.get_buffer().set_text(TempTable.functions, len(TempTable.functions))
    TempTable.functions = r''
    if scrolledwindow_const.is_visible:
        textview_const.get_buffer().set_text(TempTable.constants, len(TempTable.constants))
    TempTable.constants = r''
    file_properties(_file)
    statusbar.push(context_id, STATUS_FINISHED[1])
    _window.queue_draw()


# MAIN #


if __name__ == '__main__':
    # Entry Point
    GETFILEDATA: bool = False
    if len(argv) == 1:
        FILEDATA: Tuple[int, str] = STATUS_SELECT_FILE
    elif len(argv) == 2:
        BINFILE = argv[1]
        if BINFILE == r'' or BINFILE is None:
            raise Exception(r'NULL PATHNAME GIVEN!')
        elif not pathexists(BINFILE) or not isfile(BINFILE):
            raise FileNotFoundError
        elif isdir(BINFILE):
            raise IsADirectoryError
        elif not fileaccess(BINFILE, R_OK):
            raise PermissionError
        GETFILEDATA = True
        FILEDATA = STATUS_SELECT_FILE
    else:
        raise Exception(r'Invalid number of arguments!')
    # Build GUI
    ui = Gtk.Builder()
    ui.add_from_string(buffer=_GUI)
    del _GUI
    # Get GTK Objects
    ui_get_object = ui.get_object
    _window = ui_get_object(name=r'ezwin')
    statusbar = ui_get_object(name=r'statusbar')
    context_id = statusbar.get_context_id(r'NULL')
    statusbar.push(context_id, r'')
    tabs = ui_get_object(name=r'tabs')
    tabs.set_current_page(0)
    about_box = ui_get_object(name=r'about_box')
    binutils_info = ui_get_object(name=r'binutils_info')
    btn_save = ui_get_object(name=r'btn_save')
    menuitem_save = ui_get_object(name=r'menuitem_save')
    menuitem_saveas = ui_get_object(name=r'menuitem_saveas')
    l_file = ui_get_object(name=r'l_file')
    scrolledwindow_all_headers = ui_get_object(name=r'scrolledwindow_all_headers')
    scrolledwindow_const = ui_get_object(name=r'scrolledwindow_const')
    scrolledwindow_dis = ui_get_object(name=r'scrolledwindow_dis')
    scrolledwindow_dis_att = ui_get_object(name=r'scrolledwindow_dis_att')
    scrolledwindow_dis_bin = ui_get_object(name=r'scrolledwindow_dis_bin')
    scrolledwindow_dis_hex = ui_get_object(name=r'scrolledwindow_dis_hex')
    scrolledwindow_dis_intel = ui_get_object(name=r'scrolledwindow_dis_intel')
    scrolledwindow_dyn_reloc = ui_get_object(name=r'scrolledwindow_dyn_reloc')
    scrolledwindow_dyn_sym = ui_get_object(name=r'scrolledwindow_dyn_sym')
    scrolledwindow_func = ui_get_object(name=r'scrolledwindow_func')
    scrolledwindow_header = ui_get_object(name=r'scrolledwindow_header')
    scrolledwindow_nm_sym = ui_get_object(name=r'scrolledwindow_nm_sym')
    scrolledwindow_priv_headers = ui_get_object(name=r'scrolledwindow_priv_headers')
    scrolledwindow_prop = ui_get_object(name=r'scrolledwindow_prop')
    scrolledwindow_readelf = ui_get_object(name=r'scrolledwindow_readelf')
    scrolledwindow_sec_headers = ui_get_object(name=r'scrolledwindow_sec_headers')
    scrolledwindow_size = ui_get_object(name=r'scrolledwindow_size')
    scrolledwindow_str = ui_get_object(name=r'scrolledwindow_str')
    scrolledwindow_sym_tbl = ui_get_object(name=r'scrolledwindow_sym_tbl')
    textview_all_headers = ui_get_object(name=r'textview_all_headers')
    textview_const = ui_get_object(name=r'textview_const')
    textview_dis = ui_get_object(name=r'textview_dis')
    textview_dis_att = ui_get_object(name=r'textview_dis_att')
    textview_dis_bin = ui_get_object(name=r'textview_dis_bin')
    textview_dis_hex = ui_get_object(name=r'textview_dis_hex')
    textview_dis_intel = ui_get_object(name=r'textview_dis_intel')
    textview_dyn_reloc = ui_get_object(name=r'textview_dyn_reloc')
    textview_dyn_sym = ui_get_object(name=r'textview_dyn_sym')
    textview_func = ui_get_object(name=r'textview_func')
    textview_header = ui_get_object(name=r'textview_header')
    textview_nm_sym = ui_get_object(name=r'textview_nm_sym')
    textview_priv_headers = ui_get_object(name=r'textview_priv_headers')
    textview_prop = ui_get_object(name=r'textview_prop')
    textview_readelf = ui_get_object(name=r'textview_readelf')
    textview_sec_headers = ui_get_object(name=r'textview_sec_headers')
    textview_size = ui_get_object(name=r'textview_size')
    textview_str = ui_get_object(name=r'textview_str')
    textview_sym_tbl = ui_get_object(name=r'textview_sym_tbl')
    # Window Title
    l_file.set_text(r'Program-Analyzer')
    # Set GNU-Binutls Info in About-tab
    binutils_info.set_text(getoutput(r'objdump --version'))
    # Signal Handlers
    ui.connect_signals({
        r'gtk_open': gtk_open,
        r'gtk_save': gtk_save,
        r'gtk_saveas': gtk_saveas,
        r'show_hide_save': show_hide_save,
        r'_winexit': Gtk.main_quit
    })
    # Begin Program
    if GETFILEDATA:
        FILEDATA = getdis(BINFILE)  # Get data from the chosen file
    del GETFILEDATA
    statusbar.push(context_id, FILEDATA[1])
    if FILEDATA[0] >= 2:
        refreshdata(BINFILE, FILEDATA)
    else:
        gtk_open()
    # Show Window
    Gtk.main()
    raise SystemExit(0)
