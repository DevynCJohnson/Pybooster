#!/bin/sh
# -*- coding: utf-8-unix; Mode: Shell; indent-tabs-mode: nil; tab-width: 4 -*-
# vim: set fileencoding=utf-8 filetype=shell syn=sh.doxygen fileformat=unix tabstop=4 expandtab :
# kate: encoding utf-8; bom off; syntax shell; indent-mode normal; eol unix; replace-tabs on; indent-width 4; tab-width 4; remove-trailing-space on;
#' @brief Get incoming data, pass it to a command-line calculator, and then return the result as a decimal number
#' @file hex2num
#' @version 2019.03.28
#' @author Devyn Collier Johnson <DevynCJohnson@Gmail.com>
#' @copyright Public Domain (CC0) - https://creativecommons.org/publicdomain/zero/1.0/


ISPIPE=1


# GET DATA #


if [ -n "${1:-}" ]; then  # Parameter
    incoming_data="$1"
    ISPIPE=0
else  # Pipe
    read -r incoming_data
    if [ -z "${incoming_data:-}" ]; then
        printf 'ERROR: There is no incoming data!\n' >&2
        exit 1
    fi
fi


if [ $ISPIPE = 1 ]; then
    fmt4pipe() { awk 'ORS=""; NF;'; }
else
    fmt4pipe() { awk NF; }
fi


# PASS DATA TO CALCULATOR #


if [ -x "$(command -v wcalc)" ]; then
    echo "$incoming_data" | tr '[:lower:]' '[:upper:]' | sed 's|0X||; s|^|0x|' | wcalc -dec | sed 's|[ \t]*~=[ \t]*||; s|[ \t]*=[ \t]*||' | fmt4pipe
elif [ -x "$(command -v bc)" ]; then
    num="$(echo "${incoming_data}" | tr '[:lower:]' '[:upper:]' | sed 's|0X||')"
    printf '%s\n' "$(echo "obase=10;ibase=16;${num}" | bc)" | fmt4pipe
elif [ -x "$(command -v python3)" ]; then
    num="$(echo "${incoming_data}" | tr '[:lower:]' '[:upper:]' | sed 's|0X||; s|^|0x|')"
    python3 -c "print(int(${num}))" | fmt4pipe
else
    num="$(echo "${incoming_data}" | tr '[:lower:]' '[:upper:]' | sed 's|0X||; s|^|0x|')"
    echo "$(("${num}"))" | fmt4pipe || printf 'ERROR: No suitable command-line calculator found!\nInstall one of the following: wcalc or bc\n' >&2
fi
