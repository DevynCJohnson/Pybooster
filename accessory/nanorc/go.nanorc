syntax "go" "\.go$"
comment "//"

# TYPES #

color green "\<(bool|u?int(8|16|32|64)?|float(32|64)|complex(64|128)|byte|rune|uintptr|string|error)\>"
color green "\<((<-[[:space:]]*)chan|chan[[:space:]]*<-|const|func|interface|map|struct|type|var)\>"

# PREDEFINED FUNCTIONS #

color blue "\<(append|cap|close|complex|copy|delete|imag|len|make|new|panic|print|println|real|recover)\>"

# CONTROL STRUCTURES #

color brightyellow "\<(case|default|defer|else|for|go|if|range|select|switch)\>"

# CONTROL FLOW #

color magenta "\<(break|continue|fallthrough|goto|return)\>"

# DECLARATIONS #

color brightcyan "\<(package|import)\>"
color brightcyan "//[[:space:]]*\+build[[:space:]]+(([a-zA-Z_0-9]+[[:space:]]*)+,[[:space:]]*)*[a-zA-Z_0-9]+"

# LITERALS #

color red "\<0([0-7]*|[xX][0-9a-fA-F]+)\>"
color red "(\<0+|\B)\.[0-9]+([Ee][+-]?[0-9]+)?i?\>"
color red "\<[1-9][0-9]*(\.[0-9]*)?([Ee][+-]?[0-9]+)?i?\>"

# STRINGS & CHARACTERS #

color red "\<(true|false|nil|iota|_)\>"
color red "'(\\.|[^'])+'"
color red ""(\\.|[^"])*""
color red start=""(\\.|[^"])*\\[[:space:]]*$" end="^(\\.|[^"])*""

# COMMENTS #

color brightblue "//.*"
color brightblue start="/\*" end="\*/"

# TRAILING WHITESPACE #

color ,green "[[:space:]]+$"
