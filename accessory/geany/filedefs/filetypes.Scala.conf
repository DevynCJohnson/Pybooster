[keywords]
docComment=a addindex addtogroup anchor arg attention author authors b brief bug c callergraph callgraph category cite class code cond copybrief copydetails copydoc copyright date def defgroup deprecated details dir dontinclude dot dotfile e else elseif em endcode endcond enddot endhtmlonly endif endinternal endlatexonly endlink endmanonly endmsc endrtfonly endverbatim endxmlonly enum example exception extends file fn headerfile hideinitializer htmlinclude htmlonly if ifnot image implements include includelineno ingroup interface internal invariant latexonly li license line link mainpage manonly memberof msc mscfile n name namespace nosubgrouping note overload p package page par paragraph param param[in] post pre private privatesection property protected protectedsection protocol public publicsection ref related relatedalso relates relatesalso remark remarks result return returns retval rtfonly sa section see short showinitializer since skip skipline snippet struct subpage subsection subsubsection tableofcontents test throw throws todo tparam typedef union until var verbatim verbinclude version warning weakgroup xmlonly xrefitem
primary==> @ abstract case catch class def do else extends false final finally for forSome if implicit import lazy match new object override package private protected requires return sealed throw trait true try type val var while with yield
secondary=AllRef Any AnyRef Array Attribute Console Elem Iterable List Nil None null Option Predef Some Stack String super this Unit

[lexer_properties=C]
lexer.cpp.triplequoted.strings=1

[settings]
lexer_filetype=C
extension=scala
mime_type=text/x-scala
comment_single=//
comment_open=/*
comment_close=*/
comment_use_indent=true

[indentation]
type=1
width=4

[build_settings]
compiler=scala -c "%d/%f"
run_cmd="%d/%e"
