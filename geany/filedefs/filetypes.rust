[keywords]
docComment=a addindex addtogroup anchor annotatedclasslist arg attention author authors b brief bug c callergraph callgraph category cite class classhierarchy code cond copybrief copydetails copydoc copyright date def defgroup define deprecated details diafile dir docbookonly dontinclude dot dotfile e else elseif em endcode endcond enddocbookonly enddot endhtmlonly endif endinternal endlatexonly endlink endmanonly endmsc endparblock endrtfonly endsecreflist enduml endverbatim endxmlonly enum example exception extends ff[ f] file fn functionindex f{ f} header headerfile headerfilelist hidecallergraph hidecallgraph hideinitializer htmlinclude htmlonly idlexcept if ifnot image implements include includedoc includelineno ingroup inherit interface internal invariant l latexinclude latexonly li license line link mainpage manonly memberof msc mscfile n name namespace nosubgrouping note overload p package page par paragraph param param[in] parblock post postheader pre private privatesection property protected protectedsection protocol public publicsection pure ref refitem related relatedalso relates relatesalso remark remarks result return returns retval rtfonly sa secreflist section see short showinitializer since skip skipline snippet snippetdoc snippetlineno startuml static struct subpage subsection subsubsection tableofcontents test throw throws todo tparam typedef union until var verbatim verbinclude version vhdlflow warning weakgroup xmlonly xrefitem
primary=abstract alignof as become box break const continue crate do else enum extern false final fn for if impl in let loop macro match mod move mut offsetof override priv proc pub pure ref return self sizeof static struct super trait true type typeof unsafe unsized use virtual where while yield
secondary=bool char f32 f64 i16 i32 i64 i8 isize str u16 u32 u64 u8 usize
tertiary=Self

[lexer_properties]
fold.rust.comment.explicit=1
fold.rust.comment.multiline=1
fold.rust.explicit.anywhere=1
fold.rust.explicit.end=// }
fold.rust.explicit.start=// (FB){
lexer.cpp.track.preprocessor=0
lexer.rust.fold.at.else=1
styling.within.preprocessor=1

[settings]
extension=rs
mime_type=text/x-rustsrc
comment_single=//
comment_open=/*
comment_close=*/
comment_use_indent=true
context_action_cmd=

[indentation]
type=1
width=4

[build-menu]
FT_00_LB=Compile
FT_00_CM=rustc "%f"
FT_00_WD=
NF_00_LB=Cargo Build
NF_00_CM=cargo build
NF_00_WD=
NF_01_LB=Cargo Test
NF_01_CM=cargo test
NF_01_WD=
NF_02_LB=Cargo Bench
NF_02_CM=cargo bench
NF_02_WD=
EX_00_LB=Run
EX_00_CM="./%e"
EX_00_WD=
EX_01_LB=Cargo Run
EX_01_CM=cargo run
EX_01_WD=
