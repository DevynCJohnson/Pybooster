[styling=C]

[keywords]
docComment=a addindex addtogroup anchor annotatedclasslist arg attention author authors b brief bug c callergraph callgraph category cite class classhierarchy code cond copybrief copydetails copydoc copyright date def defgroup define deprecated details diafile dir docbookonly dontinclude dot dotfile e else elseif em endcode endcond enddocbookonly enddot endhtmlonly endif endinternal endlatexonly endlink endmanonly endmsc endparblock endrtfonly endsecreflist enduml endverbatim endxmlonly enum example exception extends ff[ f] file fn functionindex f{ f} header headerfile headerfilelist hidecallergraph hidecallgraph hideinitializer htmlinclude htmlonly idlexcept if ifnot image implements include includedoc includelineno ingroup inherit interface internal invariant l latexinclude latexonly li license line link mainpage manonly memberof msc mscfile n name namespace nosubgrouping note overload p package page par paragraph param param[in] parblock post postheader pre private privatesection property protected protectedsection protocol public publicsection pure ref refitem related relatedalso relates relatesalso remark remarks result return returns retval rtfonly sa secreflist section see short showinitializer since skip skipline snippet snippetdoc snippetlineno startuml static struct subpage subsection subsubsection tableofcontents test throw throws todo tparam typedef union until var verbatim verbinclude version vhdlflow warning weakgroup xmlonly xrefitem
primary==> @ abstract case catch class def do else extends false final finally for forSome if implicit import lazy match new object override package private protected requires return sealed throw trait true try type val var while with yield
secondary=AllRef Any AnyRef Array Attribute Console Elem Iterable List Nil None null Option Predef Some Stack String super this Unit

[lexer_properties=C]
lexer.cpp.triplequoted.strings=1

[settings]
lexer_filetype=C
extension=scala
mime_type=text/x-scala
comment_single=//
comment_open=/*
comment_close=*/
comment_use_indent=true

[indentation]
type=1
width=4

[build-menu]
FT_00_LB=_Compile
FT_00_CM=scala -c "%d/%f"
FT_00_WD=
FT_01_LB=
FT_01_CM=
FT_01_WD=
EX_00_LB=_Execute
EX_00_CM="%d/%e"
EX_00_WD=
